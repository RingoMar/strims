// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.12.3
// source: nickserv.proto

package pb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ServerConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key             *Key     `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	NameChangeQuota uint32   `protobuf:"varint,2,opt,name=name_change_quota,json=nameChangeQuota,proto3" json:"name_change_quota,omitempty"`
	TokenTtl        uint64   `protobuf:"varint,3,opt,name=token_ttl,json=tokenTtl,proto3" json:"token_ttl,omitempty"`
	Roles           []string `protobuf:"bytes,4,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *ServerConfig) Reset() {
	*x = ServerConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nickserv_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerConfig) ProtoMessage() {}

func (x *ServerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_nickserv_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerConfig.ProtoReflect.Descriptor instead.
func (*ServerConfig) Descriptor() ([]byte, []int) {
	return file_nickserv_proto_rawDescGZIP(), []int{0}
}

func (x *ServerConfig) GetKey() *Key {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *ServerConfig) GetNameChangeQuota() uint32 {
	if x != nil {
		return x.NameChangeQuota
	}
	return 0
}

func (x *ServerConfig) GetTokenTtl() uint64 {
	if x != nil {
		return x.TokenTtl
	}
	return 0
}

func (x *ServerConfig) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

type NickRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerPublicKey            *Key     `protobuf:"bytes,1,opt,name=peer_public_key,json=peerPublicKey,proto3" json:"peer_public_key,omitempty"`
	Name                     string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	UpdatedTimestamp         int64    `protobuf:"varint,3,opt,name=updated_timestamp,json=updatedTimestamp,proto3" json:"updated_timestamp,omitempty"`
	CreatedTimestamp         int64    `protobuf:"varint,4,opt,name=created_timestamp,json=createdTimestamp,proto3" json:"created_timestamp,omitempty"`
	RemainingNameChangeQuota uint32   `protobuf:"varint,5,opt,name=remaining_name_change_quota,json=remainingNameChangeQuota,proto3" json:"remaining_name_change_quota,omitempty"`
	Roles                    []string `protobuf:"bytes,6,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *NickRecord) Reset() {
	*x = NickRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nickserv_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NickRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NickRecord) ProtoMessage() {}

func (x *NickRecord) ProtoReflect() protoreflect.Message {
	mi := &file_nickserv_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NickRecord.ProtoReflect.Descriptor instead.
func (*NickRecord) Descriptor() ([]byte, []int) {
	return file_nickserv_proto_rawDescGZIP(), []int{1}
}

func (x *NickRecord) GetPeerPublicKey() *Key {
	if x != nil {
		return x.PeerPublicKey
	}
	return nil
}

func (x *NickRecord) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NickRecord) GetUpdatedTimestamp() int64 {
	if x != nil {
		return x.UpdatedTimestamp
	}
	return 0
}

func (x *NickRecord) GetCreatedTimestamp() int64 {
	if x != nil {
		return x.CreatedTimestamp
	}
	return 0
}

func (x *NickRecord) GetRemainingNameChangeQuota() uint32 {
	if x != nil {
		return x.RemainingNameChangeQuota
	}
	return 0
}

func (x *NickRecord) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

type NickServToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnerPublicKey *Key     `protobuf:"bytes,1,opt,name=owner_public_key,json=ownerPublicKey,proto3" json:"owner_public_key,omitempty"`
	Nick           string   `protobuf:"bytes,2,opt,name=nick,proto3" json:"nick,omitempty"`
	Roles          []string `protobuf:"bytes,3,rep,name=roles,proto3" json:"roles,omitempty"`
	ValidUntil     uint64   `protobuf:"varint,4,opt,name=valid_until,json=validUntil,proto3" json:"valid_until,omitempty"`
	Signature      []byte   `protobuf:"bytes,5,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *NickServToken) Reset() {
	*x = NickServToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nickserv_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NickServToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NickServToken) ProtoMessage() {}

func (x *NickServToken) ProtoReflect() protoreflect.Message {
	mi := &file_nickserv_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NickServToken.ProtoReflect.Descriptor instead.
func (*NickServToken) Descriptor() ([]byte, []int) {
	return file_nickserv_proto_rawDescGZIP(), []int{2}
}

func (x *NickServToken) GetOwnerPublicKey() *Key {
	if x != nil {
		return x.OwnerPublicKey
	}
	return nil
}

func (x *NickServToken) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (x *NickServToken) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *NickServToken) GetValidUntil() uint64 {
	if x != nil {
		return x.ValidUntil
	}
	return 0
}

func (x *NickServToken) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type RPCCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId       uint64 `protobuf:"varint,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	SourcePublicKey *Key   `protobuf:"bytes,2,opt,name=source_public_key,json=sourcePublicKey,proto3" json:"source_public_key,omitempty"`
	// Types that are assignable to Body:
	//	*RPCCommand_Create_
	//	*RPCCommand_Retrieve_
	//	*RPCCommand_Update_
	//	*RPCCommand_Delete_
	Body isRPCCommand_Body `protobuf_oneof:"body"`
}

func (x *RPCCommand) Reset() {
	*x = RPCCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nickserv_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RPCCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RPCCommand) ProtoMessage() {}

func (x *RPCCommand) ProtoReflect() protoreflect.Message {
	mi := &file_nickserv_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RPCCommand.ProtoReflect.Descriptor instead.
func (*RPCCommand) Descriptor() ([]byte, []int) {
	return file_nickserv_proto_rawDescGZIP(), []int{3}
}

func (x *RPCCommand) GetRequestId() uint64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *RPCCommand) GetSourcePublicKey() *Key {
	if x != nil {
		return x.SourcePublicKey
	}
	return nil
}

func (m *RPCCommand) GetBody() isRPCCommand_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (x *RPCCommand) GetCreate() *RPCCommand_Create {
	if x, ok := x.GetBody().(*RPCCommand_Create_); ok {
		return x.Create
	}
	return nil
}

func (x *RPCCommand) GetRetrieve() *RPCCommand_Retrieve {
	if x, ok := x.GetBody().(*RPCCommand_Retrieve_); ok {
		return x.Retrieve
	}
	return nil
}

func (x *RPCCommand) GetUpdate() *RPCCommand_Update {
	if x, ok := x.GetBody().(*RPCCommand_Update_); ok {
		return x.Update
	}
	return nil
}

func (x *RPCCommand) GetDelete() *RPCCommand_Delete {
	if x, ok := x.GetBody().(*RPCCommand_Delete_); ok {
		return x.Delete
	}
	return nil
}

type isRPCCommand_Body interface {
	isRPCCommand_Body()
}

type RPCCommand_Create_ struct {
	Create *RPCCommand_Create `protobuf:"bytes,5,opt,name=create,proto3,oneof"`
}

type RPCCommand_Retrieve_ struct {
	Retrieve *RPCCommand_Retrieve `protobuf:"bytes,6,opt,name=retrieve,proto3,oneof"`
}

type RPCCommand_Update_ struct {
	Update *RPCCommand_Update `protobuf:"bytes,7,opt,name=update,proto3,oneof"`
}

type RPCCommand_Delete_ struct {
	Delete *RPCCommand_Delete `protobuf:"bytes,8,opt,name=delete,proto3,oneof"`
}

func (*RPCCommand_Create_) isRPCCommand_Body() {}

func (*RPCCommand_Retrieve_) isRPCCommand_Body() {}

func (*RPCCommand_Update_) isRPCCommand_Body() {}

func (*RPCCommand_Delete_) isRPCCommand_Body() {}

type RPCResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId uint64 `protobuf:"varint,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// Types that are assignable to Body:
	//	*RPCResponse_Error_
	//	*RPCResponse_Update_
	//	*RPCResponse_Delete_
	//	*RPCResponse_Create
	//	*RPCResponse_Retrieve
	Body isRPCResponse_Body `protobuf_oneof:"body"`
}

func (x *RPCResponse) Reset() {
	*x = RPCResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nickserv_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RPCResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RPCResponse) ProtoMessage() {}

func (x *RPCResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nickserv_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RPCResponse.ProtoReflect.Descriptor instead.
func (*RPCResponse) Descriptor() ([]byte, []int) {
	return file_nickserv_proto_rawDescGZIP(), []int{4}
}

func (x *RPCResponse) GetRequestId() uint64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (m *RPCResponse) GetBody() isRPCResponse_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (x *RPCResponse) GetError() *RPCResponse_Error {
	if x, ok := x.GetBody().(*RPCResponse_Error_); ok {
		return x.Error
	}
	return nil
}

func (x *RPCResponse) GetUpdate() *RPCResponse_Update {
	if x, ok := x.GetBody().(*RPCResponse_Update_); ok {
		return x.Update
	}
	return nil
}

func (x *RPCResponse) GetDelete() *RPCResponse_Delete {
	if x, ok := x.GetBody().(*RPCResponse_Delete_); ok {
		return x.Delete
	}
	return nil
}

func (x *RPCResponse) GetCreate() *NickServToken {
	if x, ok := x.GetBody().(*RPCResponse_Create); ok {
		return x.Create
	}
	return nil
}

func (x *RPCResponse) GetRetrieve() *NickServToken {
	if x, ok := x.GetBody().(*RPCResponse_Retrieve); ok {
		return x.Retrieve
	}
	return nil
}

type isRPCResponse_Body interface {
	isRPCResponse_Body()
}

type RPCResponse_Error_ struct {
	Error *RPCResponse_Error `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

type RPCResponse_Update_ struct {
	Update *RPCResponse_Update `protobuf:"bytes,3,opt,name=update,proto3,oneof"`
}

type RPCResponse_Delete_ struct {
	Delete *RPCResponse_Delete `protobuf:"bytes,4,opt,name=delete,proto3,oneof"`
}

type RPCResponse_Create struct {
	Create *NickServToken `protobuf:"bytes,5,opt,name=create,proto3,oneof"`
}

type RPCResponse_Retrieve struct {
	Retrieve *NickServToken `protobuf:"bytes,6,opt,name=retrieve,proto3,oneof"`
}

func (*RPCResponse_Error_) isRPCResponse_Body() {}

func (*RPCResponse_Update_) isRPCResponse_Body() {}

func (*RPCResponse_Delete_) isRPCResponse_Body() {}

func (*RPCResponse_Create) isRPCResponse_Body() {}

func (*RPCResponse_Retrieve) isRPCResponse_Body() {}

type RPCCommand_Create struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nick string `protobuf:"bytes,1,opt,name=nick,proto3" json:"nick,omitempty"`
}

func (x *RPCCommand_Create) Reset() {
	*x = RPCCommand_Create{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nickserv_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RPCCommand_Create) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RPCCommand_Create) ProtoMessage() {}

func (x *RPCCommand_Create) ProtoReflect() protoreflect.Message {
	mi := &file_nickserv_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RPCCommand_Create.ProtoReflect.Descriptor instead.
func (*RPCCommand_Create) Descriptor() ([]byte, []int) {
	return file_nickserv_proto_rawDescGZIP(), []int{3, 0}
}

func (x *RPCCommand_Create) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

type RPCCommand_Retrieve struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RPCCommand_Retrieve) Reset() {
	*x = RPCCommand_Retrieve{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nickserv_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RPCCommand_Retrieve) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RPCCommand_Retrieve) ProtoMessage() {}

func (x *RPCCommand_Retrieve) ProtoReflect() protoreflect.Message {
	mi := &file_nickserv_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RPCCommand_Retrieve.ProtoReflect.Descriptor instead.
func (*RPCCommand_Retrieve) Descriptor() ([]byte, []int) {
	return file_nickserv_proto_rawDescGZIP(), []int{3, 1}
}

type RPCCommand_Update struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nick string `protobuf:"bytes,1,opt,name=nick,proto3" json:"nick,omitempty"`
	// Types that are assignable to Param:
	//	*RPCCommand_Update_NewNick
	//	*RPCCommand_Update_NameChangeQuota
	//	*RPCCommand_Update_Roles
	Param isRPCCommand_Update_Param `protobuf_oneof:"param"`
}

func (x *RPCCommand_Update) Reset() {
	*x = RPCCommand_Update{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nickserv_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RPCCommand_Update) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RPCCommand_Update) ProtoMessage() {}

func (x *RPCCommand_Update) ProtoReflect() protoreflect.Message {
	mi := &file_nickserv_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RPCCommand_Update.ProtoReflect.Descriptor instead.
func (*RPCCommand_Update) Descriptor() ([]byte, []int) {
	return file_nickserv_proto_rawDescGZIP(), []int{3, 2}
}

func (x *RPCCommand_Update) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (m *RPCCommand_Update) GetParam() isRPCCommand_Update_Param {
	if m != nil {
		return m.Param
	}
	return nil
}

func (x *RPCCommand_Update) GetNewNick() string {
	if x, ok := x.GetParam().(*RPCCommand_Update_NewNick); ok {
		return x.NewNick
	}
	return ""
}

func (x *RPCCommand_Update) GetNameChangeQuota() uint32 {
	if x, ok := x.GetParam().(*RPCCommand_Update_NameChangeQuota); ok {
		return x.NameChangeQuota
	}
	return 0
}

func (x *RPCCommand_Update) GetRoles() string {
	if x, ok := x.GetParam().(*RPCCommand_Update_Roles); ok {
		return x.Roles
	}
	return ""
}

type isRPCCommand_Update_Param interface {
	isRPCCommand_Update_Param()
}

type RPCCommand_Update_NewNick struct {
	NewNick string `protobuf:"bytes,2,opt,name=new_nick,json=newNick,proto3,oneof"`
}

type RPCCommand_Update_NameChangeQuota struct {
	NameChangeQuota uint32 `protobuf:"varint,3,opt,name=name_change_quota,json=nameChangeQuota,proto3,oneof"`
}

type RPCCommand_Update_Roles struct {
	Roles string `protobuf:"bytes,4,opt,name=roles,proto3,oneof"`
}

func (*RPCCommand_Update_NewNick) isRPCCommand_Update_Param() {}

func (*RPCCommand_Update_NameChangeQuota) isRPCCommand_Update_Param() {}

func (*RPCCommand_Update_Roles) isRPCCommand_Update_Param() {}

type RPCCommand_Delete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nick string `protobuf:"bytes,1,opt,name=nick,proto3" json:"nick,omitempty"`
}

func (x *RPCCommand_Delete) Reset() {
	*x = RPCCommand_Delete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nickserv_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RPCCommand_Delete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RPCCommand_Delete) ProtoMessage() {}

func (x *RPCCommand_Delete) ProtoReflect() protoreflect.Message {
	mi := &file_nickserv_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RPCCommand_Delete.ProtoReflect.Descriptor instead.
func (*RPCCommand_Delete) Descriptor() ([]byte, []int) {
	return file_nickserv_proto_rawDescGZIP(), []int{3, 3}
}

func (x *RPCCommand_Delete) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

type RPCResponse_Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *RPCResponse_Error) Reset() {
	*x = RPCResponse_Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nickserv_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RPCResponse_Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RPCResponse_Error) ProtoMessage() {}

func (x *RPCResponse_Error) ProtoReflect() protoreflect.Message {
	mi := &file_nickserv_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RPCResponse_Error.ProtoReflect.Descriptor instead.
func (*RPCResponse_Error) Descriptor() ([]byte, []int) {
	return file_nickserv_proto_rawDescGZIP(), []int{4, 0}
}

func (x *RPCResponse_Error) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type RPCResponse_Update struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RPCResponse_Update) Reset() {
	*x = RPCResponse_Update{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nickserv_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RPCResponse_Update) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RPCResponse_Update) ProtoMessage() {}

func (x *RPCResponse_Update) ProtoReflect() protoreflect.Message {
	mi := &file_nickserv_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RPCResponse_Update.ProtoReflect.Descriptor instead.
func (*RPCResponse_Update) Descriptor() ([]byte, []int) {
	return file_nickserv_proto_rawDescGZIP(), []int{4, 1}
}

type RPCResponse_Delete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RPCResponse_Delete) Reset() {
	*x = RPCResponse_Delete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nickserv_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RPCResponse_Delete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RPCResponse_Delete) ProtoMessage() {}

func (x *RPCResponse_Delete) ProtoReflect() protoreflect.Message {
	mi := &file_nickserv_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RPCResponse_Delete.ProtoReflect.Descriptor instead.
func (*RPCResponse_Delete) Descriptor() ([]byte, []int) {
	return file_nickserv_proto_rawDescGZIP(), []int{4, 2}
}

var File_nickserv_proto protoreflect.FileDescriptor

var file_nickserv_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6e, 0x69, 0x63, 0x6b, 0x73, 0x65, 0x72, 0x76, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x85, 0x01, 0x0a, 0x0c,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x16, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x04, 0x2e, 0x4b, 0x65, 0x79, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x11, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0f, 0x6e, 0x61, 0x6d, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61,
	0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x74, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x74, 0x6c, 0x12, 0x14, 0x0a,
	0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f,
	0x6c, 0x65, 0x73, 0x22, 0xfd, 0x01, 0x0a, 0x0a, 0x4e, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x12, 0x2c, 0x0a, 0x0f, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x04, 0x2e, 0x4b, 0x65,
	0x79, 0x52, 0x0d, 0x70, 0x65, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x10, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x3d,
	0x0a, 0x1b, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x18, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4e, 0x61,
	0x6d, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x14, 0x0a,
	0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f,
	0x6c, 0x65, 0x73, 0x22, 0xa8, 0x01, 0x0a, 0x0d, 0x4e, 0x69, 0x63, 0x6b, 0x53, 0x65, 0x72, 0x76,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2e, 0x0a, 0x10, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x04, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x0e, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x55, 0x6e, 0x74, 0x69, 0x6c,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0xf6,
	0x03, 0x0a, 0x0a, 0x52, 0x50, 0x43, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x11,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x04, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x0f, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x2c,
	0x0a, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x52, 0x50, 0x43, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x48, 0x00, 0x52, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x08,
	0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x52, 0x50, 0x43, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x65, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65,
	0x12, 0x2c, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x52, 0x50, 0x43, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2c,
	0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x52, 0x50, 0x43, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x48, 0x00, 0x52, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x1a, 0x1c, 0x0a, 0x06,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x1a, 0x0a, 0x0a, 0x08, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x1a, 0x88, 0x01, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x69, 0x63, 0x6b, 0x12, 0x1b, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x5f, 0x6e, 0x69, 0x63,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x4e, 0x69,
	0x63, 0x6b, 0x12, 0x2c, 0x0a, 0x11, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52,
	0x0f, 0x6e, 0x61, 0x6d, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61,
	0x12, 0x16, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x1a, 0x1c, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x69, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x42,
	0x06, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0xc5, 0x02, 0x0a, 0x0b, 0x52, 0x50, 0x43, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x52, 0x50, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x2d, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x52, 0x50, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x2d, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x52, 0x50, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x00, 0x52, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x28, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x4e, 0x69, 0x63, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x48, 0x00, 0x52, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x4e,
	0x69, 0x63, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x00, 0x52, 0x08,
	0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x1a, 0x19, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x1a, 0x08, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x1a, 0x08, 0x0a,
	0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x42,
	0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4d, 0x65,
	0x6d, 0x65, 0x4c, 0x61, 0x62, 0x73, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x70, 0x73, 0x70, 0x70, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_nickserv_proto_rawDescOnce sync.Once
	file_nickserv_proto_rawDescData = file_nickserv_proto_rawDesc
)

func file_nickserv_proto_rawDescGZIP() []byte {
	file_nickserv_proto_rawDescOnce.Do(func() {
		file_nickserv_proto_rawDescData = protoimpl.X.CompressGZIP(file_nickserv_proto_rawDescData)
	})
	return file_nickserv_proto_rawDescData
}

var file_nickserv_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_nickserv_proto_goTypes = []interface{}{
	(*ServerConfig)(nil),        // 0: ServerConfig
	(*NickRecord)(nil),          // 1: NickRecord
	(*NickServToken)(nil),       // 2: NickServToken
	(*RPCCommand)(nil),          // 3: RPCCommand
	(*RPCResponse)(nil),         // 4: RPCResponse
	(*RPCCommand_Create)(nil),   // 5: RPCCommand.Create
	(*RPCCommand_Retrieve)(nil), // 6: RPCCommand.Retrieve
	(*RPCCommand_Update)(nil),   // 7: RPCCommand.Update
	(*RPCCommand_Delete)(nil),   // 8: RPCCommand.Delete
	(*RPCResponse_Error)(nil),   // 9: RPCResponse.Error
	(*RPCResponse_Update)(nil),  // 10: RPCResponse.Update
	(*RPCResponse_Delete)(nil),  // 11: RPCResponse.Delete
	(*Key)(nil),                 // 12: Key
}
var file_nickserv_proto_depIdxs = []int32{
	12, // 0: ServerConfig.key:type_name -> Key
	12, // 1: NickRecord.peer_public_key:type_name -> Key
	12, // 2: NickServToken.owner_public_key:type_name -> Key
	12, // 3: RPCCommand.source_public_key:type_name -> Key
	5,  // 4: RPCCommand.create:type_name -> RPCCommand.Create
	6,  // 5: RPCCommand.retrieve:type_name -> RPCCommand.Retrieve
	7,  // 6: RPCCommand.update:type_name -> RPCCommand.Update
	8,  // 7: RPCCommand.delete:type_name -> RPCCommand.Delete
	9,  // 8: RPCResponse.error:type_name -> RPCResponse.Error
	10, // 9: RPCResponse.update:type_name -> RPCResponse.Update
	11, // 10: RPCResponse.delete:type_name -> RPCResponse.Delete
	2,  // 11: RPCResponse.create:type_name -> NickServToken
	2,  // 12: RPCResponse.retrieve:type_name -> NickServToken
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_nickserv_proto_init() }
func file_nickserv_proto_init() {
	if File_nickserv_proto != nil {
		return
	}
	file_api_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_nickserv_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nickserv_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NickRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nickserv_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NickServToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nickserv_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RPCCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nickserv_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RPCResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nickserv_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RPCCommand_Create); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nickserv_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RPCCommand_Retrieve); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nickserv_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RPCCommand_Update); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nickserv_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RPCCommand_Delete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nickserv_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RPCResponse_Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nickserv_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RPCResponse_Update); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nickserv_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RPCResponse_Delete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_nickserv_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*RPCCommand_Create_)(nil),
		(*RPCCommand_Retrieve_)(nil),
		(*RPCCommand_Update_)(nil),
		(*RPCCommand_Delete_)(nil),
	}
	file_nickserv_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*RPCResponse_Error_)(nil),
		(*RPCResponse_Update_)(nil),
		(*RPCResponse_Delete_)(nil),
		(*RPCResponse_Create)(nil),
		(*RPCResponse_Retrieve)(nil),
	}
	file_nickserv_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*RPCCommand_Update_NewNick)(nil),
		(*RPCCommand_Update_NameChangeQuota)(nil),
		(*RPCCommand_Update_Roles)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nickserv_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_nickserv_proto_goTypes,
		DependencyIndexes: file_nickserv_proto_depIdxs,
		MessageInfos:      file_nickserv_proto_msgTypes,
	}.Build()
	File_nickserv_proto = out.File
	file_nickserv_proto_rawDesc = nil
	file_nickserv_proto_goTypes = nil
	file_nickserv_proto_depIdxs = nil
}
