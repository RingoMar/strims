// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.14.0
// source: directory.proto

package pb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GetDirectoryEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkKey []byte `protobuf:"bytes,1,opt,name=network_key,json=networkKey,proto3" json:"network_key,omitempty"`
}

func (x *GetDirectoryEventsRequest) Reset() {
	*x = GetDirectoryEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDirectoryEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDirectoryEventsRequest) ProtoMessage() {}

func (x *GetDirectoryEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDirectoryEventsRequest.ProtoReflect.Descriptor instead.
func (*GetDirectoryEventsRequest) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{0}
}

func (x *GetDirectoryEventsRequest) GetNetworkKey() []byte {
	if x != nil {
		return x.NetworkKey
	}
	return nil
}

type TestDirectoryPublishRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkKey []byte `protobuf:"bytes,1,opt,name=network_key,json=networkKey,proto3" json:"network_key,omitempty"`
}

func (x *TestDirectoryPublishRequest) Reset() {
	*x = TestDirectoryPublishRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestDirectoryPublishRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestDirectoryPublishRequest) ProtoMessage() {}

func (x *TestDirectoryPublishRequest) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestDirectoryPublishRequest.ProtoReflect.Descriptor instead.
func (*TestDirectoryPublishRequest) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{1}
}

func (x *TestDirectoryPublishRequest) GetNetworkKey() []byte {
	if x != nil {
		return x.NetworkKey
	}
	return nil
}

type TestDirectoryPublishResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TestDirectoryPublishResponse) Reset() {
	*x = TestDirectoryPublishResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestDirectoryPublishResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestDirectoryPublishResponse) ProtoMessage() {}

func (x *TestDirectoryPublishResponse) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestDirectoryPublishResponse.ProtoReflect.Descriptor instead.
func (*TestDirectoryPublishResponse) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{2}
}

type DirectoryListingSnippet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Tags        []string `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *DirectoryListingSnippet) Reset() {
	*x = DirectoryListingSnippet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryListingSnippet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryListingSnippet) ProtoMessage() {}

func (x *DirectoryListingSnippet) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryListingSnippet.ProtoReflect.Descriptor instead.
func (*DirectoryListingSnippet) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{3}
}

func (x *DirectoryListingSnippet) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DirectoryListingSnippet) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DirectoryListingSnippet) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type DirectoryListingMedia struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartedAt int64  `protobuf:"varint,1,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	MimeType  string `protobuf:"bytes,2,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	Bitrate   uint32 `protobuf:"varint,3,opt,name=bitrate,proto3" json:"bitrate,omitempty"`
}

func (x *DirectoryListingMedia) Reset() {
	*x = DirectoryListingMedia{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryListingMedia) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryListingMedia) ProtoMessage() {}

func (x *DirectoryListingMedia) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryListingMedia.ProtoReflect.Descriptor instead.
func (*DirectoryListingMedia) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{4}
}

func (x *DirectoryListingMedia) GetStartedAt() int64 {
	if x != nil {
		return x.StartedAt
	}
	return 0
}

func (x *DirectoryListingMedia) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *DirectoryListingMedia) GetBitrate() uint32 {
	if x != nil {
		return x.Bitrate
	}
	return 0
}

type DirectoryListingService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *DirectoryListingService) Reset() {
	*x = DirectoryListingService{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryListingService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryListingService) ProtoMessage() {}

func (x *DirectoryListingService) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryListingService.ProtoReflect.Descriptor instead.
func (*DirectoryListingService) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{5}
}

func (x *DirectoryListingService) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type DirectoryListing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator   *Certificate             `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Timestamp int64                    `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Snippet   *DirectoryListingSnippet `protobuf:"bytes,3,opt,name=snippet,proto3" json:"snippet,omitempty"`
	// Types that are assignable to Content:
	//	*DirectoryListing_Media
	//	*DirectoryListing_Service
	Content   isDirectoryListing_Content `protobuf_oneof:"content"`
	Key       []byte                     `protobuf:"bytes,10001,opt,name=key,proto3" json:"key,omitempty"`
	Signature []byte                     `protobuf:"bytes,10002,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *DirectoryListing) Reset() {
	*x = DirectoryListing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryListing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryListing) ProtoMessage() {}

func (x *DirectoryListing) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryListing.ProtoReflect.Descriptor instead.
func (*DirectoryListing) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{6}
}

func (x *DirectoryListing) GetCreator() *Certificate {
	if x != nil {
		return x.Creator
	}
	return nil
}

func (x *DirectoryListing) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *DirectoryListing) GetSnippet() *DirectoryListingSnippet {
	if x != nil {
		return x.Snippet
	}
	return nil
}

func (m *DirectoryListing) GetContent() isDirectoryListing_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (x *DirectoryListing) GetMedia() *DirectoryListingMedia {
	if x, ok := x.GetContent().(*DirectoryListing_Media); ok {
		return x.Media
	}
	return nil
}

func (x *DirectoryListing) GetService() *DirectoryListingService {
	if x, ok := x.GetContent().(*DirectoryListing_Service); ok {
		return x.Service
	}
	return nil
}

func (x *DirectoryListing) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *DirectoryListing) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type isDirectoryListing_Content interface {
	isDirectoryListing_Content()
}

type DirectoryListing_Media struct {
	Media *DirectoryListingMedia `protobuf:"bytes,1001,opt,name=media,proto3,oneof"`
}

type DirectoryListing_Service struct {
	Service *DirectoryListingService `protobuf:"bytes,1002,opt,name=service,proto3,oneof"`
}

func (*DirectoryListing_Media) isDirectoryListing_Content() {}

func (*DirectoryListing_Service) isDirectoryListing_Content() {}

type DirectoryServerEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Body:
	//	*DirectoryServerEvent_Publish_
	//	*DirectoryServerEvent_Unpublish_
	//	*DirectoryServerEvent_ViewerCountChange_
	//	*DirectoryServerEvent_ViewerStateChange_
	Body isDirectoryServerEvent_Body `protobuf_oneof:"body"`
}

func (x *DirectoryServerEvent) Reset() {
	*x = DirectoryServerEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryServerEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryServerEvent) ProtoMessage() {}

func (x *DirectoryServerEvent) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryServerEvent.ProtoReflect.Descriptor instead.
func (*DirectoryServerEvent) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{7}
}

func (m *DirectoryServerEvent) GetBody() isDirectoryServerEvent_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (x *DirectoryServerEvent) GetPublish() *DirectoryServerEvent_Publish {
	if x, ok := x.GetBody().(*DirectoryServerEvent_Publish_); ok {
		return x.Publish
	}
	return nil
}

func (x *DirectoryServerEvent) GetUnpublish() *DirectoryServerEvent_Unpublish {
	if x, ok := x.GetBody().(*DirectoryServerEvent_Unpublish_); ok {
		return x.Unpublish
	}
	return nil
}

func (x *DirectoryServerEvent) GetViewerCountChange() *DirectoryServerEvent_ViewerCountChange {
	if x, ok := x.GetBody().(*DirectoryServerEvent_ViewerCountChange_); ok {
		return x.ViewerCountChange
	}
	return nil
}

func (x *DirectoryServerEvent) GetViewerStateChange() *DirectoryServerEvent_ViewerStateChange {
	if x, ok := x.GetBody().(*DirectoryServerEvent_ViewerStateChange_); ok {
		return x.ViewerStateChange
	}
	return nil
}

type isDirectoryServerEvent_Body interface {
	isDirectoryServerEvent_Body()
}

type DirectoryServerEvent_Publish_ struct {
	Publish *DirectoryServerEvent_Publish `protobuf:"bytes,1,opt,name=publish,proto3,oneof"`
}

type DirectoryServerEvent_Unpublish_ struct {
	Unpublish *DirectoryServerEvent_Unpublish `protobuf:"bytes,2,opt,name=unpublish,proto3,oneof"`
}

type DirectoryServerEvent_ViewerCountChange_ struct {
	ViewerCountChange *DirectoryServerEvent_ViewerCountChange `protobuf:"bytes,3,opt,name=viewer_count_change,json=viewerCountChange,proto3,oneof"`
}

type DirectoryServerEvent_ViewerStateChange_ struct {
	ViewerStateChange *DirectoryServerEvent_ViewerStateChange `protobuf:"bytes,4,opt,name=viewer_state_change,json=viewerStateChange,proto3,oneof"`
}

func (*DirectoryServerEvent_Publish_) isDirectoryServerEvent_Body() {}

func (*DirectoryServerEvent_Unpublish_) isDirectoryServerEvent_Body() {}

func (*DirectoryServerEvent_ViewerCountChange_) isDirectoryServerEvent_Body() {}

func (*DirectoryServerEvent_ViewerStateChange_) isDirectoryServerEvent_Body() {}

type CallDirectoryServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkKey []byte `protobuf:"bytes,1,opt,name=network_key,json=networkKey,proto3" json:"network_key,omitempty"`
	// Types that are assignable to Body:
	//	*CallDirectoryServerRequest_Listing
	Body isCallDirectoryServerRequest_Body `protobuf_oneof:"body"`
}

func (x *CallDirectoryServerRequest) Reset() {
	*x = CallDirectoryServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallDirectoryServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallDirectoryServerRequest) ProtoMessage() {}

func (x *CallDirectoryServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallDirectoryServerRequest.ProtoReflect.Descriptor instead.
func (*CallDirectoryServerRequest) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{8}
}

func (x *CallDirectoryServerRequest) GetNetworkKey() []byte {
	if x != nil {
		return x.NetworkKey
	}
	return nil
}

func (m *CallDirectoryServerRequest) GetBody() isCallDirectoryServerRequest_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (x *CallDirectoryServerRequest) GetListing() *CallDirectoryServerRequest_RemoveListing {
	if x, ok := x.GetBody().(*CallDirectoryServerRequest_Listing); ok {
		return x.Listing
	}
	return nil
}

type isCallDirectoryServerRequest_Body interface {
	isCallDirectoryServerRequest_Body()
}

type CallDirectoryServerRequest_Listing struct {
	Listing *CallDirectoryServerRequest_RemoveListing `protobuf:"bytes,2,opt,name=listing,proto3,oneof"`
}

func (*CallDirectoryServerRequest_Listing) isCallDirectoryServerRequest_Body() {}

type OpenDirectoryClientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkKey []byte `protobuf:"bytes,1,opt,name=network_key,json=networkKey,proto3" json:"network_key,omitempty"`
	ServerKey  []byte `protobuf:"bytes,2,opt,name=server_key,json=serverKey,proto3" json:"server_key,omitempty"`
}

func (x *OpenDirectoryClientRequest) Reset() {
	*x = OpenDirectoryClientRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenDirectoryClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenDirectoryClientRequest) ProtoMessage() {}

func (x *OpenDirectoryClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenDirectoryClientRequest.ProtoReflect.Descriptor instead.
func (*OpenDirectoryClientRequest) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{9}
}

func (x *OpenDirectoryClientRequest) GetNetworkKey() []byte {
	if x != nil {
		return x.NetworkKey
	}
	return nil
}

func (x *OpenDirectoryClientRequest) GetServerKey() []byte {
	if x != nil {
		return x.ServerKey
	}
	return nil
}

type DirectoryClientEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Body:
	//	*DirectoryClientEvent_Publish_
	//	*DirectoryClientEvent_Unpublish_
	//	*DirectoryClientEvent_Join_
	//	*DirectoryClientEvent_Part_
	//	*DirectoryClientEvent_Ping_
	Body isDirectoryClientEvent_Body `protobuf_oneof:"body"`
}

func (x *DirectoryClientEvent) Reset() {
	*x = DirectoryClientEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryClientEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryClientEvent) ProtoMessage() {}

func (x *DirectoryClientEvent) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryClientEvent.ProtoReflect.Descriptor instead.
func (*DirectoryClientEvent) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{10}
}

func (m *DirectoryClientEvent) GetBody() isDirectoryClientEvent_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (x *DirectoryClientEvent) GetPublish() *DirectoryClientEvent_Publish {
	if x, ok := x.GetBody().(*DirectoryClientEvent_Publish_); ok {
		return x.Publish
	}
	return nil
}

func (x *DirectoryClientEvent) GetUnpublish() *DirectoryClientEvent_Unpublish {
	if x, ok := x.GetBody().(*DirectoryClientEvent_Unpublish_); ok {
		return x.Unpublish
	}
	return nil
}

func (x *DirectoryClientEvent) GetJoin() *DirectoryClientEvent_Join {
	if x, ok := x.GetBody().(*DirectoryClientEvent_Join_); ok {
		return x.Join
	}
	return nil
}

func (x *DirectoryClientEvent) GetPart() *DirectoryClientEvent_Part {
	if x, ok := x.GetBody().(*DirectoryClientEvent_Part_); ok {
		return x.Part
	}
	return nil
}

func (x *DirectoryClientEvent) GetPing() *DirectoryClientEvent_Ping {
	if x, ok := x.GetBody().(*DirectoryClientEvent_Ping_); ok {
		return x.Ping
	}
	return nil
}

type isDirectoryClientEvent_Body interface {
	isDirectoryClientEvent_Body()
}

type DirectoryClientEvent_Publish_ struct {
	Publish *DirectoryClientEvent_Publish `protobuf:"bytes,1,opt,name=publish,proto3,oneof"`
}

type DirectoryClientEvent_Unpublish_ struct {
	Unpublish *DirectoryClientEvent_Unpublish `protobuf:"bytes,2,opt,name=unpublish,proto3,oneof"`
}

type DirectoryClientEvent_Join_ struct {
	Join *DirectoryClientEvent_Join `protobuf:"bytes,3,opt,name=join,proto3,oneof"`
}

type DirectoryClientEvent_Part_ struct {
	Part *DirectoryClientEvent_Part `protobuf:"bytes,4,opt,name=part,proto3,oneof"`
}

type DirectoryClientEvent_Ping_ struct {
	Ping *DirectoryClientEvent_Ping `protobuf:"bytes,5,opt,name=ping,proto3,oneof"`
}

func (*DirectoryClientEvent_Publish_) isDirectoryClientEvent_Body() {}

func (*DirectoryClientEvent_Unpublish_) isDirectoryClientEvent_Body() {}

func (*DirectoryClientEvent_Join_) isDirectoryClientEvent_Body() {}

func (*DirectoryClientEvent_Part_) isDirectoryClientEvent_Body() {}

func (*DirectoryClientEvent_Ping_) isDirectoryClientEvent_Body() {}

type DirectoryPublishRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Listing *DirectoryListing `protobuf:"bytes,1,opt,name=listing,proto3" json:"listing,omitempty"`
}

func (x *DirectoryPublishRequest) Reset() {
	*x = DirectoryPublishRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryPublishRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryPublishRequest) ProtoMessage() {}

func (x *DirectoryPublishRequest) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryPublishRequest.ProtoReflect.Descriptor instead.
func (*DirectoryPublishRequest) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{11}
}

func (x *DirectoryPublishRequest) GetListing() *DirectoryListing {
	if x != nil {
		return x.Listing
	}
	return nil
}

type DirectoryPublishResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DirectoryPublishResponse) Reset() {
	*x = DirectoryPublishResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryPublishResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryPublishResponse) ProtoMessage() {}

func (x *DirectoryPublishResponse) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryPublishResponse.ProtoReflect.Descriptor instead.
func (*DirectoryPublishResponse) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{12}
}

type DirectoryUnpublishRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *DirectoryUnpublishRequest) Reset() {
	*x = DirectoryUnpublishRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryUnpublishRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryUnpublishRequest) ProtoMessage() {}

func (x *DirectoryUnpublishRequest) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryUnpublishRequest.ProtoReflect.Descriptor instead.
func (*DirectoryUnpublishRequest) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{13}
}

func (x *DirectoryUnpublishRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type DirectoryUnpublishResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DirectoryUnpublishResponse) Reset() {
	*x = DirectoryUnpublishResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryUnpublishResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryUnpublishResponse) ProtoMessage() {}

func (x *DirectoryUnpublishResponse) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryUnpublishResponse.ProtoReflect.Descriptor instead.
func (*DirectoryUnpublishResponse) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{14}
}

type DirectoryJoinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *DirectoryJoinRequest) Reset() {
	*x = DirectoryJoinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryJoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryJoinRequest) ProtoMessage() {}

func (x *DirectoryJoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryJoinRequest.ProtoReflect.Descriptor instead.
func (*DirectoryJoinRequest) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{15}
}

func (x *DirectoryJoinRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type DirectoryJoinResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DirectoryJoinResponse) Reset() {
	*x = DirectoryJoinResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryJoinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryJoinResponse) ProtoMessage() {}

func (x *DirectoryJoinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryJoinResponse.ProtoReflect.Descriptor instead.
func (*DirectoryJoinResponse) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{16}
}

type DirectoryPartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *DirectoryPartRequest) Reset() {
	*x = DirectoryPartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryPartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryPartRequest) ProtoMessage() {}

func (x *DirectoryPartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryPartRequest.ProtoReflect.Descriptor instead.
func (*DirectoryPartRequest) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{17}
}

func (x *DirectoryPartRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type DirectoryPartResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DirectoryPartResponse) Reset() {
	*x = DirectoryPartResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryPartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryPartResponse) ProtoMessage() {}

func (x *DirectoryPartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryPartResponse.ProtoReflect.Descriptor instead.
func (*DirectoryPartResponse) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{18}
}

type DirectoryPingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DirectoryPingRequest) Reset() {
	*x = DirectoryPingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryPingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryPingRequest) ProtoMessage() {}

func (x *DirectoryPingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryPingRequest.ProtoReflect.Descriptor instead.
func (*DirectoryPingRequest) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{19}
}

type DirectoryPingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DirectoryPingResponse) Reset() {
	*x = DirectoryPingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryPingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryPingResponse) ProtoMessage() {}

func (x *DirectoryPingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryPingResponse.ProtoReflect.Descriptor instead.
func (*DirectoryPingResponse) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{20}
}

type DirectoryServerEvent_Publish struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Listing *DirectoryListing `protobuf:"bytes,1,opt,name=listing,proto3" json:"listing,omitempty"`
}

func (x *DirectoryServerEvent_Publish) Reset() {
	*x = DirectoryServerEvent_Publish{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryServerEvent_Publish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryServerEvent_Publish) ProtoMessage() {}

func (x *DirectoryServerEvent_Publish) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryServerEvent_Publish.ProtoReflect.Descriptor instead.
func (*DirectoryServerEvent_Publish) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{7, 0}
}

func (x *DirectoryServerEvent_Publish) GetListing() *DirectoryListing {
	if x != nil {
		return x.Listing
	}
	return nil
}

type DirectoryServerEvent_Unpublish struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *DirectoryServerEvent_Unpublish) Reset() {
	*x = DirectoryServerEvent_Unpublish{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryServerEvent_Unpublish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryServerEvent_Unpublish) ProtoMessage() {}

func (x *DirectoryServerEvent_Unpublish) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryServerEvent_Unpublish.ProtoReflect.Descriptor instead.
func (*DirectoryServerEvent_Unpublish) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{7, 1}
}

func (x *DirectoryServerEvent_Unpublish) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type DirectoryServerEvent_ViewerCountChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Count uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *DirectoryServerEvent_ViewerCountChange) Reset() {
	*x = DirectoryServerEvent_ViewerCountChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryServerEvent_ViewerCountChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryServerEvent_ViewerCountChange) ProtoMessage() {}

func (x *DirectoryServerEvent_ViewerCountChange) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryServerEvent_ViewerCountChange.ProtoReflect.Descriptor instead.
func (*DirectoryServerEvent_ViewerCountChange) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{7, 2}
}

func (x *DirectoryServerEvent_ViewerCountChange) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *DirectoryServerEvent_ViewerCountChange) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type DirectoryServerEvent_ViewerStateChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subject     string   `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	Online      bool     `protobuf:"varint,2,opt,name=online,proto3" json:"online,omitempty"`
	ViewingKeys [][]byte `protobuf:"bytes,3,rep,name=viewing_keys,json=viewingKeys,proto3" json:"viewing_keys,omitempty"`
}

func (x *DirectoryServerEvent_ViewerStateChange) Reset() {
	*x = DirectoryServerEvent_ViewerStateChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryServerEvent_ViewerStateChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryServerEvent_ViewerStateChange) ProtoMessage() {}

func (x *DirectoryServerEvent_ViewerStateChange) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryServerEvent_ViewerStateChange.ProtoReflect.Descriptor instead.
func (*DirectoryServerEvent_ViewerStateChange) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{7, 3}
}

func (x *DirectoryServerEvent_ViewerStateChange) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *DirectoryServerEvent_ViewerStateChange) GetOnline() bool {
	if x != nil {
		return x.Online
	}
	return false
}

func (x *DirectoryServerEvent_ViewerStateChange) GetViewingKeys() [][]byte {
	if x != nil {
		return x.ViewingKeys
	}
	return nil
}

type CallDirectoryServerRequest_RemoveListing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *CallDirectoryServerRequest_RemoveListing) Reset() {
	*x = CallDirectoryServerRequest_RemoveListing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallDirectoryServerRequest_RemoveListing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallDirectoryServerRequest_RemoveListing) ProtoMessage() {}

func (x *CallDirectoryServerRequest_RemoveListing) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallDirectoryServerRequest_RemoveListing.ProtoReflect.Descriptor instead.
func (*CallDirectoryServerRequest_RemoveListing) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{8, 0}
}

func (x *CallDirectoryServerRequest_RemoveListing) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type DirectoryClientEvent_Publish struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Listing   *DirectoryListing `protobuf:"bytes,1,opt,name=listing,proto3" json:"listing,omitempty"`
	Signature []byte            `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *DirectoryClientEvent_Publish) Reset() {
	*x = DirectoryClientEvent_Publish{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryClientEvent_Publish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryClientEvent_Publish) ProtoMessage() {}

func (x *DirectoryClientEvent_Publish) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryClientEvent_Publish.ProtoReflect.Descriptor instead.
func (*DirectoryClientEvent_Publish) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{10, 0}
}

func (x *DirectoryClientEvent_Publish) GetListing() *DirectoryListing {
	if x != nil {
		return x.Listing
	}
	return nil
}

func (x *DirectoryClientEvent_Publish) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type DirectoryClientEvent_Unpublish struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *DirectoryClientEvent_Unpublish) Reset() {
	*x = DirectoryClientEvent_Unpublish{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryClientEvent_Unpublish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryClientEvent_Unpublish) ProtoMessage() {}

func (x *DirectoryClientEvent_Unpublish) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryClientEvent_Unpublish.ProtoReflect.Descriptor instead.
func (*DirectoryClientEvent_Unpublish) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{10, 1}
}

func (x *DirectoryClientEvent_Unpublish) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type DirectoryClientEvent_Join struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *DirectoryClientEvent_Join) Reset() {
	*x = DirectoryClientEvent_Join{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryClientEvent_Join) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryClientEvent_Join) ProtoMessage() {}

func (x *DirectoryClientEvent_Join) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryClientEvent_Join.ProtoReflect.Descriptor instead.
func (*DirectoryClientEvent_Join) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{10, 2}
}

func (x *DirectoryClientEvent_Join) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type DirectoryClientEvent_Part struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *DirectoryClientEvent_Part) Reset() {
	*x = DirectoryClientEvent_Part{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryClientEvent_Part) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryClientEvent_Part) ProtoMessage() {}

func (x *DirectoryClientEvent_Part) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryClientEvent_Part.ProtoReflect.Descriptor instead.
func (*DirectoryClientEvent_Part) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{10, 3}
}

func (x *DirectoryClientEvent_Part) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type DirectoryClientEvent_Ping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time int64 `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *DirectoryClientEvent_Ping) Reset() {
	*x = DirectoryClientEvent_Ping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryClientEvent_Ping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryClientEvent_Ping) ProtoMessage() {}

func (x *DirectoryClientEvent_Ping) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryClientEvent_Ping.ProtoReflect.Descriptor instead.
func (*DirectoryClientEvent_Ping) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{10, 4}
}

func (x *DirectoryClientEvent_Ping) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

var File_directory_proto protoreflect.FileDescriptor

var file_directory_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0d, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x3c, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4b, 0x65, 0x79, 0x22, 0x3e,
	0x0a, 0x1b, 0x54, 0x65, 0x73, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4b, 0x65, 0x79, 0x22, 0x1e,
	0x0a, 0x1c, 0x54, 0x65, 0x73, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x65,
	0x0a, 0x17, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x6d, 0x0a, 0x15, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x69,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x62, 0x69, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x22, 0x2d, 0x0a, 0x17, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x22, 0xb1, 0x02, 0x0a, 0x10, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x26, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x65, 0x72, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x32,
	0x0a, 0x07, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x52, 0x07, 0x73, 0x6e, 0x69, 0x70, 0x70,
	0x65, 0x74, 0x12, 0x2f, 0x0a, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0xe9, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x48, 0x00, 0x52, 0x05, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x12, 0x35, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0xea,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x48,
	0x00, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x11, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x91, 0x4e, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1d, 0x0a,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x92, 0x4e, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x42, 0x09, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xce, 0x04, 0x0a, 0x14, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x39, 0x0a, 0x07, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x48, 0x00, 0x52, 0x07, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x3f, 0x0a, 0x09, 0x75,
	0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x48,
	0x00, 0x52, 0x09, 0x75, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x59, 0x0a, 0x13,
	0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x48, 0x00, 0x52, 0x11, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x59, 0x0a, 0x13, 0x76, 0x69, 0x65, 0x77, 0x65,
	0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x56, 0x69, 0x65, 0x77,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52,
	0x11, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x1a, 0x36, 0x0a, 0x07, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x2b, 0x0a,
	0x07, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x1a, 0x1d, 0x0a, 0x09, 0x55, 0x6e,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x1a, 0x3b, 0x0a, 0x11, 0x56, 0x69, 0x65,
	0x77, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x68, 0x0a, 0x11, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x76, 0x69, 0x65, 0x77, 0x69, 0x6e, 0x67, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0c, 0x52, 0x0b, 0x76, 0x69, 0x65, 0x77, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x73,
	0x42, 0x06, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0xaf, 0x01, 0x0a, 0x1a, 0x43, 0x61, 0x6c,
	0x6c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4b, 0x65, 0x79, 0x12, 0x45, 0x0a, 0x07, 0x6c, 0x69, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x43, 0x61, 0x6c, 0x6c,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x1a,
	0x21, 0x0a, 0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x42, 0x06, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x5c, 0x0a, 0x1a, 0x4f, 0x70,
	0x65, 0x6e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x22, 0xf5, 0x03, 0x0a, 0x14, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x39, 0x0a, 0x07, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x48, 0x00, 0x52, 0x07, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x3f, 0x0a, 0x09,
	0x75, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x48, 0x00, 0x52, 0x09, 0x75, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x30, 0x0a,
	0x04, 0x6a, 0x6f, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x48, 0x00, 0x52, 0x04, 0x6a, 0x6f, 0x69, 0x6e, 0x12,
	0x30, 0x0a, 0x04, 0x70, 0x61, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x48, 0x00, 0x52, 0x04, 0x70, 0x61, 0x72,
	0x74, 0x12, 0x30, 0x0a, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x04, 0x70,
	0x69, 0x6e, 0x67, 0x1a, 0x54, 0x0a, 0x07, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x2b,
	0x0a, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x1a, 0x1d, 0x0a, 0x09, 0x55, 0x6e, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x1a, 0x18, 0x0a, 0x04, 0x4a, 0x6f, 0x69, 0x6e,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x1a, 0x18, 0x0a, 0x04, 0x50, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x1a, 0x1a, 0x0a, 0x04,
	0x50, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x22, 0x46, 0x0a, 0x17, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x07, 0x6c,
	0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x07, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x1a, 0x0a, 0x18, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x0a, 0x19, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x22, 0x1c, 0x0a, 0x1a, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x28, 0x0a, 0x14, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x4a, 0x6f,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x17, 0x0a, 0x15, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x0a, 0x14, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x17,
	0x0a, 0x15, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x61, 0x72, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x17, 0x0a, 0x15, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x44, 0x0a, 0x15, 0x67, 0x67, 0x2e, 0x73,
	0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x70, 0x70, 0x73, 0x70, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4d, 0x65,
	0x6d, 0x65, 0x4c, 0x61, 0x62, 0x73, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x70, 0x73, 0x70, 0x70, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62, 0xba, 0x02, 0x02, 0x50, 0x42, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_directory_proto_rawDescOnce sync.Once
	file_directory_proto_rawDescData = file_directory_proto_rawDesc
)

func file_directory_proto_rawDescGZIP() []byte {
	file_directory_proto_rawDescOnce.Do(func() {
		file_directory_proto_rawDescData = protoimpl.X.CompressGZIP(file_directory_proto_rawDescData)
	})
	return file_directory_proto_rawDescData
}

var file_directory_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_directory_proto_goTypes = []interface{}{
	(*GetDirectoryEventsRequest)(nil),                // 0: GetDirectoryEventsRequest
	(*TestDirectoryPublishRequest)(nil),              // 1: TestDirectoryPublishRequest
	(*TestDirectoryPublishResponse)(nil),             // 2: TestDirectoryPublishResponse
	(*DirectoryListingSnippet)(nil),                  // 3: DirectoryListingSnippet
	(*DirectoryListingMedia)(nil),                    // 4: DirectoryListingMedia
	(*DirectoryListingService)(nil),                  // 5: DirectoryListingService
	(*DirectoryListing)(nil),                         // 6: DirectoryListing
	(*DirectoryServerEvent)(nil),                     // 7: DirectoryServerEvent
	(*CallDirectoryServerRequest)(nil),               // 8: CallDirectoryServerRequest
	(*OpenDirectoryClientRequest)(nil),               // 9: OpenDirectoryClientRequest
	(*DirectoryClientEvent)(nil),                     // 10: DirectoryClientEvent
	(*DirectoryPublishRequest)(nil),                  // 11: DirectoryPublishRequest
	(*DirectoryPublishResponse)(nil),                 // 12: DirectoryPublishResponse
	(*DirectoryUnpublishRequest)(nil),                // 13: DirectoryUnpublishRequest
	(*DirectoryUnpublishResponse)(nil),               // 14: DirectoryUnpublishResponse
	(*DirectoryJoinRequest)(nil),                     // 15: DirectoryJoinRequest
	(*DirectoryJoinResponse)(nil),                    // 16: DirectoryJoinResponse
	(*DirectoryPartRequest)(nil),                     // 17: DirectoryPartRequest
	(*DirectoryPartResponse)(nil),                    // 18: DirectoryPartResponse
	(*DirectoryPingRequest)(nil),                     // 19: DirectoryPingRequest
	(*DirectoryPingResponse)(nil),                    // 20: DirectoryPingResponse
	(*DirectoryServerEvent_Publish)(nil),             // 21: DirectoryServerEvent.Publish
	(*DirectoryServerEvent_Unpublish)(nil),           // 22: DirectoryServerEvent.Unpublish
	(*DirectoryServerEvent_ViewerCountChange)(nil),   // 23: DirectoryServerEvent.ViewerCountChange
	(*DirectoryServerEvent_ViewerStateChange)(nil),   // 24: DirectoryServerEvent.ViewerStateChange
	(*CallDirectoryServerRequest_RemoveListing)(nil), // 25: CallDirectoryServerRequest.RemoveListing
	(*DirectoryClientEvent_Publish)(nil),             // 26: DirectoryClientEvent.Publish
	(*DirectoryClientEvent_Unpublish)(nil),           // 27: DirectoryClientEvent.Unpublish
	(*DirectoryClientEvent_Join)(nil),                // 28: DirectoryClientEvent.Join
	(*DirectoryClientEvent_Part)(nil),                // 29: DirectoryClientEvent.Part
	(*DirectoryClientEvent_Ping)(nil),                // 30: DirectoryClientEvent.Ping
	(*Certificate)(nil),                              // 31: Certificate
}
var file_directory_proto_depIdxs = []int32{
	31, // 0: DirectoryListing.creator:type_name -> Certificate
	3,  // 1: DirectoryListing.snippet:type_name -> DirectoryListingSnippet
	4,  // 2: DirectoryListing.media:type_name -> DirectoryListingMedia
	5,  // 3: DirectoryListing.service:type_name -> DirectoryListingService
	21, // 4: DirectoryServerEvent.publish:type_name -> DirectoryServerEvent.Publish
	22, // 5: DirectoryServerEvent.unpublish:type_name -> DirectoryServerEvent.Unpublish
	23, // 6: DirectoryServerEvent.viewer_count_change:type_name -> DirectoryServerEvent.ViewerCountChange
	24, // 7: DirectoryServerEvent.viewer_state_change:type_name -> DirectoryServerEvent.ViewerStateChange
	25, // 8: CallDirectoryServerRequest.listing:type_name -> CallDirectoryServerRequest.RemoveListing
	26, // 9: DirectoryClientEvent.publish:type_name -> DirectoryClientEvent.Publish
	27, // 10: DirectoryClientEvent.unpublish:type_name -> DirectoryClientEvent.Unpublish
	28, // 11: DirectoryClientEvent.join:type_name -> DirectoryClientEvent.Join
	29, // 12: DirectoryClientEvent.part:type_name -> DirectoryClientEvent.Part
	30, // 13: DirectoryClientEvent.ping:type_name -> DirectoryClientEvent.Ping
	6,  // 14: DirectoryPublishRequest.listing:type_name -> DirectoryListing
	6,  // 15: DirectoryServerEvent.Publish.listing:type_name -> DirectoryListing
	6,  // 16: DirectoryClientEvent.Publish.listing:type_name -> DirectoryListing
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_directory_proto_init() }
func file_directory_proto_init() {
	if File_directory_proto != nil {
		return
	}
	file_profile_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_directory_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDirectoryEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestDirectoryPublishRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestDirectoryPublishResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryListingSnippet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryListingMedia); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryListingService); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryListing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryServerEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallDirectoryServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenDirectoryClientRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryClientEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryPublishRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryPublishResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryUnpublishRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryUnpublishResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryJoinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryJoinResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryPartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryPartResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryPingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryPingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryServerEvent_Publish); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryServerEvent_Unpublish); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryServerEvent_ViewerCountChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryServerEvent_ViewerStateChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallDirectoryServerRequest_RemoveListing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryClientEvent_Publish); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryClientEvent_Unpublish); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryClientEvent_Join); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryClientEvent_Part); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryClientEvent_Ping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_directory_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*DirectoryListing_Media)(nil),
		(*DirectoryListing_Service)(nil),
	}
	file_directory_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*DirectoryServerEvent_Publish_)(nil),
		(*DirectoryServerEvent_Unpublish_)(nil),
		(*DirectoryServerEvent_ViewerCountChange_)(nil),
		(*DirectoryServerEvent_ViewerStateChange_)(nil),
	}
	file_directory_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*CallDirectoryServerRequest_Listing)(nil),
	}
	file_directory_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*DirectoryClientEvent_Publish_)(nil),
		(*DirectoryClientEvent_Unpublish_)(nil),
		(*DirectoryClientEvent_Join_)(nil),
		(*DirectoryClientEvent_Part_)(nil),
		(*DirectoryClientEvent_Ping_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_directory_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_directory_proto_goTypes,
		DependencyIndexes: file_directory_proto_depIdxs,
		MessageInfos:      file_directory_proto_msgTypes,
	}.Build()
	File_directory_proto = out.File
	file_directory_proto_rawDesc = nil
	file_directory_proto_goTypes = nil
	file_directory_proto_depIdxs = nil
}
