// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.14.0
// source: directory.proto

package pb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GetDirectoryEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkKey []byte `protobuf:"bytes,1,opt,name=network_key,json=networkKey,proto3" json:"network_key,omitempty"`
}

func (x *GetDirectoryEventsRequest) Reset() {
	*x = GetDirectoryEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDirectoryEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDirectoryEventsRequest) ProtoMessage() {}

func (x *GetDirectoryEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDirectoryEventsRequest.ProtoReflect.Descriptor instead.
func (*GetDirectoryEventsRequest) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{0}
}

func (x *GetDirectoryEventsRequest) GetNetworkKey() []byte {
	if x != nil {
		return x.NetworkKey
	}
	return nil
}

type TestDirectoryPublishRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkKey []byte `protobuf:"bytes,1,opt,name=network_key,json=networkKey,proto3" json:"network_key,omitempty"`
}

func (x *TestDirectoryPublishRequest) Reset() {
	*x = TestDirectoryPublishRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestDirectoryPublishRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestDirectoryPublishRequest) ProtoMessage() {}

func (x *TestDirectoryPublishRequest) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestDirectoryPublishRequest.ProtoReflect.Descriptor instead.
func (*TestDirectoryPublishRequest) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{1}
}

func (x *TestDirectoryPublishRequest) GetNetworkKey() []byte {
	if x != nil {
		return x.NetworkKey
	}
	return nil
}

type TestDirectoryPublishResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TestDirectoryPublishResponse) Reset() {
	*x = TestDirectoryPublishResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestDirectoryPublishResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestDirectoryPublishResponse) ProtoMessage() {}

func (x *TestDirectoryPublishResponse) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestDirectoryPublishResponse.ProtoReflect.Descriptor instead.
func (*TestDirectoryPublishResponse) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{2}
}

type DirectoryListingSnippet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Tags        []string `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *DirectoryListingSnippet) Reset() {
	*x = DirectoryListingSnippet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryListingSnippet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryListingSnippet) ProtoMessage() {}

func (x *DirectoryListingSnippet) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryListingSnippet.ProtoReflect.Descriptor instead.
func (*DirectoryListingSnippet) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{3}
}

func (x *DirectoryListingSnippet) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DirectoryListingSnippet) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DirectoryListingSnippet) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type DirectoryListingMedia struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartedAt int64  `protobuf:"varint,1,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	MimeType  string `protobuf:"bytes,2,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	Bitrate   uint32 `protobuf:"varint,3,opt,name=bitrate,proto3" json:"bitrate,omitempty"`
	SwarmUri  string `protobuf:"bytes,4,opt,name=swarm_uri,json=swarmUri,proto3" json:"swarm_uri,omitempty"`
}

func (x *DirectoryListingMedia) Reset() {
	*x = DirectoryListingMedia{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryListingMedia) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryListingMedia) ProtoMessage() {}

func (x *DirectoryListingMedia) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryListingMedia.ProtoReflect.Descriptor instead.
func (*DirectoryListingMedia) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{4}
}

func (x *DirectoryListingMedia) GetStartedAt() int64 {
	if x != nil {
		return x.StartedAt
	}
	return 0
}

func (x *DirectoryListingMedia) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *DirectoryListingMedia) GetBitrate() uint32 {
	if x != nil {
		return x.Bitrate
	}
	return 0
}

func (x *DirectoryListingMedia) GetSwarmUri() string {
	if x != nil {
		return x.SwarmUri
	}
	return ""
}

type DirectoryListingService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *DirectoryListingService) Reset() {
	*x = DirectoryListingService{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryListingService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryListingService) ProtoMessage() {}

func (x *DirectoryListingService) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryListingService.ProtoReflect.Descriptor instead.
func (*DirectoryListingService) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{5}
}

func (x *DirectoryListingService) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type DirectoryListing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator   *Certificate             `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Timestamp int64                    `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Snippet   *DirectoryListingSnippet `protobuf:"bytes,3,opt,name=snippet,proto3" json:"snippet,omitempty"`
	// Types that are assignable to Content:
	//	*DirectoryListing_Media
	//	*DirectoryListing_Service
	Content   isDirectoryListing_Content `protobuf_oneof:"content"`
	Key       []byte                     `protobuf:"bytes,10001,opt,name=key,proto3" json:"key,omitempty"`
	Signature []byte                     `protobuf:"bytes,10002,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *DirectoryListing) Reset() {
	*x = DirectoryListing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryListing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryListing) ProtoMessage() {}

func (x *DirectoryListing) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryListing.ProtoReflect.Descriptor instead.
func (*DirectoryListing) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{6}
}

func (x *DirectoryListing) GetCreator() *Certificate {
	if x != nil {
		return x.Creator
	}
	return nil
}

func (x *DirectoryListing) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *DirectoryListing) GetSnippet() *DirectoryListingSnippet {
	if x != nil {
		return x.Snippet
	}
	return nil
}

func (m *DirectoryListing) GetContent() isDirectoryListing_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (x *DirectoryListing) GetMedia() *DirectoryListingMedia {
	if x, ok := x.GetContent().(*DirectoryListing_Media); ok {
		return x.Media
	}
	return nil
}

func (x *DirectoryListing) GetService() *DirectoryListingService {
	if x, ok := x.GetContent().(*DirectoryListing_Service); ok {
		return x.Service
	}
	return nil
}

func (x *DirectoryListing) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *DirectoryListing) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type isDirectoryListing_Content interface {
	isDirectoryListing_Content()
}

type DirectoryListing_Media struct {
	Media *DirectoryListingMedia `protobuf:"bytes,1001,opt,name=media,proto3,oneof"`
}

type DirectoryListing_Service struct {
	Service *DirectoryListingService `protobuf:"bytes,1002,opt,name=service,proto3,oneof"`
}

func (*DirectoryListing_Media) isDirectoryListing_Content() {}

func (*DirectoryListing_Service) isDirectoryListing_Content() {}

type DirectoryEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Body:
	//	*DirectoryEvent_Publish_
	//	*DirectoryEvent_Unpublish_
	//	*DirectoryEvent_ViewerCountChange_
	//	*DirectoryEvent_ViewerStateChange_
	//	*DirectoryEvent_Ping_
	//	*DirectoryEvent_Padding_
	Body isDirectoryEvent_Body `protobuf_oneof:"body"`
}

func (x *DirectoryEvent) Reset() {
	*x = DirectoryEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryEvent) ProtoMessage() {}

func (x *DirectoryEvent) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryEvent.ProtoReflect.Descriptor instead.
func (*DirectoryEvent) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{7}
}

func (m *DirectoryEvent) GetBody() isDirectoryEvent_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (x *DirectoryEvent) GetPublish() *DirectoryEvent_Publish {
	if x, ok := x.GetBody().(*DirectoryEvent_Publish_); ok {
		return x.Publish
	}
	return nil
}

func (x *DirectoryEvent) GetUnpublish() *DirectoryEvent_Unpublish {
	if x, ok := x.GetBody().(*DirectoryEvent_Unpublish_); ok {
		return x.Unpublish
	}
	return nil
}

func (x *DirectoryEvent) GetViewerCountChange() *DirectoryEvent_ViewerCountChange {
	if x, ok := x.GetBody().(*DirectoryEvent_ViewerCountChange_); ok {
		return x.ViewerCountChange
	}
	return nil
}

func (x *DirectoryEvent) GetViewerStateChange() *DirectoryEvent_ViewerStateChange {
	if x, ok := x.GetBody().(*DirectoryEvent_ViewerStateChange_); ok {
		return x.ViewerStateChange
	}
	return nil
}

func (x *DirectoryEvent) GetPing() *DirectoryEvent_Ping {
	if x, ok := x.GetBody().(*DirectoryEvent_Ping_); ok {
		return x.Ping
	}
	return nil
}

func (x *DirectoryEvent) GetPadding() *DirectoryEvent_Padding {
	if x, ok := x.GetBody().(*DirectoryEvent_Padding_); ok {
		return x.Padding
	}
	return nil
}

type isDirectoryEvent_Body interface {
	isDirectoryEvent_Body()
}

type DirectoryEvent_Publish_ struct {
	Publish *DirectoryEvent_Publish `protobuf:"bytes,1,opt,name=publish,proto3,oneof"`
}

type DirectoryEvent_Unpublish_ struct {
	Unpublish *DirectoryEvent_Unpublish `protobuf:"bytes,2,opt,name=unpublish,proto3,oneof"`
}

type DirectoryEvent_ViewerCountChange_ struct {
	ViewerCountChange *DirectoryEvent_ViewerCountChange `protobuf:"bytes,3,opt,name=viewer_count_change,json=viewerCountChange,proto3,oneof"`
}

type DirectoryEvent_ViewerStateChange_ struct {
	ViewerStateChange *DirectoryEvent_ViewerStateChange `protobuf:"bytes,4,opt,name=viewer_state_change,json=viewerStateChange,proto3,oneof"`
}

type DirectoryEvent_Ping_ struct {
	Ping *DirectoryEvent_Ping `protobuf:"bytes,5,opt,name=ping,proto3,oneof"`
}

type DirectoryEvent_Padding_ struct {
	Padding *DirectoryEvent_Padding `protobuf:"bytes,6,opt,name=padding,proto3,oneof"`
}

func (*DirectoryEvent_Publish_) isDirectoryEvent_Body() {}

func (*DirectoryEvent_Unpublish_) isDirectoryEvent_Body() {}

func (*DirectoryEvent_ViewerCountChange_) isDirectoryEvent_Body() {}

func (*DirectoryEvent_ViewerStateChange_) isDirectoryEvent_Body() {}

func (*DirectoryEvent_Ping_) isDirectoryEvent_Body() {}

func (*DirectoryEvent_Padding_) isDirectoryEvent_Body() {}

type DirectoryPublishRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Listing *DirectoryListing `protobuf:"bytes,1,opt,name=listing,proto3" json:"listing,omitempty"`
}

func (x *DirectoryPublishRequest) Reset() {
	*x = DirectoryPublishRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryPublishRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryPublishRequest) ProtoMessage() {}

func (x *DirectoryPublishRequest) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryPublishRequest.ProtoReflect.Descriptor instead.
func (*DirectoryPublishRequest) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{8}
}

func (x *DirectoryPublishRequest) GetListing() *DirectoryListing {
	if x != nil {
		return x.Listing
	}
	return nil
}

type DirectoryPublishResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DirectoryPublishResponse) Reset() {
	*x = DirectoryPublishResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryPublishResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryPublishResponse) ProtoMessage() {}

func (x *DirectoryPublishResponse) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryPublishResponse.ProtoReflect.Descriptor instead.
func (*DirectoryPublishResponse) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{9}
}

type DirectoryUnpublishRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *DirectoryUnpublishRequest) Reset() {
	*x = DirectoryUnpublishRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryUnpublishRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryUnpublishRequest) ProtoMessage() {}

func (x *DirectoryUnpublishRequest) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryUnpublishRequest.ProtoReflect.Descriptor instead.
func (*DirectoryUnpublishRequest) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{10}
}

func (x *DirectoryUnpublishRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type DirectoryUnpublishResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DirectoryUnpublishResponse) Reset() {
	*x = DirectoryUnpublishResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryUnpublishResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryUnpublishResponse) ProtoMessage() {}

func (x *DirectoryUnpublishResponse) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryUnpublishResponse.ProtoReflect.Descriptor instead.
func (*DirectoryUnpublishResponse) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{11}
}

type DirectoryJoinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *DirectoryJoinRequest) Reset() {
	*x = DirectoryJoinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryJoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryJoinRequest) ProtoMessage() {}

func (x *DirectoryJoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryJoinRequest.ProtoReflect.Descriptor instead.
func (*DirectoryJoinRequest) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{12}
}

func (x *DirectoryJoinRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type DirectoryJoinResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DirectoryJoinResponse) Reset() {
	*x = DirectoryJoinResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryJoinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryJoinResponse) ProtoMessage() {}

func (x *DirectoryJoinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryJoinResponse.ProtoReflect.Descriptor instead.
func (*DirectoryJoinResponse) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{13}
}

type DirectoryPartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *DirectoryPartRequest) Reset() {
	*x = DirectoryPartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryPartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryPartRequest) ProtoMessage() {}

func (x *DirectoryPartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryPartRequest.ProtoReflect.Descriptor instead.
func (*DirectoryPartRequest) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{14}
}

func (x *DirectoryPartRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type DirectoryPartResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DirectoryPartResponse) Reset() {
	*x = DirectoryPartResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryPartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryPartResponse) ProtoMessage() {}

func (x *DirectoryPartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryPartResponse.ProtoReflect.Descriptor instead.
func (*DirectoryPartResponse) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{15}
}

type DirectoryPingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DirectoryPingRequest) Reset() {
	*x = DirectoryPingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryPingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryPingRequest) ProtoMessage() {}

func (x *DirectoryPingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryPingRequest.ProtoReflect.Descriptor instead.
func (*DirectoryPingRequest) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{16}
}

type DirectoryPingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DirectoryPingResponse) Reset() {
	*x = DirectoryPingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryPingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryPingResponse) ProtoMessage() {}

func (x *DirectoryPingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryPingResponse.ProtoReflect.Descriptor instead.
func (*DirectoryPingResponse) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{17}
}

type DirectoryFrontendOpenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkKey []byte `protobuf:"bytes,1,opt,name=network_key,json=networkKey,proto3" json:"network_key,omitempty"`
}

func (x *DirectoryFrontendOpenRequest) Reset() {
	*x = DirectoryFrontendOpenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryFrontendOpenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryFrontendOpenRequest) ProtoMessage() {}

func (x *DirectoryFrontendOpenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryFrontendOpenRequest.ProtoReflect.Descriptor instead.
func (*DirectoryFrontendOpenRequest) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{18}
}

func (x *DirectoryFrontendOpenRequest) GetNetworkKey() []byte {
	if x != nil {
		return x.NetworkKey
	}
	return nil
}

type DirectoryFrontendOpenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event *DirectoryEvent `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *DirectoryFrontendOpenResponse) Reset() {
	*x = DirectoryFrontendOpenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryFrontendOpenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryFrontendOpenResponse) ProtoMessage() {}

func (x *DirectoryFrontendOpenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryFrontendOpenResponse.ProtoReflect.Descriptor instead.
func (*DirectoryFrontendOpenResponse) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{19}
}

func (x *DirectoryFrontendOpenResponse) GetEvent() *DirectoryEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type DirectoryFrontendTestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkKey []byte `protobuf:"bytes,1,opt,name=network_key,json=networkKey,proto3" json:"network_key,omitempty"`
}

func (x *DirectoryFrontendTestRequest) Reset() {
	*x = DirectoryFrontendTestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryFrontendTestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryFrontendTestRequest) ProtoMessage() {}

func (x *DirectoryFrontendTestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryFrontendTestRequest.ProtoReflect.Descriptor instead.
func (*DirectoryFrontendTestRequest) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{20}
}

func (x *DirectoryFrontendTestRequest) GetNetworkKey() []byte {
	if x != nil {
		return x.NetworkKey
	}
	return nil
}

type DirectoryFrontendTestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DirectoryFrontendTestResponse) Reset() {
	*x = DirectoryFrontendTestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryFrontendTestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryFrontendTestResponse) ProtoMessage() {}

func (x *DirectoryFrontendTestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryFrontendTestResponse.ProtoReflect.Descriptor instead.
func (*DirectoryFrontendTestResponse) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{21}
}

type DirectoryEvent_Publish struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Listing *DirectoryListing `protobuf:"bytes,1,opt,name=listing,proto3" json:"listing,omitempty"`
}

func (x *DirectoryEvent_Publish) Reset() {
	*x = DirectoryEvent_Publish{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryEvent_Publish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryEvent_Publish) ProtoMessage() {}

func (x *DirectoryEvent_Publish) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryEvent_Publish.ProtoReflect.Descriptor instead.
func (*DirectoryEvent_Publish) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{7, 0}
}

func (x *DirectoryEvent_Publish) GetListing() *DirectoryListing {
	if x != nil {
		return x.Listing
	}
	return nil
}

type DirectoryEvent_Unpublish struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *DirectoryEvent_Unpublish) Reset() {
	*x = DirectoryEvent_Unpublish{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryEvent_Unpublish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryEvent_Unpublish) ProtoMessage() {}

func (x *DirectoryEvent_Unpublish) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryEvent_Unpublish.ProtoReflect.Descriptor instead.
func (*DirectoryEvent_Unpublish) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{7, 1}
}

func (x *DirectoryEvent_Unpublish) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type DirectoryEvent_ViewerCountChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Count uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *DirectoryEvent_ViewerCountChange) Reset() {
	*x = DirectoryEvent_ViewerCountChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryEvent_ViewerCountChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryEvent_ViewerCountChange) ProtoMessage() {}

func (x *DirectoryEvent_ViewerCountChange) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryEvent_ViewerCountChange.ProtoReflect.Descriptor instead.
func (*DirectoryEvent_ViewerCountChange) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{7, 2}
}

func (x *DirectoryEvent_ViewerCountChange) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *DirectoryEvent_ViewerCountChange) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type DirectoryEvent_ViewerStateChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subject     string   `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	Online      bool     `protobuf:"varint,2,opt,name=online,proto3" json:"online,omitempty"`
	ViewingKeys [][]byte `protobuf:"bytes,3,rep,name=viewing_keys,json=viewingKeys,proto3" json:"viewing_keys,omitempty"`
}

func (x *DirectoryEvent_ViewerStateChange) Reset() {
	*x = DirectoryEvent_ViewerStateChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryEvent_ViewerStateChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryEvent_ViewerStateChange) ProtoMessage() {}

func (x *DirectoryEvent_ViewerStateChange) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryEvent_ViewerStateChange.ProtoReflect.Descriptor instead.
func (*DirectoryEvent_ViewerStateChange) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{7, 3}
}

func (x *DirectoryEvent_ViewerStateChange) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *DirectoryEvent_ViewerStateChange) GetOnline() bool {
	if x != nil {
		return x.Online
	}
	return false
}

func (x *DirectoryEvent_ViewerStateChange) GetViewingKeys() [][]byte {
	if x != nil {
		return x.ViewingKeys
	}
	return nil
}

type DirectoryEvent_Ping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time int64 `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *DirectoryEvent_Ping) Reset() {
	*x = DirectoryEvent_Ping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryEvent_Ping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryEvent_Ping) ProtoMessage() {}

func (x *DirectoryEvent_Ping) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryEvent_Ping.ProtoReflect.Descriptor instead.
func (*DirectoryEvent_Ping) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{7, 4}
}

func (x *DirectoryEvent_Ping) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type DirectoryEvent_Padding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DirectoryEvent_Padding) Reset() {
	*x = DirectoryEvent_Padding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directory_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryEvent_Padding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryEvent_Padding) ProtoMessage() {}

func (x *DirectoryEvent_Padding) ProtoReflect() protoreflect.Message {
	mi := &file_directory_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryEvent_Padding.ProtoReflect.Descriptor instead.
func (*DirectoryEvent_Padding) Descriptor() ([]byte, []int) {
	return file_directory_proto_rawDescGZIP(), []int{7, 5}
}

func (x *DirectoryEvent_Padding) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_directory_proto protoreflect.FileDescriptor

var file_directory_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0d, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x3c, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4b, 0x65, 0x79, 0x22, 0x3e,
	0x0a, 0x1b, 0x54, 0x65, 0x73, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4b, 0x65, 0x79, 0x22, 0x1e,
	0x0a, 0x1c, 0x54, 0x65, 0x73, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x65,
	0x0a, 0x17, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x8a, 0x01, 0x0a, 0x15, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x6d, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62,
	0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x62, 0x69,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x77, 0x61, 0x72, 0x6d, 0x5f, 0x75,
	0x72, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x77, 0x61, 0x72, 0x6d, 0x55,
	0x72, 0x69, 0x22, 0x2d, 0x0a, 0x17, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x22, 0xb1, 0x02, 0x0a, 0x10, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x26, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x32, 0x0a, 0x07,
	0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67,
	0x53, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x52, 0x07, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74,
	0x12, 0x2f, 0x0a, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0xe9, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x48, 0x00, 0x52, 0x05, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x12, 0x35, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0xea, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x48, 0x00, 0x52,
	0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x11, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x91, 0x4e, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x92, 0x4e, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xcc, 0x05, 0x0a, 0x0e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x07, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x48, 0x00, 0x52, 0x07, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x39, 0x0a,
	0x09, 0x75, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x2e, 0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x48, 0x00, 0x52, 0x09, 0x75,
	0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x53, 0x0a, 0x13, 0x76, 0x69, 0x65, 0x77,
	0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52, 0x11, 0x76, 0x69, 0x65, 0x77,
	0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x53, 0x0a,
	0x13, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x56, 0x69, 0x65, 0x77,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52,
	0x11, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x33,
	0x0a, 0x07, 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x50, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x07, 0x70, 0x61, 0x64, 0x64,
	0x69, 0x6e, 0x67, 0x1a, 0x36, 0x0a, 0x07, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x2b,
	0x0a, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x1a, 0x1d, 0x0a, 0x09, 0x55,
	0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x1a, 0x3b, 0x0a, 0x11, 0x56, 0x69,
	0x65, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x68, 0x0a, 0x11, 0x56, 0x69, 0x65, 0x77, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x76, 0x69, 0x65, 0x77, 0x69, 0x6e, 0x67, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0c, 0x52, 0x0b, 0x76, 0x69, 0x65, 0x77, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79,
	0x73, 0x1a, 0x1a, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x1a, 0x1d, 0x0a,
	0x07, 0x50, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x06, 0x0a, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x22, 0x46, 0x0a, 0x17, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2b, 0x0a, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x1a, 0x0a, 0x18,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x0a, 0x19, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x1c, 0x0a, 0x1a, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x0a, 0x14, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22,
	0x17, 0x0a, 0x15, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x4a, 0x6f, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x0a, 0x14, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x22, 0x17, 0x0a, 0x15, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x50,
	0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x17, 0x0a, 0x15, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3f, 0x0a, 0x1c,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x64, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4b, 0x65, 0x79, 0x22, 0x46, 0x0a,
	0x1d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x64, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25,
	0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x3f, 0x0a, 0x1c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x4b, 0x65, 0x79, 0x22, 0x1f, 0x0a, 0x1d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x44, 0x0a, 0x15, 0x67, 0x67, 0x2e, 0x73, 0x74,
	0x72, 0x69, 0x6d, 0x73, 0x2e, 0x70, 0x70, 0x73, 0x70, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4d, 0x65, 0x6d,
	0x65, 0x4c, 0x61, 0x62, 0x73, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x70, 0x73, 0x70, 0x70, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62, 0xba, 0x02, 0x02, 0x50, 0x42, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_directory_proto_rawDescOnce sync.Once
	file_directory_proto_rawDescData = file_directory_proto_rawDesc
)

func file_directory_proto_rawDescGZIP() []byte {
	file_directory_proto_rawDescOnce.Do(func() {
		file_directory_proto_rawDescData = protoimpl.X.CompressGZIP(file_directory_proto_rawDescData)
	})
	return file_directory_proto_rawDescData
}

var file_directory_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_directory_proto_goTypes = []interface{}{
	(*GetDirectoryEventsRequest)(nil),        // 0: GetDirectoryEventsRequest
	(*TestDirectoryPublishRequest)(nil),      // 1: TestDirectoryPublishRequest
	(*TestDirectoryPublishResponse)(nil),     // 2: TestDirectoryPublishResponse
	(*DirectoryListingSnippet)(nil),          // 3: DirectoryListingSnippet
	(*DirectoryListingMedia)(nil),            // 4: DirectoryListingMedia
	(*DirectoryListingService)(nil),          // 5: DirectoryListingService
	(*DirectoryListing)(nil),                 // 6: DirectoryListing
	(*DirectoryEvent)(nil),                   // 7: DirectoryEvent
	(*DirectoryPublishRequest)(nil),          // 8: DirectoryPublishRequest
	(*DirectoryPublishResponse)(nil),         // 9: DirectoryPublishResponse
	(*DirectoryUnpublishRequest)(nil),        // 10: DirectoryUnpublishRequest
	(*DirectoryUnpublishResponse)(nil),       // 11: DirectoryUnpublishResponse
	(*DirectoryJoinRequest)(nil),             // 12: DirectoryJoinRequest
	(*DirectoryJoinResponse)(nil),            // 13: DirectoryJoinResponse
	(*DirectoryPartRequest)(nil),             // 14: DirectoryPartRequest
	(*DirectoryPartResponse)(nil),            // 15: DirectoryPartResponse
	(*DirectoryPingRequest)(nil),             // 16: DirectoryPingRequest
	(*DirectoryPingResponse)(nil),            // 17: DirectoryPingResponse
	(*DirectoryFrontendOpenRequest)(nil),     // 18: DirectoryFrontendOpenRequest
	(*DirectoryFrontendOpenResponse)(nil),    // 19: DirectoryFrontendOpenResponse
	(*DirectoryFrontendTestRequest)(nil),     // 20: DirectoryFrontendTestRequest
	(*DirectoryFrontendTestResponse)(nil),    // 21: DirectoryFrontendTestResponse
	(*DirectoryEvent_Publish)(nil),           // 22: DirectoryEvent.Publish
	(*DirectoryEvent_Unpublish)(nil),         // 23: DirectoryEvent.Unpublish
	(*DirectoryEvent_ViewerCountChange)(nil), // 24: DirectoryEvent.ViewerCountChange
	(*DirectoryEvent_ViewerStateChange)(nil), // 25: DirectoryEvent.ViewerStateChange
	(*DirectoryEvent_Ping)(nil),              // 26: DirectoryEvent.Ping
	(*DirectoryEvent_Padding)(nil),           // 27: DirectoryEvent.Padding
	(*Certificate)(nil),                      // 28: Certificate
}
var file_directory_proto_depIdxs = []int32{
	28, // 0: DirectoryListing.creator:type_name -> Certificate
	3,  // 1: DirectoryListing.snippet:type_name -> DirectoryListingSnippet
	4,  // 2: DirectoryListing.media:type_name -> DirectoryListingMedia
	5,  // 3: DirectoryListing.service:type_name -> DirectoryListingService
	22, // 4: DirectoryEvent.publish:type_name -> DirectoryEvent.Publish
	23, // 5: DirectoryEvent.unpublish:type_name -> DirectoryEvent.Unpublish
	24, // 6: DirectoryEvent.viewer_count_change:type_name -> DirectoryEvent.ViewerCountChange
	25, // 7: DirectoryEvent.viewer_state_change:type_name -> DirectoryEvent.ViewerStateChange
	26, // 8: DirectoryEvent.ping:type_name -> DirectoryEvent.Ping
	27, // 9: DirectoryEvent.padding:type_name -> DirectoryEvent.Padding
	6,  // 10: DirectoryPublishRequest.listing:type_name -> DirectoryListing
	7,  // 11: DirectoryFrontendOpenResponse.event:type_name -> DirectoryEvent
	6,  // 12: DirectoryEvent.Publish.listing:type_name -> DirectoryListing
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_directory_proto_init() }
func file_directory_proto_init() {
	if File_directory_proto != nil {
		return
	}
	file_profile_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_directory_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDirectoryEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestDirectoryPublishRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestDirectoryPublishResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryListingSnippet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryListingMedia); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryListingService); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryListing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryPublishRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryPublishResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryUnpublishRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryUnpublishResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryJoinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryJoinResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryPartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryPartResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryPingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryPingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryFrontendOpenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryFrontendOpenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryFrontendTestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryFrontendTestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryEvent_Publish); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryEvent_Unpublish); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryEvent_ViewerCountChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryEvent_ViewerStateChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryEvent_Ping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directory_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryEvent_Padding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_directory_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*DirectoryListing_Media)(nil),
		(*DirectoryListing_Service)(nil),
	}
	file_directory_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*DirectoryEvent_Publish_)(nil),
		(*DirectoryEvent_Unpublish_)(nil),
		(*DirectoryEvent_ViewerCountChange_)(nil),
		(*DirectoryEvent_ViewerStateChange_)(nil),
		(*DirectoryEvent_Ping_)(nil),
		(*DirectoryEvent_Padding_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_directory_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_directory_proto_goTypes,
		DependencyIndexes: file_directory_proto_depIdxs,
		MessageInfos:      file_directory_proto_msgTypes,
	}.Build()
	File_directory_proto = out.File
	file_directory_proto_rawDesc = nil
	file_directory_proto_goTypes = nil
	file_directory_proto_depIdxs = nil
}
