// Copyright 2022 Strims contributors
// SPDX-License-Identifier: AGPL-3.0-only

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.1
// source: replication/v1/peer.proto

package replicationv1

import (
	v1 "github.com/MemeLabs/strims/pkg/apis/dao/v1"
	v11 "github.com/MemeLabs/strims/pkg/apis/profile/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PeerOpenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version              uint32 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	MinCompatibleVersion uint32 `protobuf:"varint,2,opt,name=min_compatible_version,json=minCompatibleVersion,proto3" json:"min_compatible_version,omitempty"`
	ReplicaId            uint64 `protobuf:"varint,3,opt,name=replica_id,json=replicaId,proto3" json:"replica_id,omitempty"`
}

func (x *PeerOpenRequest) Reset() {
	*x = PeerOpenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replication_v1_peer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeerOpenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerOpenRequest) ProtoMessage() {}

func (x *PeerOpenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_replication_v1_peer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerOpenRequest.ProtoReflect.Descriptor instead.
func (*PeerOpenRequest) Descriptor() ([]byte, []int) {
	return file_replication_v1_peer_proto_rawDescGZIP(), []int{0}
}

func (x *PeerOpenRequest) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *PeerOpenRequest) GetMinCompatibleVersion() uint32 {
	if x != nil {
		return x.MinCompatibleVersion
	}
	return 0
}

func (x *PeerOpenRequest) GetReplicaId() uint64 {
	if x != nil {
		return x.ReplicaId
	}
	return 0
}

type PeerOpenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Checkpoint *v1.VersionVector `protobuf:"bytes,1,opt,name=checkpoint,proto3" json:"checkpoint,omitempty"`
}

func (x *PeerOpenResponse) Reset() {
	*x = PeerOpenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replication_v1_peer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeerOpenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerOpenResponse) ProtoMessage() {}

func (x *PeerOpenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_replication_v1_peer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerOpenResponse.ProtoReflect.Descriptor instead.
func (*PeerOpenResponse) Descriptor() ([]byte, []int) {
	return file_replication_v1_peer_proto_rawDescGZIP(), []int{1}
}

func (x *PeerOpenResponse) GetCheckpoint() *v1.VersionVector {
	if x != nil {
		return x.Checkpoint
	}
	return nil
}

type PeerSendEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Checkpoint *v1.VersionVector `protobuf:"bytes,1,opt,name=checkpoint,proto3" json:"checkpoint,omitempty"`
	Events     []*Event          `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *PeerSendEventsRequest) Reset() {
	*x = PeerSendEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replication_v1_peer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeerSendEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerSendEventsRequest) ProtoMessage() {}

func (x *PeerSendEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_replication_v1_peer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerSendEventsRequest.ProtoReflect.Descriptor instead.
func (*PeerSendEventsRequest) Descriptor() ([]byte, []int) {
	return file_replication_v1_peer_proto_rawDescGZIP(), []int{2}
}

func (x *PeerSendEventsRequest) GetCheckpoint() *v1.VersionVector {
	if x != nil {
		return x.Checkpoint
	}
	return nil
}

func (x *PeerSendEventsRequest) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

type PeerSendEventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Checkpoint *v1.VersionVector `protobuf:"bytes,1,opt,name=checkpoint,proto3" json:"checkpoint,omitempty"`
}

func (x *PeerSendEventsResponse) Reset() {
	*x = PeerSendEventsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replication_v1_peer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeerSendEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerSendEventsResponse) ProtoMessage() {}

func (x *PeerSendEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_replication_v1_peer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerSendEventsResponse.ProtoReflect.Descriptor instead.
func (*PeerSendEventsResponse) Descriptor() ([]byte, []int) {
	return file_replication_v1_peer_proto_rawDescGZIP(), []int{3}
}

func (x *PeerSendEventsResponse) GetCheckpoint() *v1.VersionVector {
	if x != nil {
		return x.Checkpoint
	}
	return nil
}

type PeerAllocateProfileIDsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PeerAllocateProfileIDsRequest) Reset() {
	*x = PeerAllocateProfileIDsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replication_v1_peer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeerAllocateProfileIDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerAllocateProfileIDsRequest) ProtoMessage() {}

func (x *PeerAllocateProfileIDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_replication_v1_peer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerAllocateProfileIDsRequest.ProtoReflect.Descriptor instead.
func (*PeerAllocateProfileIDsRequest) Descriptor() ([]byte, []int) {
	return file_replication_v1_peer_proto_rawDescGZIP(), []int{4}
}

type PeerAllocateProfileIDsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfileId *v11.ProfileID `protobuf:"bytes,1,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
}

func (x *PeerAllocateProfileIDsResponse) Reset() {
	*x = PeerAllocateProfileIDsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replication_v1_peer_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeerAllocateProfileIDsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerAllocateProfileIDsResponse) ProtoMessage() {}

func (x *PeerAllocateProfileIDsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_replication_v1_peer_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerAllocateProfileIDsResponse.ProtoReflect.Descriptor instead.
func (*PeerAllocateProfileIDsResponse) Descriptor() ([]byte, []int) {
	return file_replication_v1_peer_proto_rawDescGZIP(), []int{5}
}

func (x *PeerAllocateProfileIDsResponse) GetProfileId() *v11.ProfileID {
	if x != nil {
		return x.ProfileId
	}
	return nil
}

var File_replication_v1_peer_proto protoreflect.FileDescriptor

var file_replication_v1_peer_proto_rawDesc = []byte{
	0x0a, 0x19, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31,
	0x2f, 0x70, 0x65, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x73, 0x74, 0x72,
	0x69, 0x6d, 0x73, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x1a, 0x20, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x76, 0x31, 0x2f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2f, 0x76, 0x31,
	0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10,
	0x64, 0x61, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x80, 0x01, 0x0a, 0x0f, 0x50, 0x65, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x34,
	0x0a, 0x16, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x6c, 0x65,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14,
	0x6d, 0x69, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x10, 0x50, 0x65, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x74,
	0x72, 0x69, 0x6d, 0x73, 0x2e, 0x64, 0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x8b, 0x01, 0x0a, 0x15, 0x50, 0x65, 0x65, 0x72, 0x53, 0x65,
	0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x3c, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x64, 0x61, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x52, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x34, 0x0a,
	0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x22, 0x56, 0x0a, 0x16, 0x50, 0x65, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a,
	0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x64, 0x61, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52,
	0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x1f, 0x0a, 0x1d, 0x50,
	0x65, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5d, 0x0a, 0x1e,
	0x50, 0x65, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x49, 0x44, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x44,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x32, 0xd9, 0x02, 0x0a, 0x0f,
	0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x65, 0x72, 0x12,
	0x57, 0x0a, 0x04, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x26, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73,
	0x2e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x65, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x27, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69, 0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x64,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2c, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e,
	0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x65, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x72, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x65,
	0x72, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x81, 0x01, 0x0a, 0x12, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x73, 0x12, 0x34, 0x2e, 0x73, 0x74, 0x72,
	0x69, 0x6d, 0x73, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x35, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x41, 0x6c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x62, 0x0a, 0x18, 0x67, 0x67, 0x2e, 0x73, 0x74,
	0x72, 0x69, 0x6d, 0x73, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x5a, 0x40, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x4d, 0x65, 0x6d, 0x65, 0x4c, 0x61, 0x62, 0x73, 0x2f, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x3b, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x76, 0x31, 0xba, 0x02, 0x03, 0x53, 0x4e, 0x54, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_replication_v1_peer_proto_rawDescOnce sync.Once
	file_replication_v1_peer_proto_rawDescData = file_replication_v1_peer_proto_rawDesc
)

func file_replication_v1_peer_proto_rawDescGZIP() []byte {
	file_replication_v1_peer_proto_rawDescOnce.Do(func() {
		file_replication_v1_peer_proto_rawDescData = protoimpl.X.CompressGZIP(file_replication_v1_peer_proto_rawDescData)
	})
	return file_replication_v1_peer_proto_rawDescData
}

var file_replication_v1_peer_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_replication_v1_peer_proto_goTypes = []interface{}{
	(*PeerOpenRequest)(nil),                // 0: strims.replication.v1.PeerOpenRequest
	(*PeerOpenResponse)(nil),               // 1: strims.replication.v1.PeerOpenResponse
	(*PeerSendEventsRequest)(nil),          // 2: strims.replication.v1.PeerSendEventsRequest
	(*PeerSendEventsResponse)(nil),         // 3: strims.replication.v1.PeerSendEventsResponse
	(*PeerAllocateProfileIDsRequest)(nil),  // 4: strims.replication.v1.PeerAllocateProfileIDsRequest
	(*PeerAllocateProfileIDsResponse)(nil), // 5: strims.replication.v1.PeerAllocateProfileIDsResponse
	(*v1.VersionVector)(nil),               // 6: strims.dao.v1.VersionVector
	(*Event)(nil),                          // 7: strims.replication.v1.Event
	(*v11.ProfileID)(nil),                  // 8: strims.profile.v1.ProfileID
}
var file_replication_v1_peer_proto_depIdxs = []int32{
	6, // 0: strims.replication.v1.PeerOpenResponse.checkpoint:type_name -> strims.dao.v1.VersionVector
	6, // 1: strims.replication.v1.PeerSendEventsRequest.checkpoint:type_name -> strims.dao.v1.VersionVector
	7, // 2: strims.replication.v1.PeerSendEventsRequest.events:type_name -> strims.replication.v1.Event
	6, // 3: strims.replication.v1.PeerSendEventsResponse.checkpoint:type_name -> strims.dao.v1.VersionVector
	8, // 4: strims.replication.v1.PeerAllocateProfileIDsResponse.profile_id:type_name -> strims.profile.v1.ProfileID
	0, // 5: strims.replication.v1.ReplicationPeer.Open:input_type -> strims.replication.v1.PeerOpenRequest
	2, // 6: strims.replication.v1.ReplicationPeer.SendEvents:input_type -> strims.replication.v1.PeerSendEventsRequest
	4, // 7: strims.replication.v1.ReplicationPeer.AllocateProfileIDs:input_type -> strims.replication.v1.PeerAllocateProfileIDsRequest
	1, // 8: strims.replication.v1.ReplicationPeer.Open:output_type -> strims.replication.v1.PeerOpenResponse
	3, // 9: strims.replication.v1.ReplicationPeer.SendEvents:output_type -> strims.replication.v1.PeerSendEventsResponse
	5, // 10: strims.replication.v1.ReplicationPeer.AllocateProfileIDs:output_type -> strims.replication.v1.PeerAllocateProfileIDsResponse
	8, // [8:11] is the sub-list for method output_type
	5, // [5:8] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_replication_v1_peer_proto_init() }
func file_replication_v1_peer_proto_init() {
	if File_replication_v1_peer_proto != nil {
		return
	}
	file_replication_v1_replication_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_replication_v1_peer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeerOpenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replication_v1_peer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeerOpenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replication_v1_peer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeerSendEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replication_v1_peer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeerSendEventsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replication_v1_peer_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeerAllocateProfileIDsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replication_v1_peer_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeerAllocateProfileIDsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_replication_v1_peer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_replication_v1_peer_proto_goTypes,
		DependencyIndexes: file_replication_v1_peer_proto_depIdxs,
		MessageInfos:      file_replication_v1_peer_proto_msgTypes,
	}.Build()
	File_replication_v1_peer_proto = out.File
	file_replication_v1_peer_proto_rawDesc = nil
	file_replication_v1_peer_proto_goTypes = nil
	file_replication_v1_peer_proto_depIdxs = nil
}
