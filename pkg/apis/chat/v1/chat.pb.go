// Copyright 2022 Strims contributors
// SPDX-License-Identifier: AGPL-3.0-only

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.1
// source: chat/v1/chat.proto

package chatv1

import (
	v1 "github.com/MemeLabs/strims/pkg/apis/dao/v1"
	directory "github.com/MemeLabs/strims/pkg/apis/network/v1/directory"
	image "github.com/MemeLabs/strims/pkg/apis/type/image"
	key "github.com/MemeLabs/strims/pkg/apis/type/key"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EmoteFileType int32

const (
	EmoteFileType_FILE_TYPE_UNDEFINED EmoteFileType = 0
	EmoteFileType_FILE_TYPE_PNG       EmoteFileType = 1
	EmoteFileType_FILE_TYPE_GIF       EmoteFileType = 2
)

// Enum value maps for EmoteFileType.
var (
	EmoteFileType_name = map[int32]string{
		0: "FILE_TYPE_UNDEFINED",
		1: "FILE_TYPE_PNG",
		2: "FILE_TYPE_GIF",
	}
	EmoteFileType_value = map[string]int32{
		"FILE_TYPE_UNDEFINED": 0,
		"FILE_TYPE_PNG":       1,
		"FILE_TYPE_GIF":       2,
	}
)

func (x EmoteFileType) Enum() *EmoteFileType {
	p := new(EmoteFileType)
	*p = x
	return p
}

func (x EmoteFileType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EmoteFileType) Descriptor() protoreflect.EnumDescriptor {
	return file_chat_v1_chat_proto_enumTypes[0].Descriptor()
}

func (EmoteFileType) Type() protoreflect.EnumType {
	return &file_chat_v1_chat_proto_enumTypes[0]
}

func (x EmoteFileType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EmoteFileType.Descriptor instead.
func (EmoteFileType) EnumDescriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{0}
}

type EmoteScale int32

const (
	EmoteScale_EMOTE_SCALE_1X EmoteScale = 0
	EmoteScale_EMOTE_SCALE_2X EmoteScale = 1
	EmoteScale_EMOTE_SCALE_4X EmoteScale = 2
)

// Enum value maps for EmoteScale.
var (
	EmoteScale_name = map[int32]string{
		0: "EMOTE_SCALE_1X",
		1: "EMOTE_SCALE_2X",
		2: "EMOTE_SCALE_4X",
	}
	EmoteScale_value = map[string]int32{
		"EMOTE_SCALE_1X": 0,
		"EMOTE_SCALE_2X": 1,
		"EMOTE_SCALE_4X": 2,
	}
)

func (x EmoteScale) Enum() *EmoteScale {
	p := new(EmoteScale)
	*p = x
	return p
}

func (x EmoteScale) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EmoteScale) Descriptor() protoreflect.EnumDescriptor {
	return file_chat_v1_chat_proto_enumTypes[1].Descriptor()
}

func (EmoteScale) Type() protoreflect.EnumType {
	return &file_chat_v1_chat_proto_enumTypes[1]
}

func (x EmoteScale) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EmoteScale.Descriptor instead.
func (EmoteScale) EnumDescriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{1}
}

type UIConfig_ShowRemoved int32

const (
	UIConfig_SHOW_REMOVED_REMOVE     UIConfig_ShowRemoved = 0
	UIConfig_SHOW_REMOVED_CENSOR     UIConfig_ShowRemoved = 1
	UIConfig_SHOW_REMOVED_DO_NOTHING UIConfig_ShowRemoved = 2
)

// Enum value maps for UIConfig_ShowRemoved.
var (
	UIConfig_ShowRemoved_name = map[int32]string{
		0: "SHOW_REMOVED_REMOVE",
		1: "SHOW_REMOVED_CENSOR",
		2: "SHOW_REMOVED_DO_NOTHING",
	}
	UIConfig_ShowRemoved_value = map[string]int32{
		"SHOW_REMOVED_REMOVE":     0,
		"SHOW_REMOVED_CENSOR":     1,
		"SHOW_REMOVED_DO_NOTHING": 2,
	}
)

func (x UIConfig_ShowRemoved) Enum() *UIConfig_ShowRemoved {
	p := new(UIConfig_ShowRemoved)
	*p = x
	return p
}

func (x UIConfig_ShowRemoved) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UIConfig_ShowRemoved) Descriptor() protoreflect.EnumDescriptor {
	return file_chat_v1_chat_proto_enumTypes[2].Descriptor()
}

func (UIConfig_ShowRemoved) Type() protoreflect.EnumType {
	return &file_chat_v1_chat_proto_enumTypes[2]
}

func (x UIConfig_ShowRemoved) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UIConfig_ShowRemoved.Descriptor instead.
func (UIConfig_ShowRemoved) EnumDescriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{13, 0}
}

type UIConfig_UserPresenceIndicator int32

const (
	UIConfig_USER_PRESENCE_INDICATOR_DISABLED UIConfig_UserPresenceIndicator = 0
	UIConfig_USER_PRESENCE_INDICATOR_BAR      UIConfig_UserPresenceIndicator = 1
	UIConfig_USER_PRESENCE_INDICATOR_DOT      UIConfig_UserPresenceIndicator = 2
	UIConfig_USER_PRESENCE_INDICATOR_ARRAY    UIConfig_UserPresenceIndicator = 3
)

// Enum value maps for UIConfig_UserPresenceIndicator.
var (
	UIConfig_UserPresenceIndicator_name = map[int32]string{
		0: "USER_PRESENCE_INDICATOR_DISABLED",
		1: "USER_PRESENCE_INDICATOR_BAR",
		2: "USER_PRESENCE_INDICATOR_DOT",
		3: "USER_PRESENCE_INDICATOR_ARRAY",
	}
	UIConfig_UserPresenceIndicator_value = map[string]int32{
		"USER_PRESENCE_INDICATOR_DISABLED": 0,
		"USER_PRESENCE_INDICATOR_BAR":      1,
		"USER_PRESENCE_INDICATOR_DOT":      2,
		"USER_PRESENCE_INDICATOR_ARRAY":    3,
	}
)

func (x UIConfig_UserPresenceIndicator) Enum() *UIConfig_UserPresenceIndicator {
	p := new(UIConfig_UserPresenceIndicator)
	*p = x
	return p
}

func (x UIConfig_UserPresenceIndicator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UIConfig_UserPresenceIndicator) Descriptor() protoreflect.EnumDescriptor {
	return file_chat_v1_chat_proto_enumTypes[3].Descriptor()
}

func (UIConfig_UserPresenceIndicator) Type() protoreflect.EnumType {
	return &file_chat_v1_chat_proto_enumTypes[3]
}

func (x UIConfig_UserPresenceIndicator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UIConfig_UserPresenceIndicator.Descriptor instead.
func (UIConfig_UserPresenceIndicator) EnumDescriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{13, 1}
}

type ListEmotesRequest_Part int32

const (
	ListEmotesRequest_PART_UNDEFINED ListEmotesRequest_Part = 0
	ListEmotesRequest_PART_META      ListEmotesRequest_Part = 1
	ListEmotesRequest_PART_ASSETS    ListEmotesRequest_Part = 2
)

// Enum value maps for ListEmotesRequest_Part.
var (
	ListEmotesRequest_Part_name = map[int32]string{
		0: "PART_UNDEFINED",
		1: "PART_META",
		2: "PART_ASSETS",
	}
	ListEmotesRequest_Part_value = map[string]int32{
		"PART_UNDEFINED": 0,
		"PART_META":      1,
		"PART_ASSETS":    2,
	}
)

func (x ListEmotesRequest_Part) Enum() *ListEmotesRequest_Part {
	p := new(ListEmotesRequest_Part)
	*p = x
	return p
}

func (x ListEmotesRequest_Part) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListEmotesRequest_Part) Descriptor() protoreflect.EnumDescriptor {
	return file_chat_v1_chat_proto_enumTypes[4].Descriptor()
}

func (ListEmotesRequest_Part) Type() protoreflect.EnumType {
	return &file_chat_v1_chat_proto_enumTypes[4]
}

func (x ListEmotesRequest_Part) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListEmotesRequest_Part.Descriptor instead.
func (ListEmotesRequest_Part) EnumDescriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{39, 0}
}

type WhisperRecord_State int32

const (
	WhisperRecord_WHISPER_STATE_RECEIVED  WhisperRecord_State = 0
	WhisperRecord_WHISPER_STATE_ENQUEUED  WhisperRecord_State = 1
	WhisperRecord_WHISPER_STATE_DELIVERED WhisperRecord_State = 2
	WhisperRecord_WHISPER_STATE_FAILED    WhisperRecord_State = 3
)

// Enum value maps for WhisperRecord_State.
var (
	WhisperRecord_State_name = map[int32]string{
		0: "WHISPER_STATE_RECEIVED",
		1: "WHISPER_STATE_ENQUEUED",
		2: "WHISPER_STATE_DELIVERED",
		3: "WHISPER_STATE_FAILED",
	}
	WhisperRecord_State_value = map[string]int32{
		"WHISPER_STATE_RECEIVED":  0,
		"WHISPER_STATE_ENQUEUED":  1,
		"WHISPER_STATE_DELIVERED": 2,
		"WHISPER_STATE_FAILED":    3,
	}
)

func (x WhisperRecord_State) Enum() *WhisperRecord_State {
	p := new(WhisperRecord_State)
	*p = x
	return p
}

func (x WhisperRecord_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WhisperRecord_State) Descriptor() protoreflect.EnumDescriptor {
	return file_chat_v1_chat_proto_enumTypes[5].Descriptor()
}

func (WhisperRecord_State) Type() protoreflect.EnumType {
	return &file_chat_v1_chat_proto_enumTypes[5]
}

func (x WhisperRecord_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WhisperRecord_State.Descriptor instead.
func (WhisperRecord_State) EnumDescriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{108, 0}
}

type ServerEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Body:
	//	*ServerEvent_Message
	Body isServerEvent_Body `protobuf_oneof:"body"`
}

func (x *ServerEvent) Reset() {
	*x = ServerEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerEvent) ProtoMessage() {}

func (x *ServerEvent) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerEvent.ProtoReflect.Descriptor instead.
func (*ServerEvent) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{0}
}

func (m *ServerEvent) GetBody() isServerEvent_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (x *ServerEvent) GetMessage() *Message {
	if x, ok := x.GetBody().(*ServerEvent_Message); ok {
		return x.Message
	}
	return nil
}

type isServerEvent_Body interface {
	isServerEvent_Body()
}

type ServerEvent_Message struct {
	Message *Message `protobuf:"bytes,1001,opt,name=message,proto3,oneof"`
}

func (*ServerEvent_Message) isServerEvent_Body() {}

type Room struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Css  string `protobuf:"bytes,2,opt,name=css,proto3" json:"css,omitempty"`
}

func (x *Room) Reset() {
	*x = Room{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Room) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Room) ProtoMessage() {}

func (x *Room) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Room.ProtoReflect.Descriptor instead.
func (*Room) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{1}
}

func (x *Room) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Room) GetCss() string {
	if x != nil {
		return x.Css
	}
	return ""
}

type Server struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	NetworkKey    []byte   `protobuf:"bytes,2,opt,name=network_key,json=networkKey,proto3" json:"network_key,omitempty"`
	Key           *key.Key `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Room          *Room    `protobuf:"bytes,4,opt,name=room,proto3" json:"room,omitempty"`
	AdminPeerKeys [][]byte `protobuf:"bytes,5,rep,name=admin_peer_keys,json=adminPeerKeys,proto3" json:"admin_peer_keys,omitempty"`
}

func (x *Server) Reset() {
	*x = Server{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server) ProtoMessage() {}

func (x *Server) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server.ProtoReflect.Descriptor instead.
func (*Server) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{2}
}

func (x *Server) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Server) GetNetworkKey() []byte {
	if x != nil {
		return x.NetworkKey
	}
	return nil
}

func (x *Server) GetKey() *key.Key {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *Server) GetRoom() *Room {
	if x != nil {
		return x.Room
	}
	return nil
}

func (x *Server) GetAdminPeerKeys() [][]byte {
	if x != nil {
		return x.AdminPeerKeys
	}
	return nil
}

type ServerIcon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint64       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Image *image.Image `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *ServerIcon) Reset() {
	*x = ServerIcon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerIcon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerIcon) ProtoMessage() {}

func (x *ServerIcon) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerIcon.ProtoReflect.Descriptor instead.
func (*ServerIcon) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{3}
}

func (x *ServerIcon) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ServerIcon) GetImage() *image.Image {
	if x != nil {
		return x.Image
	}
	return nil
}

type EmoteImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data     []byte        `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	FileType EmoteFileType `protobuf:"varint,4,opt,name=file_type,json=fileType,proto3,enum=strims.chat.v1.EmoteFileType" json:"file_type,omitempty"`
	Height   uint32        `protobuf:"varint,5,opt,name=height,proto3" json:"height,omitempty"`
	Width    uint32        `protobuf:"varint,6,opt,name=width,proto3" json:"width,omitempty"`
	Scale    EmoteScale    `protobuf:"varint,7,opt,name=scale,proto3,enum=strims.chat.v1.EmoteScale" json:"scale,omitempty"`
}

func (x *EmoteImage) Reset() {
	*x = EmoteImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmoteImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmoteImage) ProtoMessage() {}

func (x *EmoteImage) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmoteImage.ProtoReflect.Descriptor instead.
func (*EmoteImage) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{4}
}

func (x *EmoteImage) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *EmoteImage) GetFileType() EmoteFileType {
	if x != nil {
		return x.FileType
	}
	return EmoteFileType_FILE_TYPE_UNDEFINED
}

func (x *EmoteImage) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *EmoteImage) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *EmoteImage) GetScale() EmoteScale {
	if x != nil {
		return x.Scale
	}
	return EmoteScale_EMOTE_SCALE_1X
}

type EmoteEffect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Effect:
	//	*EmoteEffect_CustomCss
	//	*EmoteEffect_SpriteAnimation_
	//	*EmoteEffect_DefaultModifiers_
	Effect isEmoteEffect_Effect `protobuf_oneof:"effect"`
}

func (x *EmoteEffect) Reset() {
	*x = EmoteEffect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmoteEffect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmoteEffect) ProtoMessage() {}

func (x *EmoteEffect) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmoteEffect.ProtoReflect.Descriptor instead.
func (*EmoteEffect) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{5}
}

func (m *EmoteEffect) GetEffect() isEmoteEffect_Effect {
	if m != nil {
		return m.Effect
	}
	return nil
}

func (x *EmoteEffect) GetCustomCss() *EmoteEffect_CustomCSS {
	if x, ok := x.GetEffect().(*EmoteEffect_CustomCss); ok {
		return x.CustomCss
	}
	return nil
}

func (x *EmoteEffect) GetSpriteAnimation() *EmoteEffect_SpriteAnimation {
	if x, ok := x.GetEffect().(*EmoteEffect_SpriteAnimation_); ok {
		return x.SpriteAnimation
	}
	return nil
}

func (x *EmoteEffect) GetDefaultModifiers() *EmoteEffect_DefaultModifiers {
	if x, ok := x.GetEffect().(*EmoteEffect_DefaultModifiers_); ok {
		return x.DefaultModifiers
	}
	return nil
}

type isEmoteEffect_Effect interface {
	isEmoteEffect_Effect()
}

type EmoteEffect_CustomCss struct {
	CustomCss *EmoteEffect_CustomCSS `protobuf:"bytes,1001,opt,name=custom_css,json=customCss,proto3,oneof"`
}

type EmoteEffect_SpriteAnimation_ struct {
	SpriteAnimation *EmoteEffect_SpriteAnimation `protobuf:"bytes,1002,opt,name=sprite_animation,json=spriteAnimation,proto3,oneof"`
}

type EmoteEffect_DefaultModifiers_ struct {
	DefaultModifiers *EmoteEffect_DefaultModifiers `protobuf:"bytes,1003,opt,name=default_modifiers,json=defaultModifiers,proto3,oneof"`
}

func (*EmoteEffect_CustomCss) isEmoteEffect_Effect() {}

func (*EmoteEffect_SpriteAnimation_) isEmoteEffect_Effect() {}

func (*EmoteEffect_DefaultModifiers_) isEmoteEffect_Effect() {}

type EmoteContributor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Link string `protobuf:"bytes,2,opt,name=link,proto3" json:"link,omitempty"`
}

func (x *EmoteContributor) Reset() {
	*x = EmoteContributor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmoteContributor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmoteContributor) ProtoMessage() {}

func (x *EmoteContributor) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmoteContributor.ProtoReflect.Descriptor instead.
func (*EmoteContributor) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{6}
}

func (x *EmoteContributor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EmoteContributor) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

type Emote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ServerId    uint64            `protobuf:"varint,2,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Name        string            `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Images      []*EmoteImage     `protobuf:"bytes,4,rep,name=images,proto3" json:"images,omitempty"`
	Effects     []*EmoteEffect    `protobuf:"bytes,5,rep,name=effects,proto3" json:"effects,omitempty"`
	Contributor *EmoteContributor `protobuf:"bytes,6,opt,name=contributor,proto3" json:"contributor,omitempty"`
}

func (x *Emote) Reset() {
	*x = Emote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Emote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Emote) ProtoMessage() {}

func (x *Emote) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Emote.ProtoReflect.Descriptor instead.
func (*Emote) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{7}
}

func (x *Emote) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Emote) GetServerId() uint64 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *Emote) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Emote) GetImages() []*EmoteImage {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *Emote) GetEffects() []*EmoteEffect {
	if x != nil {
		return x.Effects
	}
	return nil
}

func (x *Emote) GetContributor() *EmoteContributor {
	if x != nil {
		return x.Contributor
	}
	return nil
}

type Modifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             uint64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ServerId       uint64  `protobuf:"varint,2,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Name           string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Priority       uint32  `protobuf:"varint,4,opt,name=priority,proto3" json:"priority,omitempty"`
	Internal       bool    `protobuf:"varint,5,opt,name=internal,proto3" json:"internal,omitempty"`
	ExtraWrapCount uint32  `protobuf:"varint,6,opt,name=extra_wrap_count,json=extraWrapCount,proto3" json:"extra_wrap_count,omitempty"`
	ProcChance     float64 `protobuf:"fixed64,7,opt,name=proc_chance,json=procChance,proto3" json:"proc_chance,omitempty"`
}

func (x *Modifier) Reset() {
	*x = Modifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Modifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Modifier) ProtoMessage() {}

func (x *Modifier) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Modifier.ProtoReflect.Descriptor instead.
func (*Modifier) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{8}
}

func (x *Modifier) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Modifier) GetServerId() uint64 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *Modifier) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Modifier) GetPriority() uint32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *Modifier) GetInternal() bool {
	if x != nil {
		return x.Internal
	}
	return false
}

func (x *Modifier) GetExtraWrapCount() uint32 {
	if x != nil {
		return x.ExtraWrapCount
	}
	return 0
}

func (x *Modifier) GetProcChance() float64 {
	if x != nil {
		return x.ProcChance
	}
	return 0
}

type Tag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ServerId  uint64 `protobuf:"varint,2,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Name      string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Color     string `protobuf:"bytes,4,opt,name=color,proto3" json:"color,omitempty"`
	Sensitive bool   `protobuf:"varint,5,opt,name=sensitive,proto3" json:"sensitive,omitempty"`
}

func (x *Tag) Reset() {
	*x = Tag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tag) ProtoMessage() {}

func (x *Tag) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tag.ProtoReflect.Descriptor instead.
func (*Tag) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{9}
}

func (x *Tag) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Tag) GetServerId() uint64 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *Tag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Tag) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *Tag) GetSensitive() bool {
	if x != nil {
		return x.Sensitive
	}
	return false
}

type AssetBundle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsDelta    bool         `protobuf:"varint,1,opt,name=is_delta,json=isDelta,proto3" json:"is_delta,omitempty"`
	RemovedIds []uint64     `protobuf:"varint,2,rep,packed,name=removed_ids,json=removedIds,proto3" json:"removed_ids,omitempty"`
	Room       *Room        `protobuf:"bytes,3,opt,name=room,proto3" json:"room,omitempty"`
	Emotes     []*Emote     `protobuf:"bytes,4,rep,name=emotes,proto3" json:"emotes,omitempty"`
	Modifiers  []*Modifier  `protobuf:"bytes,5,rep,name=modifiers,proto3" json:"modifiers,omitempty"`
	Tags       []*Tag       `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`
	Icon       *image.Image `protobuf:"bytes,7,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *AssetBundle) Reset() {
	*x = AssetBundle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetBundle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetBundle) ProtoMessage() {}

func (x *AssetBundle) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetBundle.ProtoReflect.Descriptor instead.
func (*AssetBundle) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{10}
}

func (x *AssetBundle) GetIsDelta() bool {
	if x != nil {
		return x.IsDelta
	}
	return false
}

func (x *AssetBundle) GetRemovedIds() []uint64 {
	if x != nil {
		return x.RemovedIds
	}
	return nil
}

func (x *AssetBundle) GetRoom() *Room {
	if x != nil {
		return x.Room
	}
	return nil
}

func (x *AssetBundle) GetEmotes() []*Emote {
	if x != nil {
		return x.Emotes
	}
	return nil
}

func (x *AssetBundle) GetModifiers() []*Modifier {
	if x != nil {
		return x.Modifiers
	}
	return nil
}

func (x *AssetBundle) GetTags() []*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *AssetBundle) GetIcon() *image.Image {
	if x != nil {
		return x.Icon
	}
	return nil
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerTime    int64                 `protobuf:"varint,1,opt,name=server_time,json=serverTime,proto3" json:"server_time,omitempty"`
	PeerKey       []byte                `protobuf:"bytes,2,opt,name=peer_key,json=peerKey,proto3" json:"peer_key,omitempty"`
	Nick          string                `protobuf:"bytes,3,opt,name=nick,proto3" json:"nick,omitempty"`
	Body          string                `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	Entities      *Message_Entities     `protobuf:"bytes,5,opt,name=entities,proto3" json:"entities,omitempty"`
	ViewedListing *Message_DirectoryRef `protobuf:"bytes,9,opt,name=viewed_listing,json=viewedListing,proto3" json:"viewed_listing,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{11}
}

func (x *Message) GetServerTime() int64 {
	if x != nil {
		return x.ServerTime
	}
	return 0
}

func (x *Message) GetPeerKey() []byte {
	if x != nil {
		return x.PeerKey
	}
	return nil
}

func (x *Message) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (x *Message) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *Message) GetEntities() *Message_Entities {
	if x != nil {
		return x.Entities
	}
	return nil
}

func (x *Message) GetViewedListing() *Message_DirectoryRef {
	if x != nil {
		return x.ViewedListing
	}
	return nil
}

type Profile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint64          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ServerId     uint64          `protobuf:"varint,2,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	PeerKey      []byte          `protobuf:"bytes,3,opt,name=peer_key,json=peerKey,proto3" json:"peer_key,omitempty"`
	Alias        string          `protobuf:"bytes,4,opt,name=alias,proto3" json:"alias,omitempty"`
	Mutes        []*Profile_Mute `protobuf:"bytes,5,rep,name=mutes,proto3" json:"mutes,omitempty"`
	MuteDeadline int64           `protobuf:"varint,6,opt,name=mute_deadline,json=muteDeadline,proto3" json:"mute_deadline,omitempty"`
}

func (x *Profile) Reset() {
	*x = Profile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Profile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profile) ProtoMessage() {}

func (x *Profile) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profile.ProtoReflect.Descriptor instead.
func (*Profile) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{12}
}

func (x *Profile) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Profile) GetServerId() uint64 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *Profile) GetPeerKey() []byte {
	if x != nil {
		return x.PeerKey
	}
	return nil
}

func (x *Profile) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *Profile) GetMutes() []*Profile_Mute {
	if x != nil {
		return x.Mutes
	}
	return nil
}

func (x *Profile) GetMuteDeadline() int64 {
	if x != nil {
		return x.MuteDeadline
	}
	return 0
}

type UIConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShowTime                   bool                           `protobuf:"varint,1,opt,name=show_time,json=showTime,proto3" json:"show_time,omitempty"`
	ShowFlairIcons             bool                           `protobuf:"varint,2,opt,name=show_flair_icons,json=showFlairIcons,proto3" json:"show_flair_icons,omitempty"`
	TimestampFormat            string                         `protobuf:"bytes,3,opt,name=timestamp_format,json=timestampFormat,proto3" json:"timestamp_format,omitempty"`
	MaxLines                   uint32                         `protobuf:"varint,4,opt,name=max_lines,json=maxLines,proto3" json:"max_lines,omitempty"`
	NotificationWhisper        bool                           `protobuf:"varint,5,opt,name=notification_whisper,json=notificationWhisper,proto3" json:"notification_whisper,omitempty"`
	SoundNotificationWhisper   bool                           `protobuf:"varint,6,opt,name=sound_notification_whisper,json=soundNotificationWhisper,proto3" json:"sound_notification_whisper,omitempty"`
	NotificationHighlight      bool                           `protobuf:"varint,7,opt,name=notification_highlight,json=notificationHighlight,proto3" json:"notification_highlight,omitempty"`
	SoundNotificationHighlight bool                           `protobuf:"varint,8,opt,name=sound_notification_highlight,json=soundNotificationHighlight,proto3" json:"sound_notification_highlight,omitempty"`
	NotificationSoundFile      *UIConfig_SoundFile            `protobuf:"bytes,9,opt,name=notification_sound_file,json=notificationSoundFile,proto3" json:"notification_sound_file,omitempty"`
	Highlight                  bool                           `protobuf:"varint,10,opt,name=highlight,proto3" json:"highlight,omitempty"`
	CustomHighlight            []string                       `protobuf:"bytes,11,rep,name=custom_highlight,json=customHighlight,proto3" json:"custom_highlight,omitempty"`
	ShowRemoved                UIConfig_ShowRemoved           `protobuf:"varint,14,opt,name=show_removed,json=showRemoved,proto3,enum=strims.chat.v1.UIConfig_ShowRemoved" json:"show_removed,omitempty"`
	ShowWhispersInChat         bool                           `protobuf:"varint,15,opt,name=show_whispers_in_chat,json=showWhispersInChat,proto3" json:"show_whispers_in_chat,omitempty"`
	FocusMentioned             bool                           `protobuf:"varint,17,opt,name=focus_mentioned,json=focusMentioned,proto3" json:"focus_mentioned,omitempty"`
	NotificationTimeout        bool                           `protobuf:"varint,18,opt,name=notification_timeout,json=notificationTimeout,proto3" json:"notification_timeout,omitempty"`
	IgnoreMentions             bool                           `protobuf:"varint,19,opt,name=ignore_mentions,json=ignoreMentions,proto3" json:"ignore_mentions,omitempty"`
	AutocompleteHelper         bool                           `protobuf:"varint,20,opt,name=autocomplete_helper,json=autocompleteHelper,proto3" json:"autocomplete_helper,omitempty"`
	AutocompleteEmotePreview   bool                           `protobuf:"varint,21,opt,name=autocomplete_emote_preview,json=autocompleteEmotePreview,proto3" json:"autocomplete_emote_preview,omitempty"`
	TaggedVisibility           bool                           `protobuf:"varint,22,opt,name=tagged_visibility,json=taggedVisibility,proto3" json:"tagged_visibility,omitempty"`
	HideNsfw                   bool                           `protobuf:"varint,23,opt,name=hide_nsfw,json=hideNsfw,proto3" json:"hide_nsfw,omitempty"`
	AnimateForever             bool                           `protobuf:"varint,24,opt,name=animate_forever,json=animateForever,proto3" json:"animate_forever,omitempty"`
	FormatterGreen             bool                           `protobuf:"varint,25,opt,name=formatter_green,json=formatterGreen,proto3" json:"formatter_green,omitempty"`
	FormatterEmote             bool                           `protobuf:"varint,26,opt,name=formatter_emote,json=formatterEmote,proto3" json:"formatter_emote,omitempty"`
	FormatterCombo             bool                           `protobuf:"varint,27,opt,name=formatter_combo,json=formatterCombo,proto3" json:"formatter_combo,omitempty"`
	EmoteModifiers             bool                           `protobuf:"varint,28,opt,name=emote_modifiers,json=emoteModifiers,proto3" json:"emote_modifiers,omitempty"`
	DisableSpoilers            bool                           `protobuf:"varint,29,opt,name=disable_spoilers,json=disableSpoilers,proto3" json:"disable_spoilers,omitempty"`
	UserPresenceIndicator      UIConfig_UserPresenceIndicator `protobuf:"varint,30,opt,name=user_presence_indicator,json=userPresenceIndicator,proto3,enum=strims.chat.v1.UIConfig_UserPresenceIndicator" json:"user_presence_indicator,omitempty"`
	HiddenEmotes               []string                       `protobuf:"bytes,31,rep,name=hidden_emotes,json=hiddenEmotes,proto3" json:"hidden_emotes,omitempty"`
	ShortenLinks               bool                           `protobuf:"varint,32,opt,name=shorten_links,json=shortenLinks,proto3" json:"shorten_links,omitempty"`
	CompactEmoteSpacing        bool                           `protobuf:"varint,33,opt,name=compact_emote_spacing,json=compactEmoteSpacing,proto3" json:"compact_emote_spacing,omitempty"`
	NormalizeAliasCase         bool                           `protobuf:"varint,34,opt,name=normalize_alias_case,json=normalizeAliasCase,proto3" json:"normalize_alias_case,omitempty"`
	EmojiSkinTone              string                         `protobuf:"bytes,35,opt,name=emoji_skin_tone,json=emojiSkinTone,proto3" json:"emoji_skin_tone,omitempty"`
}

func (x *UIConfig) Reset() {
	*x = UIConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UIConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UIConfig) ProtoMessage() {}

func (x *UIConfig) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UIConfig.ProtoReflect.Descriptor instead.
func (*UIConfig) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{13}
}

func (x *UIConfig) GetShowTime() bool {
	if x != nil {
		return x.ShowTime
	}
	return false
}

func (x *UIConfig) GetShowFlairIcons() bool {
	if x != nil {
		return x.ShowFlairIcons
	}
	return false
}

func (x *UIConfig) GetTimestampFormat() string {
	if x != nil {
		return x.TimestampFormat
	}
	return ""
}

func (x *UIConfig) GetMaxLines() uint32 {
	if x != nil {
		return x.MaxLines
	}
	return 0
}

func (x *UIConfig) GetNotificationWhisper() bool {
	if x != nil {
		return x.NotificationWhisper
	}
	return false
}

func (x *UIConfig) GetSoundNotificationWhisper() bool {
	if x != nil {
		return x.SoundNotificationWhisper
	}
	return false
}

func (x *UIConfig) GetNotificationHighlight() bool {
	if x != nil {
		return x.NotificationHighlight
	}
	return false
}

func (x *UIConfig) GetSoundNotificationHighlight() bool {
	if x != nil {
		return x.SoundNotificationHighlight
	}
	return false
}

func (x *UIConfig) GetNotificationSoundFile() *UIConfig_SoundFile {
	if x != nil {
		return x.NotificationSoundFile
	}
	return nil
}

func (x *UIConfig) GetHighlight() bool {
	if x != nil {
		return x.Highlight
	}
	return false
}

func (x *UIConfig) GetCustomHighlight() []string {
	if x != nil {
		return x.CustomHighlight
	}
	return nil
}

func (x *UIConfig) GetShowRemoved() UIConfig_ShowRemoved {
	if x != nil {
		return x.ShowRemoved
	}
	return UIConfig_SHOW_REMOVED_REMOVE
}

func (x *UIConfig) GetShowWhispersInChat() bool {
	if x != nil {
		return x.ShowWhispersInChat
	}
	return false
}

func (x *UIConfig) GetFocusMentioned() bool {
	if x != nil {
		return x.FocusMentioned
	}
	return false
}

func (x *UIConfig) GetNotificationTimeout() bool {
	if x != nil {
		return x.NotificationTimeout
	}
	return false
}

func (x *UIConfig) GetIgnoreMentions() bool {
	if x != nil {
		return x.IgnoreMentions
	}
	return false
}

func (x *UIConfig) GetAutocompleteHelper() bool {
	if x != nil {
		return x.AutocompleteHelper
	}
	return false
}

func (x *UIConfig) GetAutocompleteEmotePreview() bool {
	if x != nil {
		return x.AutocompleteEmotePreview
	}
	return false
}

func (x *UIConfig) GetTaggedVisibility() bool {
	if x != nil {
		return x.TaggedVisibility
	}
	return false
}

func (x *UIConfig) GetHideNsfw() bool {
	if x != nil {
		return x.HideNsfw
	}
	return false
}

func (x *UIConfig) GetAnimateForever() bool {
	if x != nil {
		return x.AnimateForever
	}
	return false
}

func (x *UIConfig) GetFormatterGreen() bool {
	if x != nil {
		return x.FormatterGreen
	}
	return false
}

func (x *UIConfig) GetFormatterEmote() bool {
	if x != nil {
		return x.FormatterEmote
	}
	return false
}

func (x *UIConfig) GetFormatterCombo() bool {
	if x != nil {
		return x.FormatterCombo
	}
	return false
}

func (x *UIConfig) GetEmoteModifiers() bool {
	if x != nil {
		return x.EmoteModifiers
	}
	return false
}

func (x *UIConfig) GetDisableSpoilers() bool {
	if x != nil {
		return x.DisableSpoilers
	}
	return false
}

func (x *UIConfig) GetUserPresenceIndicator() UIConfig_UserPresenceIndicator {
	if x != nil {
		return x.UserPresenceIndicator
	}
	return UIConfig_USER_PRESENCE_INDICATOR_DISABLED
}

func (x *UIConfig) GetHiddenEmotes() []string {
	if x != nil {
		return x.HiddenEmotes
	}
	return nil
}

func (x *UIConfig) GetShortenLinks() bool {
	if x != nil {
		return x.ShortenLinks
	}
	return false
}

func (x *UIConfig) GetCompactEmoteSpacing() bool {
	if x != nil {
		return x.CompactEmoteSpacing
	}
	return false
}

func (x *UIConfig) GetNormalizeAliasCase() bool {
	if x != nil {
		return x.NormalizeAliasCase
	}
	return false
}

func (x *UIConfig) GetEmojiSkinTone() string {
	if x != nil {
		return x.EmojiSkinTone
	}
	return ""
}

type UIConfigHighlight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      uint64            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Version *v1.VersionVector `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	Alias   string            `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
	PeerKey []byte            `protobuf:"bytes,3,opt,name=peer_key,json=peerKey,proto3" json:"peer_key,omitempty"`
}

func (x *UIConfigHighlight) Reset() {
	*x = UIConfigHighlight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UIConfigHighlight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UIConfigHighlight) ProtoMessage() {}

func (x *UIConfigHighlight) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UIConfigHighlight.ProtoReflect.Descriptor instead.
func (*UIConfigHighlight) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{14}
}

func (x *UIConfigHighlight) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UIConfigHighlight) GetVersion() *v1.VersionVector {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *UIConfigHighlight) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *UIConfigHighlight) GetPeerKey() []byte {
	if x != nil {
		return x.PeerKey
	}
	return nil
}

type UIConfigTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      uint64            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Version *v1.VersionVector `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
	Alias   string            `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
	PeerKey []byte            `protobuf:"bytes,3,opt,name=peer_key,json=peerKey,proto3" json:"peer_key,omitempty"`
	Color   string            `protobuf:"bytes,4,opt,name=color,proto3" json:"color,omitempty"`
}

func (x *UIConfigTag) Reset() {
	*x = UIConfigTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UIConfigTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UIConfigTag) ProtoMessage() {}

func (x *UIConfigTag) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UIConfigTag.ProtoReflect.Descriptor instead.
func (*UIConfigTag) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{15}
}

func (x *UIConfigTag) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UIConfigTag) GetVersion() *v1.VersionVector {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *UIConfigTag) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *UIConfigTag) GetPeerKey() []byte {
	if x != nil {
		return x.PeerKey
	}
	return nil
}

func (x *UIConfigTag) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type UIConfigIgnore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint64            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Version  *v1.VersionVector `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
	Alias    string            `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
	PeerKey  []byte            `protobuf:"bytes,3,opt,name=peer_key,json=peerKey,proto3" json:"peer_key,omitempty"`
	Deadline int64             `protobuf:"varint,4,opt,name=deadline,proto3" json:"deadline,omitempty"`
}

func (x *UIConfigIgnore) Reset() {
	*x = UIConfigIgnore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UIConfigIgnore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UIConfigIgnore) ProtoMessage() {}

func (x *UIConfigIgnore) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UIConfigIgnore.ProtoReflect.Descriptor instead.
func (*UIConfigIgnore) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{16}
}

func (x *UIConfigIgnore) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UIConfigIgnore) GetVersion() *v1.VersionVector {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *UIConfigIgnore) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *UIConfigIgnore) GetPeerKey() []byte {
	if x != nil {
		return x.PeerKey
	}
	return nil
}

func (x *UIConfigIgnore) GetDeadline() int64 {
	if x != nil {
		return x.Deadline
	}
	return 0
}

type CreateServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkKey []byte `protobuf:"bytes,1,opt,name=network_key,json=networkKey,proto3" json:"network_key,omitempty"`
	Room       *Room  `protobuf:"bytes,2,opt,name=room,proto3" json:"room,omitempty"`
}

func (x *CreateServerRequest) Reset() {
	*x = CreateServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServerRequest) ProtoMessage() {}

func (x *CreateServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateServerRequest.ProtoReflect.Descriptor instead.
func (*CreateServerRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{17}
}

func (x *CreateServerRequest) GetNetworkKey() []byte {
	if x != nil {
		return x.NetworkKey
	}
	return nil
}

func (x *CreateServerRequest) GetRoom() *Room {
	if x != nil {
		return x.Room
	}
	return nil
}

type CreateServerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Server *Server `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
}

func (x *CreateServerResponse) Reset() {
	*x = CreateServerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServerResponse) ProtoMessage() {}

func (x *CreateServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateServerResponse.ProtoReflect.Descriptor instead.
func (*CreateServerResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{18}
}

func (x *CreateServerResponse) GetServer() *Server {
	if x != nil {
		return x.Server
	}
	return nil
}

type UpdateServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	NetworkKey []byte `protobuf:"bytes,2,opt,name=network_key,json=networkKey,proto3" json:"network_key,omitempty"`
	Room       *Room  `protobuf:"bytes,3,opt,name=room,proto3" json:"room,omitempty"`
}

func (x *UpdateServerRequest) Reset() {
	*x = UpdateServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerRequest) ProtoMessage() {}

func (x *UpdateServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerRequest.ProtoReflect.Descriptor instead.
func (*UpdateServerRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateServerRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateServerRequest) GetNetworkKey() []byte {
	if x != nil {
		return x.NetworkKey
	}
	return nil
}

func (x *UpdateServerRequest) GetRoom() *Room {
	if x != nil {
		return x.Room
	}
	return nil
}

type UpdateServerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Server *Server `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
}

func (x *UpdateServerResponse) Reset() {
	*x = UpdateServerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerResponse) ProtoMessage() {}

func (x *UpdateServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerResponse.ProtoReflect.Descriptor instead.
func (*UpdateServerResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateServerResponse) GetServer() *Server {
	if x != nil {
		return x.Server
	}
	return nil
}

type DeleteServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteServerRequest) Reset() {
	*x = DeleteServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteServerRequest) ProtoMessage() {}

func (x *DeleteServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteServerRequest.ProtoReflect.Descriptor instead.
func (*DeleteServerRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteServerRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteServerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteServerResponse) Reset() {
	*x = DeleteServerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteServerResponse) ProtoMessage() {}

func (x *DeleteServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteServerResponse.ProtoReflect.Descriptor instead.
func (*DeleteServerResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{22}
}

type GetServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetServerRequest) Reset() {
	*x = GetServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerRequest) ProtoMessage() {}

func (x *GetServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerRequest.ProtoReflect.Descriptor instead.
func (*GetServerRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{23}
}

func (x *GetServerRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetServerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Server *Server `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
}

func (x *GetServerResponse) Reset() {
	*x = GetServerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerResponse) ProtoMessage() {}

func (x *GetServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerResponse.ProtoReflect.Descriptor instead.
func (*GetServerResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{24}
}

func (x *GetServerResponse) GetServer() *Server {
	if x != nil {
		return x.Server
	}
	return nil
}

type ListServersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListServersRequest) Reset() {
	*x = ListServersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServersRequest) ProtoMessage() {}

func (x *ListServersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServersRequest.ProtoReflect.Descriptor instead.
func (*ListServersRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{25}
}

type ListServersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Servers []*Server `protobuf:"bytes,1,rep,name=servers,proto3" json:"servers,omitempty"`
}

func (x *ListServersResponse) Reset() {
	*x = ListServersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServersResponse) ProtoMessage() {}

func (x *ListServersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServersResponse.ProtoReflect.Descriptor instead.
func (*ListServersResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{26}
}

func (x *ListServersResponse) GetServers() []*Server {
	if x != nil {
		return x.Servers
	}
	return nil
}

type UpdateServerIconRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId uint64       `protobuf:"varint,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Image    *image.Image `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *UpdateServerIconRequest) Reset() {
	*x = UpdateServerIconRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerIconRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerIconRequest) ProtoMessage() {}

func (x *UpdateServerIconRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerIconRequest.ProtoReflect.Descriptor instead.
func (*UpdateServerIconRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{27}
}

func (x *UpdateServerIconRequest) GetServerId() uint64 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *UpdateServerIconRequest) GetImage() *image.Image {
	if x != nil {
		return x.Image
	}
	return nil
}

type UpdateServerIconResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerIcon *ServerIcon `protobuf:"bytes,1,opt,name=server_icon,json=serverIcon,proto3" json:"server_icon,omitempty"`
}

func (x *UpdateServerIconResponse) Reset() {
	*x = UpdateServerIconResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerIconResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerIconResponse) ProtoMessage() {}

func (x *UpdateServerIconResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerIconResponse.ProtoReflect.Descriptor instead.
func (*UpdateServerIconResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{28}
}

func (x *UpdateServerIconResponse) GetServerIcon() *ServerIcon {
	if x != nil {
		return x.ServerIcon
	}
	return nil
}

type GetServerIconRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId uint64 `protobuf:"varint,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
}

func (x *GetServerIconRequest) Reset() {
	*x = GetServerIconRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerIconRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerIconRequest) ProtoMessage() {}

func (x *GetServerIconRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerIconRequest.ProtoReflect.Descriptor instead.
func (*GetServerIconRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{29}
}

func (x *GetServerIconRequest) GetServerId() uint64 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

type GetServerIconResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerIcon *ServerIcon `protobuf:"bytes,1,opt,name=server_icon,json=serverIcon,proto3" json:"server_icon,omitempty"`
}

func (x *GetServerIconResponse) Reset() {
	*x = GetServerIconResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerIconResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerIconResponse) ProtoMessage() {}

func (x *GetServerIconResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerIconResponse.ProtoReflect.Descriptor instead.
func (*GetServerIconResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{30}
}

func (x *GetServerIconResponse) GetServerIcon() *ServerIcon {
	if x != nil {
		return x.ServerIcon
	}
	return nil
}

type CreateEmoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId    uint64            `protobuf:"varint,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Name        string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Images      []*EmoteImage     `protobuf:"bytes,3,rep,name=images,proto3" json:"images,omitempty"`
	Css         string            `protobuf:"bytes,4,opt,name=css,proto3" json:"css,omitempty"`
	Effects     []*EmoteEffect    `protobuf:"bytes,5,rep,name=effects,proto3" json:"effects,omitempty"`
	Contributor *EmoteContributor `protobuf:"bytes,6,opt,name=contributor,proto3" json:"contributor,omitempty"`
}

func (x *CreateEmoteRequest) Reset() {
	*x = CreateEmoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEmoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEmoteRequest) ProtoMessage() {}

func (x *CreateEmoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEmoteRequest.ProtoReflect.Descriptor instead.
func (*CreateEmoteRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{31}
}

func (x *CreateEmoteRequest) GetServerId() uint64 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *CreateEmoteRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateEmoteRequest) GetImages() []*EmoteImage {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *CreateEmoteRequest) GetCss() string {
	if x != nil {
		return x.Css
	}
	return ""
}

func (x *CreateEmoteRequest) GetEffects() []*EmoteEffect {
	if x != nil {
		return x.Effects
	}
	return nil
}

func (x *CreateEmoteRequest) GetContributor() *EmoteContributor {
	if x != nil {
		return x.Contributor
	}
	return nil
}

type CreateEmoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Emote *Emote `protobuf:"bytes,1,opt,name=emote,proto3" json:"emote,omitempty"`
}

func (x *CreateEmoteResponse) Reset() {
	*x = CreateEmoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEmoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEmoteResponse) ProtoMessage() {}

func (x *CreateEmoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEmoteResponse.ProtoReflect.Descriptor instead.
func (*CreateEmoteResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{32}
}

func (x *CreateEmoteResponse) GetEmote() *Emote {
	if x != nil {
		return x.Emote
	}
	return nil
}

type UpdateEmoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId    uint64            `protobuf:"varint,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Id          uint64            `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Name        string            `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Images      []*EmoteImage     `protobuf:"bytes,4,rep,name=images,proto3" json:"images,omitempty"`
	Css         string            `protobuf:"bytes,5,opt,name=css,proto3" json:"css,omitempty"`
	Effects     []*EmoteEffect    `protobuf:"bytes,6,rep,name=effects,proto3" json:"effects,omitempty"`
	Contributor *EmoteContributor `protobuf:"bytes,7,opt,name=contributor,proto3" json:"contributor,omitempty"`
}

func (x *UpdateEmoteRequest) Reset() {
	*x = UpdateEmoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEmoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEmoteRequest) ProtoMessage() {}

func (x *UpdateEmoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEmoteRequest.ProtoReflect.Descriptor instead.
func (*UpdateEmoteRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{33}
}

func (x *UpdateEmoteRequest) GetServerId() uint64 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *UpdateEmoteRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateEmoteRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateEmoteRequest) GetImages() []*EmoteImage {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *UpdateEmoteRequest) GetCss() string {
	if x != nil {
		return x.Css
	}
	return ""
}

func (x *UpdateEmoteRequest) GetEffects() []*EmoteEffect {
	if x != nil {
		return x.Effects
	}
	return nil
}

func (x *UpdateEmoteRequest) GetContributor() *EmoteContributor {
	if x != nil {
		return x.Contributor
	}
	return nil
}

type UpdateEmoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Emote *Emote `protobuf:"bytes,1,opt,name=emote,proto3" json:"emote,omitempty"`
}

func (x *UpdateEmoteResponse) Reset() {
	*x = UpdateEmoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEmoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEmoteResponse) ProtoMessage() {}

func (x *UpdateEmoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEmoteResponse.ProtoReflect.Descriptor instead.
func (*UpdateEmoteResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{34}
}

func (x *UpdateEmoteResponse) GetEmote() *Emote {
	if x != nil {
		return x.Emote
	}
	return nil
}

type DeleteEmoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId uint64 `protobuf:"varint,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Id       uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteEmoteRequest) Reset() {
	*x = DeleteEmoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEmoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEmoteRequest) ProtoMessage() {}

func (x *DeleteEmoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEmoteRequest.ProtoReflect.Descriptor instead.
func (*DeleteEmoteRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{35}
}

func (x *DeleteEmoteRequest) GetServerId() uint64 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *DeleteEmoteRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteEmoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteEmoteResponse) Reset() {
	*x = DeleteEmoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEmoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEmoteResponse) ProtoMessage() {}

func (x *DeleteEmoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEmoteResponse.ProtoReflect.Descriptor instead.
func (*DeleteEmoteResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{36}
}

type GetEmoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetEmoteRequest) Reset() {
	*x = GetEmoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEmoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEmoteRequest) ProtoMessage() {}

func (x *GetEmoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEmoteRequest.ProtoReflect.Descriptor instead.
func (*GetEmoteRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{37}
}

func (x *GetEmoteRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetEmoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Emote *Emote `protobuf:"bytes,1,opt,name=emote,proto3" json:"emote,omitempty"`
}

func (x *GetEmoteResponse) Reset() {
	*x = GetEmoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEmoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEmoteResponse) ProtoMessage() {}

func (x *GetEmoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEmoteResponse.ProtoReflect.Descriptor instead.
func (*GetEmoteResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{38}
}

func (x *GetEmoteResponse) GetEmote() *Emote {
	if x != nil {
		return x.Emote
	}
	return nil
}

type ListEmotesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId uint64                   `protobuf:"varint,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Parts    []ListEmotesRequest_Part `protobuf:"varint,2,rep,packed,name=parts,proto3,enum=strims.chat.v1.ListEmotesRequest_Part" json:"parts,omitempty"`
}

func (x *ListEmotesRequest) Reset() {
	*x = ListEmotesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEmotesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEmotesRequest) ProtoMessage() {}

func (x *ListEmotesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEmotesRequest.ProtoReflect.Descriptor instead.
func (*ListEmotesRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{39}
}

func (x *ListEmotesRequest) GetServerId() uint64 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *ListEmotesRequest) GetParts() []ListEmotesRequest_Part {
	if x != nil {
		return x.Parts
	}
	return nil
}

type ListEmotesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Emotes []*Emote `protobuf:"bytes,1,rep,name=emotes,proto3" json:"emotes,omitempty"`
}

func (x *ListEmotesResponse) Reset() {
	*x = ListEmotesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEmotesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEmotesResponse) ProtoMessage() {}

func (x *ListEmotesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEmotesResponse.ProtoReflect.Descriptor instead.
func (*ListEmotesResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{40}
}

func (x *ListEmotesResponse) GetEmotes() []*Emote {
	if x != nil {
		return x.Emotes
	}
	return nil
}

type CreateModifierRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId       uint64  `protobuf:"varint,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Name           string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Priority       uint32  `protobuf:"varint,3,opt,name=priority,proto3" json:"priority,omitempty"`
	Internal       bool    `protobuf:"varint,4,opt,name=internal,proto3" json:"internal,omitempty"`
	ExtraWrapCount uint32  `protobuf:"varint,5,opt,name=extra_wrap_count,json=extraWrapCount,proto3" json:"extra_wrap_count,omitempty"`
	ProcChance     float64 `protobuf:"fixed64,6,opt,name=proc_chance,json=procChance,proto3" json:"proc_chance,omitempty"`
}

func (x *CreateModifierRequest) Reset() {
	*x = CreateModifierRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateModifierRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateModifierRequest) ProtoMessage() {}

func (x *CreateModifierRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateModifierRequest.ProtoReflect.Descriptor instead.
func (*CreateModifierRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{41}
}

func (x *CreateModifierRequest) GetServerId() uint64 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *CreateModifierRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateModifierRequest) GetPriority() uint32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *CreateModifierRequest) GetInternal() bool {
	if x != nil {
		return x.Internal
	}
	return false
}

func (x *CreateModifierRequest) GetExtraWrapCount() uint32 {
	if x != nil {
		return x.ExtraWrapCount
	}
	return 0
}

func (x *CreateModifierRequest) GetProcChance() float64 {
	if x != nil {
		return x.ProcChance
	}
	return 0
}

type CreateModifierResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Modifier *Modifier `protobuf:"bytes,1,opt,name=modifier,proto3" json:"modifier,omitempty"`
}

func (x *CreateModifierResponse) Reset() {
	*x = CreateModifierResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateModifierResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateModifierResponse) ProtoMessage() {}

func (x *CreateModifierResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateModifierResponse.ProtoReflect.Descriptor instead.
func (*CreateModifierResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{42}
}

func (x *CreateModifierResponse) GetModifier() *Modifier {
	if x != nil {
		return x.Modifier
	}
	return nil
}

type UpdateModifierRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId       uint64  `protobuf:"varint,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Id             uint64  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Name           string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Priority       uint32  `protobuf:"varint,4,opt,name=priority,proto3" json:"priority,omitempty"`
	Internal       bool    `protobuf:"varint,5,opt,name=internal,proto3" json:"internal,omitempty"`
	ExtraWrapCount uint32  `protobuf:"varint,6,opt,name=extra_wrap_count,json=extraWrapCount,proto3" json:"extra_wrap_count,omitempty"`
	ProcChance     float64 `protobuf:"fixed64,7,opt,name=proc_chance,json=procChance,proto3" json:"proc_chance,omitempty"`
}

func (x *UpdateModifierRequest) Reset() {
	*x = UpdateModifierRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateModifierRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateModifierRequest) ProtoMessage() {}

func (x *UpdateModifierRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateModifierRequest.ProtoReflect.Descriptor instead.
func (*UpdateModifierRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{43}
}

func (x *UpdateModifierRequest) GetServerId() uint64 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *UpdateModifierRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateModifierRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateModifierRequest) GetPriority() uint32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *UpdateModifierRequest) GetInternal() bool {
	if x != nil {
		return x.Internal
	}
	return false
}

func (x *UpdateModifierRequest) GetExtraWrapCount() uint32 {
	if x != nil {
		return x.ExtraWrapCount
	}
	return 0
}

func (x *UpdateModifierRequest) GetProcChance() float64 {
	if x != nil {
		return x.ProcChance
	}
	return 0
}

type UpdateModifierResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Modifier *Modifier `protobuf:"bytes,1,opt,name=modifier,proto3" json:"modifier,omitempty"`
}

func (x *UpdateModifierResponse) Reset() {
	*x = UpdateModifierResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateModifierResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateModifierResponse) ProtoMessage() {}

func (x *UpdateModifierResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateModifierResponse.ProtoReflect.Descriptor instead.
func (*UpdateModifierResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{44}
}

func (x *UpdateModifierResponse) GetModifier() *Modifier {
	if x != nil {
		return x.Modifier
	}
	return nil
}

type DeleteModifierRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId uint64 `protobuf:"varint,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Id       uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteModifierRequest) Reset() {
	*x = DeleteModifierRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteModifierRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteModifierRequest) ProtoMessage() {}

func (x *DeleteModifierRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteModifierRequest.ProtoReflect.Descriptor instead.
func (*DeleteModifierRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{45}
}

func (x *DeleteModifierRequest) GetServerId() uint64 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *DeleteModifierRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteModifierResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteModifierResponse) Reset() {
	*x = DeleteModifierResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteModifierResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteModifierResponse) ProtoMessage() {}

func (x *DeleteModifierResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteModifierResponse.ProtoReflect.Descriptor instead.
func (*DeleteModifierResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{46}
}

type GetModifierRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetModifierRequest) Reset() {
	*x = GetModifierRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetModifierRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModifierRequest) ProtoMessage() {}

func (x *GetModifierRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetModifierRequest.ProtoReflect.Descriptor instead.
func (*GetModifierRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{47}
}

func (x *GetModifierRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetModifierResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Modifier *Modifier `protobuf:"bytes,1,opt,name=modifier,proto3" json:"modifier,omitempty"`
}

func (x *GetModifierResponse) Reset() {
	*x = GetModifierResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetModifierResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModifierResponse) ProtoMessage() {}

func (x *GetModifierResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetModifierResponse.ProtoReflect.Descriptor instead.
func (*GetModifierResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{48}
}

func (x *GetModifierResponse) GetModifier() *Modifier {
	if x != nil {
		return x.Modifier
	}
	return nil
}

type ListModifiersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId uint64 `protobuf:"varint,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
}

func (x *ListModifiersRequest) Reset() {
	*x = ListModifiersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListModifiersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListModifiersRequest) ProtoMessage() {}

func (x *ListModifiersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListModifiersRequest.ProtoReflect.Descriptor instead.
func (*ListModifiersRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{49}
}

func (x *ListModifiersRequest) GetServerId() uint64 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

type ListModifiersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Modifiers []*Modifier `protobuf:"bytes,1,rep,name=modifiers,proto3" json:"modifiers,omitempty"`
}

func (x *ListModifiersResponse) Reset() {
	*x = ListModifiersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListModifiersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListModifiersResponse) ProtoMessage() {}

func (x *ListModifiersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListModifiersResponse.ProtoReflect.Descriptor instead.
func (*ListModifiersResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{50}
}

func (x *ListModifiersResponse) GetModifiers() []*Modifier {
	if x != nil {
		return x.Modifiers
	}
	return nil
}

type CreateTagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId  uint64 `protobuf:"varint,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Color     string `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
	Sensitive bool   `protobuf:"varint,4,opt,name=sensitive,proto3" json:"sensitive,omitempty"`
}

func (x *CreateTagRequest) Reset() {
	*x = CreateTagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTagRequest) ProtoMessage() {}

func (x *CreateTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTagRequest.ProtoReflect.Descriptor instead.
func (*CreateTagRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{51}
}

func (x *CreateTagRequest) GetServerId() uint64 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *CreateTagRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateTagRequest) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *CreateTagRequest) GetSensitive() bool {
	if x != nil {
		return x.Sensitive
	}
	return false
}

type CreateTagResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag *Tag `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *CreateTagResponse) Reset() {
	*x = CreateTagResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTagResponse) ProtoMessage() {}

func (x *CreateTagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTagResponse.ProtoReflect.Descriptor instead.
func (*CreateTagResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{52}
}

func (x *CreateTagResponse) GetTag() *Tag {
	if x != nil {
		return x.Tag
	}
	return nil
}

type UpdateTagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId  uint64 `protobuf:"varint,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Id        uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Name      string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Color     string `protobuf:"bytes,4,opt,name=color,proto3" json:"color,omitempty"`
	Sensitive bool   `protobuf:"varint,5,opt,name=sensitive,proto3" json:"sensitive,omitempty"`
}

func (x *UpdateTagRequest) Reset() {
	*x = UpdateTagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTagRequest) ProtoMessage() {}

func (x *UpdateTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTagRequest.ProtoReflect.Descriptor instead.
func (*UpdateTagRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{53}
}

func (x *UpdateTagRequest) GetServerId() uint64 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *UpdateTagRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateTagRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateTagRequest) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *UpdateTagRequest) GetSensitive() bool {
	if x != nil {
		return x.Sensitive
	}
	return false
}

type UpdateTagResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag *Tag `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *UpdateTagResponse) Reset() {
	*x = UpdateTagResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTagResponse) ProtoMessage() {}

func (x *UpdateTagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTagResponse.ProtoReflect.Descriptor instead.
func (*UpdateTagResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{54}
}

func (x *UpdateTagResponse) GetTag() *Tag {
	if x != nil {
		return x.Tag
	}
	return nil
}

type DeleteTagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId uint64 `protobuf:"varint,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Id       uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteTagRequest) Reset() {
	*x = DeleteTagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTagRequest) ProtoMessage() {}

func (x *DeleteTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTagRequest.ProtoReflect.Descriptor instead.
func (*DeleteTagRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{55}
}

func (x *DeleteTagRequest) GetServerId() uint64 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *DeleteTagRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteTagResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteTagResponse) Reset() {
	*x = DeleteTagResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTagResponse) ProtoMessage() {}

func (x *DeleteTagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTagResponse.ProtoReflect.Descriptor instead.
func (*DeleteTagResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{56}
}

type GetTagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetTagRequest) Reset() {
	*x = GetTagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTagRequest) ProtoMessage() {}

func (x *GetTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTagRequest.ProtoReflect.Descriptor instead.
func (*GetTagRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{57}
}

func (x *GetTagRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetTagResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag *Tag `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *GetTagResponse) Reset() {
	*x = GetTagResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTagResponse) ProtoMessage() {}

func (x *GetTagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTagResponse.ProtoReflect.Descriptor instead.
func (*GetTagResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{58}
}

func (x *GetTagResponse) GetTag() *Tag {
	if x != nil {
		return x.Tag
	}
	return nil
}

type ListTagsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId uint64 `protobuf:"varint,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
}

func (x *ListTagsRequest) Reset() {
	*x = ListTagsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTagsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTagsRequest) ProtoMessage() {}

func (x *ListTagsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTagsRequest.ProtoReflect.Descriptor instead.
func (*ListTagsRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{59}
}

func (x *ListTagsRequest) GetServerId() uint64 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

type ListTagsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tags []*Tag `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *ListTagsResponse) Reset() {
	*x = ListTagsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTagsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTagsResponse) ProtoMessage() {}

func (x *ListTagsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTagsResponse.ProtoReflect.Descriptor instead.
func (*ListTagsResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{60}
}

func (x *ListTagsResponse) GetTags() []*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

type SyncAssetsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId           uint64 `protobuf:"varint,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	ForceUnifiedUpdate bool   `protobuf:"varint,2,opt,name=force_unified_update,json=forceUnifiedUpdate,proto3" json:"force_unified_update,omitempty"`
}

func (x *SyncAssetsRequest) Reset() {
	*x = SyncAssetsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncAssetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncAssetsRequest) ProtoMessage() {}

func (x *SyncAssetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncAssetsRequest.ProtoReflect.Descriptor instead.
func (*SyncAssetsRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{61}
}

func (x *SyncAssetsRequest) GetServerId() uint64 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *SyncAssetsRequest) GetForceUnifiedUpdate() bool {
	if x != nil {
		return x.ForceUnifiedUpdate
	}
	return false
}

type SyncAssetsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version    uint64 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	UpdateSize uint32 `protobuf:"varint,2,opt,name=update_size,json=updateSize,proto3" json:"update_size,omitempty"`
}

func (x *SyncAssetsResponse) Reset() {
	*x = SyncAssetsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncAssetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncAssetsResponse) ProtoMessage() {}

func (x *SyncAssetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncAssetsResponse.ProtoReflect.Descriptor instead.
func (*SyncAssetsResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{62}
}

func (x *SyncAssetsResponse) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *SyncAssetsResponse) GetUpdateSize() uint32 {
	if x != nil {
		return x.UpdateSize
	}
	return 0
}

type OpenClientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkKey []byte `protobuf:"bytes,1,opt,name=network_key,json=networkKey,proto3" json:"network_key,omitempty"`
	ServerKey  []byte `protobuf:"bytes,2,opt,name=server_key,json=serverKey,proto3" json:"server_key,omitempty"`
}

func (x *OpenClientRequest) Reset() {
	*x = OpenClientRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenClientRequest) ProtoMessage() {}

func (x *OpenClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenClientRequest.ProtoReflect.Descriptor instead.
func (*OpenClientRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{63}
}

func (x *OpenClientRequest) GetNetworkKey() []byte {
	if x != nil {
		return x.NetworkKey
	}
	return nil
}

func (x *OpenClientRequest) GetServerKey() []byte {
	if x != nil {
		return x.ServerKey
	}
	return nil
}

type OpenClientResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Body:
	//	*OpenClientResponse_Open_
	//	*OpenClientResponse_ServerEvents_
	//	*OpenClientResponse_AssetBundle
	Body isOpenClientResponse_Body `protobuf_oneof:"body"`
}

func (x *OpenClientResponse) Reset() {
	*x = OpenClientResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenClientResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenClientResponse) ProtoMessage() {}

func (x *OpenClientResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenClientResponse.ProtoReflect.Descriptor instead.
func (*OpenClientResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{64}
}

func (m *OpenClientResponse) GetBody() isOpenClientResponse_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (x *OpenClientResponse) GetOpen() *OpenClientResponse_Open {
	if x, ok := x.GetBody().(*OpenClientResponse_Open_); ok {
		return x.Open
	}
	return nil
}

func (x *OpenClientResponse) GetServerEvents() *OpenClientResponse_ServerEvents {
	if x, ok := x.GetBody().(*OpenClientResponse_ServerEvents_); ok {
		return x.ServerEvents
	}
	return nil
}

func (x *OpenClientResponse) GetAssetBundle() *AssetBundle {
	if x, ok := x.GetBody().(*OpenClientResponse_AssetBundle); ok {
		return x.AssetBundle
	}
	return nil
}

type isOpenClientResponse_Body interface {
	isOpenClientResponse_Body()
}

type OpenClientResponse_Open_ struct {
	Open *OpenClientResponse_Open `protobuf:"bytes,1001,opt,name=open,proto3,oneof"`
}

type OpenClientResponse_ServerEvents_ struct {
	ServerEvents *OpenClientResponse_ServerEvents `protobuf:"bytes,1002,opt,name=server_events,json=serverEvents,proto3,oneof"`
}

type OpenClientResponse_AssetBundle struct {
	AssetBundle *AssetBundle `protobuf:"bytes,1003,opt,name=asset_bundle,json=assetBundle,proto3,oneof"`
}

func (*OpenClientResponse_Open_) isOpenClientResponse_Body() {}

func (*OpenClientResponse_ServerEvents_) isOpenClientResponse_Body() {}

func (*OpenClientResponse_AssetBundle) isOpenClientResponse_Body() {}

type ClientSendMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkKey []byte `protobuf:"bytes,1,opt,name=network_key,json=networkKey,proto3" json:"network_key,omitempty"`
	ServerKey  []byte `protobuf:"bytes,2,opt,name=server_key,json=serverKey,proto3" json:"server_key,omitempty"`
	Body       string `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *ClientSendMessageRequest) Reset() {
	*x = ClientSendMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientSendMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientSendMessageRequest) ProtoMessage() {}

func (x *ClientSendMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientSendMessageRequest.ProtoReflect.Descriptor instead.
func (*ClientSendMessageRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{65}
}

func (x *ClientSendMessageRequest) GetNetworkKey() []byte {
	if x != nil {
		return x.NetworkKey
	}
	return nil
}

func (x *ClientSendMessageRequest) GetServerKey() []byte {
	if x != nil {
		return x.ServerKey
	}
	return nil
}

func (x *ClientSendMessageRequest) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type ClientSendMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClientSendMessageResponse) Reset() {
	*x = ClientSendMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientSendMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientSendMessageResponse) ProtoMessage() {}

func (x *ClientSendMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientSendMessageResponse.ProtoReflect.Descriptor instead.
func (*ClientSendMessageResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{66}
}

type ClientMuteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkKey []byte `protobuf:"bytes,1,opt,name=network_key,json=networkKey,proto3" json:"network_key,omitempty"`
	ServerKey  []byte `protobuf:"bytes,2,opt,name=server_key,json=serverKey,proto3" json:"server_key,omitempty"`
	Alias      string `protobuf:"bytes,3,opt,name=alias,proto3" json:"alias,omitempty"`
	Duration   string `protobuf:"bytes,4,opt,name=duration,proto3" json:"duration,omitempty"`
	Message    string `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ClientMuteRequest) Reset() {
	*x = ClientMuteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMuteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMuteRequest) ProtoMessage() {}

func (x *ClientMuteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMuteRequest.ProtoReflect.Descriptor instead.
func (*ClientMuteRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{67}
}

func (x *ClientMuteRequest) GetNetworkKey() []byte {
	if x != nil {
		return x.NetworkKey
	}
	return nil
}

func (x *ClientMuteRequest) GetServerKey() []byte {
	if x != nil {
		return x.ServerKey
	}
	return nil
}

func (x *ClientMuteRequest) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *ClientMuteRequest) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *ClientMuteRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ClientMuteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClientMuteResponse) Reset() {
	*x = ClientMuteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMuteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMuteResponse) ProtoMessage() {}

func (x *ClientMuteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMuteResponse.ProtoReflect.Descriptor instead.
func (*ClientMuteResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{68}
}

type ClientUnmuteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkKey []byte `protobuf:"bytes,1,opt,name=network_key,json=networkKey,proto3" json:"network_key,omitempty"`
	ServerKey  []byte `protobuf:"bytes,2,opt,name=server_key,json=serverKey,proto3" json:"server_key,omitempty"`
	Alias      string `protobuf:"bytes,3,opt,name=alias,proto3" json:"alias,omitempty"`
}

func (x *ClientUnmuteRequest) Reset() {
	*x = ClientUnmuteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientUnmuteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientUnmuteRequest) ProtoMessage() {}

func (x *ClientUnmuteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientUnmuteRequest.ProtoReflect.Descriptor instead.
func (*ClientUnmuteRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{69}
}

func (x *ClientUnmuteRequest) GetNetworkKey() []byte {
	if x != nil {
		return x.NetworkKey
	}
	return nil
}

func (x *ClientUnmuteRequest) GetServerKey() []byte {
	if x != nil {
		return x.ServerKey
	}
	return nil
}

func (x *ClientUnmuteRequest) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

type ClientUnmuteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClientUnmuteResponse) Reset() {
	*x = ClientUnmuteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientUnmuteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientUnmuteResponse) ProtoMessage() {}

func (x *ClientUnmuteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientUnmuteResponse.ProtoReflect.Descriptor instead.
func (*ClientUnmuteResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{70}
}

type ClientGetMuteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkKey []byte `protobuf:"bytes,1,opt,name=network_key,json=networkKey,proto3" json:"network_key,omitempty"`
	ServerKey  []byte `protobuf:"bytes,2,opt,name=server_key,json=serverKey,proto3" json:"server_key,omitempty"`
}

func (x *ClientGetMuteRequest) Reset() {
	*x = ClientGetMuteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientGetMuteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientGetMuteRequest) ProtoMessage() {}

func (x *ClientGetMuteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientGetMuteRequest.ProtoReflect.Descriptor instead.
func (*ClientGetMuteRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{71}
}

func (x *ClientGetMuteRequest) GetNetworkKey() []byte {
	if x != nil {
		return x.NetworkKey
	}
	return nil
}

func (x *ClientGetMuteRequest) GetServerKey() []byte {
	if x != nil {
		return x.ServerKey
	}
	return nil
}

type ClientGetMuteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EndTime int64  `protobuf:"varint,1,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ClientGetMuteResponse) Reset() {
	*x = ClientGetMuteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientGetMuteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientGetMuteResponse) ProtoMessage() {}

func (x *ClientGetMuteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientGetMuteResponse.ProtoReflect.Descriptor instead.
func (*ClientGetMuteResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{72}
}

func (x *ClientGetMuteResponse) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ClientGetMuteResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type WhisperRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkKey []byte `protobuf:"bytes,1,opt,name=network_key,json=networkKey,proto3" json:"network_key,omitempty"`
	ServerKey  []byte `protobuf:"bytes,2,opt,name=server_key,json=serverKey,proto3" json:"server_key,omitempty"`
	Alias      string `protobuf:"bytes,3,opt,name=alias,proto3" json:"alias,omitempty"`
	PeerKey    []byte `protobuf:"bytes,4,opt,name=peer_key,json=peerKey,proto3" json:"peer_key,omitempty"`
	Body       string `protobuf:"bytes,5,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *WhisperRequest) Reset() {
	*x = WhisperRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhisperRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhisperRequest) ProtoMessage() {}

func (x *WhisperRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhisperRequest.ProtoReflect.Descriptor instead.
func (*WhisperRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{73}
}

func (x *WhisperRequest) GetNetworkKey() []byte {
	if x != nil {
		return x.NetworkKey
	}
	return nil
}

func (x *WhisperRequest) GetServerKey() []byte {
	if x != nil {
		return x.ServerKey
	}
	return nil
}

func (x *WhisperRequest) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *WhisperRequest) GetPeerKey() []byte {
	if x != nil {
		return x.PeerKey
	}
	return nil
}

func (x *WhisperRequest) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type WhisperResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WhisperResponse) Reset() {
	*x = WhisperResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhisperResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhisperResponse) ProtoMessage() {}

func (x *WhisperResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhisperResponse.ProtoReflect.Descriptor instead.
func (*WhisperResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{74}
}

type ListWhispersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerKey []byte `protobuf:"bytes,1,opt,name=peer_key,json=peerKey,proto3" json:"peer_key,omitempty"`
}

func (x *ListWhispersRequest) Reset() {
	*x = ListWhispersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWhispersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWhispersRequest) ProtoMessage() {}

func (x *ListWhispersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWhispersRequest.ProtoReflect.Descriptor instead.
func (*ListWhispersRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{75}
}

func (x *ListWhispersRequest) GetPeerKey() []byte {
	if x != nil {
		return x.PeerKey
	}
	return nil
}

type ListWhispersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Thread   *WhisperThread   `protobuf:"bytes,1,opt,name=thread,proto3" json:"thread,omitempty"`
	Whispers []*WhisperRecord `protobuf:"bytes,2,rep,name=whispers,proto3" json:"whispers,omitempty"`
}

func (x *ListWhispersResponse) Reset() {
	*x = ListWhispersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWhispersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWhispersResponse) ProtoMessage() {}

func (x *ListWhispersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWhispersResponse.ProtoReflect.Descriptor instead.
func (*ListWhispersResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{76}
}

func (x *ListWhispersResponse) GetThread() *WhisperThread {
	if x != nil {
		return x.Thread
	}
	return nil
}

func (x *ListWhispersResponse) GetWhispers() []*WhisperRecord {
	if x != nil {
		return x.Whispers
	}
	return nil
}

type WatchWhispersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WatchWhispersRequest) Reset() {
	*x = WatchWhispersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchWhispersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchWhispersRequest) ProtoMessage() {}

func (x *WatchWhispersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchWhispersRequest.ProtoReflect.Descriptor instead.
func (*WatchWhispersRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{77}
}

type WatchWhispersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerKey []byte `protobuf:"bytes,1,opt,name=peer_key,json=peerKey,proto3" json:"peer_key,omitempty"`
	// Types that are assignable to Body:
	//	*WatchWhispersResponse_ThreadUpdate
	//	*WatchWhispersResponse_ThreadDelete
	//	*WatchWhispersResponse_WhisperUpdate
	//	*WatchWhispersResponse_WhisperDelete_
	Body isWatchWhispersResponse_Body `protobuf_oneof:"body"`
}

func (x *WatchWhispersResponse) Reset() {
	*x = WatchWhispersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchWhispersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchWhispersResponse) ProtoMessage() {}

func (x *WatchWhispersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchWhispersResponse.ProtoReflect.Descriptor instead.
func (*WatchWhispersResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{78}
}

func (x *WatchWhispersResponse) GetPeerKey() []byte {
	if x != nil {
		return x.PeerKey
	}
	return nil
}

func (m *WatchWhispersResponse) GetBody() isWatchWhispersResponse_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (x *WatchWhispersResponse) GetThreadUpdate() *WhisperThread {
	if x, ok := x.GetBody().(*WatchWhispersResponse_ThreadUpdate); ok {
		return x.ThreadUpdate
	}
	return nil
}

func (x *WatchWhispersResponse) GetThreadDelete() *WatchWhispersResponse_WhisperThreadDelete {
	if x, ok := x.GetBody().(*WatchWhispersResponse_ThreadDelete); ok {
		return x.ThreadDelete
	}
	return nil
}

func (x *WatchWhispersResponse) GetWhisperUpdate() *WhisperRecord {
	if x, ok := x.GetBody().(*WatchWhispersResponse_WhisperUpdate); ok {
		return x.WhisperUpdate
	}
	return nil
}

func (x *WatchWhispersResponse) GetWhisperDelete() *WatchWhispersResponse_WhisperDelete {
	if x, ok := x.GetBody().(*WatchWhispersResponse_WhisperDelete_); ok {
		return x.WhisperDelete
	}
	return nil
}

type isWatchWhispersResponse_Body interface {
	isWatchWhispersResponse_Body()
}

type WatchWhispersResponse_ThreadUpdate struct {
	ThreadUpdate *WhisperThread `protobuf:"bytes,1001,opt,name=thread_update,json=threadUpdate,proto3,oneof"`
}

type WatchWhispersResponse_ThreadDelete struct {
	ThreadDelete *WatchWhispersResponse_WhisperThreadDelete `protobuf:"bytes,1002,opt,name=thread_delete,json=threadDelete,proto3,oneof"`
}

type WatchWhispersResponse_WhisperUpdate struct {
	WhisperUpdate *WhisperRecord `protobuf:"bytes,1003,opt,name=whisper_update,json=whisperUpdate,proto3,oneof"`
}

type WatchWhispersResponse_WhisperDelete_ struct {
	WhisperDelete *WatchWhispersResponse_WhisperDelete `protobuf:"bytes,1004,opt,name=whisper_delete,json=whisperDelete,proto3,oneof"`
}

func (*WatchWhispersResponse_ThreadUpdate) isWatchWhispersResponse_Body() {}

func (*WatchWhispersResponse_ThreadDelete) isWatchWhispersResponse_Body() {}

func (*WatchWhispersResponse_WhisperUpdate) isWatchWhispersResponse_Body() {}

func (*WatchWhispersResponse_WhisperDelete_) isWatchWhispersResponse_Body() {}

type MarkWhispersReadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ThreadId uint64 `protobuf:"varint,1,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
}

func (x *MarkWhispersReadRequest) Reset() {
	*x = MarkWhispersReadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkWhispersReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkWhispersReadRequest) ProtoMessage() {}

func (x *MarkWhispersReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkWhispersReadRequest.ProtoReflect.Descriptor instead.
func (*MarkWhispersReadRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{79}
}

func (x *MarkWhispersReadRequest) GetThreadId() uint64 {
	if x != nil {
		return x.ThreadId
	}
	return 0
}

type MarkWhispersReadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MarkWhispersReadResponse) Reset() {
	*x = MarkWhispersReadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkWhispersReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkWhispersReadResponse) ProtoMessage() {}

func (x *MarkWhispersReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkWhispersReadResponse.ProtoReflect.Descriptor instead.
func (*MarkWhispersReadResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{80}
}

type DeleteWhisperThreadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ThreadId uint64 `protobuf:"varint,1,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
}

func (x *DeleteWhisperThreadRequest) Reset() {
	*x = DeleteWhisperThreadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteWhisperThreadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWhisperThreadRequest) ProtoMessage() {}

func (x *DeleteWhisperThreadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWhisperThreadRequest.ProtoReflect.Descriptor instead.
func (*DeleteWhisperThreadRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{81}
}

func (x *DeleteWhisperThreadRequest) GetThreadId() uint64 {
	if x != nil {
		return x.ThreadId
	}
	return 0
}

type DeleteWhisperThreadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteWhisperThreadResponse) Reset() {
	*x = DeleteWhisperThreadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteWhisperThreadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWhisperThreadResponse) ProtoMessage() {}

func (x *DeleteWhisperThreadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWhisperThreadResponse.ProtoReflect.Descriptor instead.
func (*DeleteWhisperThreadResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{82}
}

type SetUIConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UiConfig *UIConfig `protobuf:"bytes,1,opt,name=ui_config,json=uiConfig,proto3" json:"ui_config,omitempty"`
}

func (x *SetUIConfigRequest) Reset() {
	*x = SetUIConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUIConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUIConfigRequest) ProtoMessage() {}

func (x *SetUIConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUIConfigRequest.ProtoReflect.Descriptor instead.
func (*SetUIConfigRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{83}
}

func (x *SetUIConfigRequest) GetUiConfig() *UIConfig {
	if x != nil {
		return x.UiConfig
	}
	return nil
}

type SetUIConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetUIConfigResponse) Reset() {
	*x = SetUIConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUIConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUIConfigResponse) ProtoMessage() {}

func (x *SetUIConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUIConfigResponse.ProtoReflect.Descriptor instead.
func (*SetUIConfigResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{84}
}

type WatchUIConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WatchUIConfigRequest) Reset() {
	*x = WatchUIConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchUIConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchUIConfigRequest) ProtoMessage() {}

func (x *WatchUIConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchUIConfigRequest.ProtoReflect.Descriptor instead.
func (*WatchUIConfigRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{85}
}

type WatchUIConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Config:
	//	*WatchUIConfigResponse_UiConfig
	//	*WatchUIConfigResponse_UiConfigHighlight
	//	*WatchUIConfigResponse_UiConfigHighlightDelete
	//	*WatchUIConfigResponse_UiConfigTag
	//	*WatchUIConfigResponse_UiConfigTagDelete
	//	*WatchUIConfigResponse_UiConfigIgnore
	//	*WatchUIConfigResponse_UiConfigIgnoreDelete
	Config isWatchUIConfigResponse_Config `protobuf_oneof:"config"`
}

func (x *WatchUIConfigResponse) Reset() {
	*x = WatchUIConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchUIConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchUIConfigResponse) ProtoMessage() {}

func (x *WatchUIConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchUIConfigResponse.ProtoReflect.Descriptor instead.
func (*WatchUIConfigResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{86}
}

func (m *WatchUIConfigResponse) GetConfig() isWatchUIConfigResponse_Config {
	if m != nil {
		return m.Config
	}
	return nil
}

func (x *WatchUIConfigResponse) GetUiConfig() *UIConfig {
	if x, ok := x.GetConfig().(*WatchUIConfigResponse_UiConfig); ok {
		return x.UiConfig
	}
	return nil
}

func (x *WatchUIConfigResponse) GetUiConfigHighlight() *UIConfigHighlight {
	if x, ok := x.GetConfig().(*WatchUIConfigResponse_UiConfigHighlight); ok {
		return x.UiConfigHighlight
	}
	return nil
}

func (x *WatchUIConfigResponse) GetUiConfigHighlightDelete() *UIConfigHighlight {
	if x, ok := x.GetConfig().(*WatchUIConfigResponse_UiConfigHighlightDelete); ok {
		return x.UiConfigHighlightDelete
	}
	return nil
}

func (x *WatchUIConfigResponse) GetUiConfigTag() *UIConfigTag {
	if x, ok := x.GetConfig().(*WatchUIConfigResponse_UiConfigTag); ok {
		return x.UiConfigTag
	}
	return nil
}

func (x *WatchUIConfigResponse) GetUiConfigTagDelete() *UIConfigTag {
	if x, ok := x.GetConfig().(*WatchUIConfigResponse_UiConfigTagDelete); ok {
		return x.UiConfigTagDelete
	}
	return nil
}

func (x *WatchUIConfigResponse) GetUiConfigIgnore() *UIConfigIgnore {
	if x, ok := x.GetConfig().(*WatchUIConfigResponse_UiConfigIgnore); ok {
		return x.UiConfigIgnore
	}
	return nil
}

func (x *WatchUIConfigResponse) GetUiConfigIgnoreDelete() *UIConfigIgnore {
	if x, ok := x.GetConfig().(*WatchUIConfigResponse_UiConfigIgnoreDelete); ok {
		return x.UiConfigIgnoreDelete
	}
	return nil
}

type isWatchUIConfigResponse_Config interface {
	isWatchUIConfigResponse_Config()
}

type WatchUIConfigResponse_UiConfig struct {
	UiConfig *UIConfig `protobuf:"bytes,1001,opt,name=ui_config,json=uiConfig,proto3,oneof"`
}

type WatchUIConfigResponse_UiConfigHighlight struct {
	UiConfigHighlight *UIConfigHighlight `protobuf:"bytes,1002,opt,name=ui_config_highlight,json=uiConfigHighlight,proto3,oneof"`
}

type WatchUIConfigResponse_UiConfigHighlightDelete struct {
	UiConfigHighlightDelete *UIConfigHighlight `protobuf:"bytes,1003,opt,name=ui_config_highlight_delete,json=uiConfigHighlightDelete,proto3,oneof"`
}

type WatchUIConfigResponse_UiConfigTag struct {
	UiConfigTag *UIConfigTag `protobuf:"bytes,1004,opt,name=ui_config_tag,json=uiConfigTag,proto3,oneof"`
}

type WatchUIConfigResponse_UiConfigTagDelete struct {
	UiConfigTagDelete *UIConfigTag `protobuf:"bytes,1005,opt,name=ui_config_tag_delete,json=uiConfigTagDelete,proto3,oneof"`
}

type WatchUIConfigResponse_UiConfigIgnore struct {
	UiConfigIgnore *UIConfigIgnore `protobuf:"bytes,1006,opt,name=ui_config_ignore,json=uiConfigIgnore,proto3,oneof"`
}

type WatchUIConfigResponse_UiConfigIgnoreDelete struct {
	UiConfigIgnoreDelete *UIConfigIgnore `protobuf:"bytes,1007,opt,name=ui_config_ignore_delete,json=uiConfigIgnoreDelete,proto3,oneof"`
}

func (*WatchUIConfigResponse_UiConfig) isWatchUIConfigResponse_Config() {}

func (*WatchUIConfigResponse_UiConfigHighlight) isWatchUIConfigResponse_Config() {}

func (*WatchUIConfigResponse_UiConfigHighlightDelete) isWatchUIConfigResponse_Config() {}

func (*WatchUIConfigResponse_UiConfigTag) isWatchUIConfigResponse_Config() {}

func (*WatchUIConfigResponse_UiConfigTagDelete) isWatchUIConfigResponse_Config() {}

func (*WatchUIConfigResponse_UiConfigIgnore) isWatchUIConfigResponse_Config() {}

func (*WatchUIConfigResponse_UiConfigIgnoreDelete) isWatchUIConfigResponse_Config() {}

type IgnoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkKey []byte `protobuf:"bytes,1,opt,name=network_key,json=networkKey,proto3" json:"network_key,omitempty"`
	Alias      string `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
	Duration   string `protobuf:"bytes,3,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *IgnoreRequest) Reset() {
	*x = IgnoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IgnoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IgnoreRequest) ProtoMessage() {}

func (x *IgnoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IgnoreRequest.ProtoReflect.Descriptor instead.
func (*IgnoreRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{87}
}

func (x *IgnoreRequest) GetNetworkKey() []byte {
	if x != nil {
		return x.NetworkKey
	}
	return nil
}

func (x *IgnoreRequest) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *IgnoreRequest) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

type IgnoreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IgnoreResponse) Reset() {
	*x = IgnoreResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IgnoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IgnoreResponse) ProtoMessage() {}

func (x *IgnoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IgnoreResponse.ProtoReflect.Descriptor instead.
func (*IgnoreResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{88}
}

type UnignoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkKey []byte `protobuf:"bytes,1,opt,name=network_key,json=networkKey,proto3" json:"network_key,omitempty"`
	Alias      string `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
	PeerKey    []byte `protobuf:"bytes,3,opt,name=peer_key,json=peerKey,proto3" json:"peer_key,omitempty"`
}

func (x *UnignoreRequest) Reset() {
	*x = UnignoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnignoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnignoreRequest) ProtoMessage() {}

func (x *UnignoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnignoreRequest.ProtoReflect.Descriptor instead.
func (*UnignoreRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{89}
}

func (x *UnignoreRequest) GetNetworkKey() []byte {
	if x != nil {
		return x.NetworkKey
	}
	return nil
}

func (x *UnignoreRequest) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *UnignoreRequest) GetPeerKey() []byte {
	if x != nil {
		return x.PeerKey
	}
	return nil
}

type UnignoreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnignoreResponse) Reset() {
	*x = UnignoreResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnignoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnignoreResponse) ProtoMessage() {}

func (x *UnignoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnignoreResponse.ProtoReflect.Descriptor instead.
func (*UnignoreResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{90}
}

type HighlightRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkKey []byte `protobuf:"bytes,1,opt,name=network_key,json=networkKey,proto3" json:"network_key,omitempty"`
	Alias      string `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
}

func (x *HighlightRequest) Reset() {
	*x = HighlightRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HighlightRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HighlightRequest) ProtoMessage() {}

func (x *HighlightRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HighlightRequest.ProtoReflect.Descriptor instead.
func (*HighlightRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{91}
}

func (x *HighlightRequest) GetNetworkKey() []byte {
	if x != nil {
		return x.NetworkKey
	}
	return nil
}

func (x *HighlightRequest) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

type HighlightResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HighlightResponse) Reset() {
	*x = HighlightResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HighlightResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HighlightResponse) ProtoMessage() {}

func (x *HighlightResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HighlightResponse.ProtoReflect.Descriptor instead.
func (*HighlightResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{92}
}

type UnhighlightRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkKey []byte `protobuf:"bytes,1,opt,name=network_key,json=networkKey,proto3" json:"network_key,omitempty"`
	Alias      string `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
	PeerKey    []byte `protobuf:"bytes,3,opt,name=peer_key,json=peerKey,proto3" json:"peer_key,omitempty"`
}

func (x *UnhighlightRequest) Reset() {
	*x = UnhighlightRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnhighlightRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnhighlightRequest) ProtoMessage() {}

func (x *UnhighlightRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnhighlightRequest.ProtoReflect.Descriptor instead.
func (*UnhighlightRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{93}
}

func (x *UnhighlightRequest) GetNetworkKey() []byte {
	if x != nil {
		return x.NetworkKey
	}
	return nil
}

func (x *UnhighlightRequest) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *UnhighlightRequest) GetPeerKey() []byte {
	if x != nil {
		return x.PeerKey
	}
	return nil
}

type UnhighlightResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnhighlightResponse) Reset() {
	*x = UnhighlightResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnhighlightResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnhighlightResponse) ProtoMessage() {}

func (x *UnhighlightResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnhighlightResponse.ProtoReflect.Descriptor instead.
func (*UnhighlightResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{94}
}

type TagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkKey []byte `protobuf:"bytes,1,opt,name=network_key,json=networkKey,proto3" json:"network_key,omitempty"`
	Alias      string `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
	Color      string `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
}

func (x *TagRequest) Reset() {
	*x = TagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagRequest) ProtoMessage() {}

func (x *TagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagRequest.ProtoReflect.Descriptor instead.
func (*TagRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{95}
}

func (x *TagRequest) GetNetworkKey() []byte {
	if x != nil {
		return x.NetworkKey
	}
	return nil
}

func (x *TagRequest) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *TagRequest) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type TagResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TagResponse) Reset() {
	*x = TagResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagResponse) ProtoMessage() {}

func (x *TagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagResponse.ProtoReflect.Descriptor instead.
func (*TagResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{96}
}

type UntagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkKey []byte `protobuf:"bytes,1,opt,name=network_key,json=networkKey,proto3" json:"network_key,omitempty"`
	Alias      string `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
	PeerKey    []byte `protobuf:"bytes,3,opt,name=peer_key,json=peerKey,proto3" json:"peer_key,omitempty"`
}

func (x *UntagRequest) Reset() {
	*x = UntagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UntagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UntagRequest) ProtoMessage() {}

func (x *UntagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UntagRequest.ProtoReflect.Descriptor instead.
func (*UntagRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{97}
}

func (x *UntagRequest) GetNetworkKey() []byte {
	if x != nil {
		return x.NetworkKey
	}
	return nil
}

func (x *UntagRequest) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *UntagRequest) GetPeerKey() []byte {
	if x != nil {
		return x.PeerKey
	}
	return nil
}

type UntagResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UntagResponse) Reset() {
	*x = UntagResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UntagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UntagResponse) ProtoMessage() {}

func (x *UntagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UntagResponse.ProtoReflect.Descriptor instead.
func (*UntagResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{98}
}

type SendMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Body string `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *SendMessageRequest) Reset() {
	*x = SendMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageRequest) ProtoMessage() {}

func (x *SendMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageRequest.ProtoReflect.Descriptor instead.
func (*SendMessageRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{99}
}

func (x *SendMessageRequest) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type SendMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendMessageResponse) Reset() {
	*x = SendMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageResponse) ProtoMessage() {}

func (x *SendMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageResponse.ProtoReflect.Descriptor instead.
func (*SendMessageResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{100}
}

type MuteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerKey      []byte `protobuf:"bytes,1,opt,name=peer_key,json=peerKey,proto3" json:"peer_key,omitempty"`
	DurationSecs uint32 `protobuf:"varint,2,opt,name=duration_secs,json=durationSecs,proto3" json:"duration_secs,omitempty"`
	Message      string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *MuteRequest) Reset() {
	*x = MuteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MuteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MuteRequest) ProtoMessage() {}

func (x *MuteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MuteRequest.ProtoReflect.Descriptor instead.
func (*MuteRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{101}
}

func (x *MuteRequest) GetPeerKey() []byte {
	if x != nil {
		return x.PeerKey
	}
	return nil
}

func (x *MuteRequest) GetDurationSecs() uint32 {
	if x != nil {
		return x.DurationSecs
	}
	return 0
}

func (x *MuteRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type MuteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MuteResponse) Reset() {
	*x = MuteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MuteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MuteResponse) ProtoMessage() {}

func (x *MuteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MuteResponse.ProtoReflect.Descriptor instead.
func (*MuteResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{102}
}

type UnmuteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerKey []byte `protobuf:"bytes,1,opt,name=peer_key,json=peerKey,proto3" json:"peer_key,omitempty"`
}

func (x *UnmuteRequest) Reset() {
	*x = UnmuteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnmuteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnmuteRequest) ProtoMessage() {}

func (x *UnmuteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnmuteRequest.ProtoReflect.Descriptor instead.
func (*UnmuteRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{103}
}

func (x *UnmuteRequest) GetPeerKey() []byte {
	if x != nil {
		return x.PeerKey
	}
	return nil
}

type UnmuteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnmuteResponse) Reset() {
	*x = UnmuteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnmuteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnmuteResponse) ProtoMessage() {}

func (x *UnmuteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnmuteResponse.ProtoReflect.Descriptor instead.
func (*UnmuteResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{104}
}

type GetMuteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetMuteRequest) Reset() {
	*x = GetMuteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMuteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMuteRequest) ProtoMessage() {}

func (x *GetMuteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMuteRequest.ProtoReflect.Descriptor instead.
func (*GetMuteRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{105}
}

type GetMuteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EndTime int64  `protobuf:"varint,1,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GetMuteResponse) Reset() {
	*x = GetMuteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMuteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMuteResponse) ProtoMessage() {}

func (x *GetMuteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMuteResponse.ProtoReflect.Descriptor instead.
func (*GetMuteResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{106}
}

func (x *GetMuteResponse) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *GetMuteResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type WhisperThread struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               uint64            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Version          *v1.VersionVector `protobuf:"bytes,8,opt,name=version,proto3" json:"version,omitempty"`
	PeerKey          []byte            `protobuf:"bytes,2,opt,name=peer_key,json=peerKey,proto3" json:"peer_key,omitempty"`
	Alias            string            `protobuf:"bytes,3,opt,name=alias,proto3" json:"alias,omitempty"`
	UnreadCount      uint32            `protobuf:"varint,4,opt,name=unread_count,json=unreadCount,proto3" json:"unread_count,omitempty"`
	LastReceiveTimes []int64           `protobuf:"varint,5,rep,packed,name=last_receive_times,json=lastReceiveTimes,proto3" json:"last_receive_times,omitempty"`
	LastMessageTime  int64             `protobuf:"varint,6,opt,name=last_message_time,json=lastMessageTime,proto3" json:"last_message_time,omitempty"`
	LastMessageId    uint64            `protobuf:"varint,7,opt,name=last_message_id,json=lastMessageId,proto3" json:"last_message_id,omitempty"`
}

func (x *WhisperThread) Reset() {
	*x = WhisperThread{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhisperThread) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhisperThread) ProtoMessage() {}

func (x *WhisperThread) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhisperThread.ProtoReflect.Descriptor instead.
func (*WhisperThread) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{107}
}

func (x *WhisperThread) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WhisperThread) GetVersion() *v1.VersionVector {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *WhisperThread) GetPeerKey() []byte {
	if x != nil {
		return x.PeerKey
	}
	return nil
}

func (x *WhisperThread) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *WhisperThread) GetUnreadCount() uint32 {
	if x != nil {
		return x.UnreadCount
	}
	return 0
}

func (x *WhisperThread) GetLastReceiveTimes() []int64 {
	if x != nil {
		return x.LastReceiveTimes
	}
	return nil
}

func (x *WhisperThread) GetLastMessageTime() int64 {
	if x != nil {
		return x.LastMessageTime
	}
	return 0
}

func (x *WhisperThread) GetLastMessageId() uint64 {
	if x != nil {
		return x.LastMessageId
	}
	return 0
}

type WhisperRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Version    *v1.VersionVector   `protobuf:"bytes,8,opt,name=version,proto3" json:"version,omitempty"`
	ThreadId   uint64              `protobuf:"varint,2,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
	NetworkKey []byte              `protobuf:"bytes,3,opt,name=network_key,json=networkKey,proto3" json:"network_key,omitempty"`
	ServerKey  []byte              `protobuf:"bytes,4,opt,name=server_key,json=serverKey,proto3" json:"server_key,omitempty"`
	PeerKey    []byte              `protobuf:"bytes,5,opt,name=peer_key,json=peerKey,proto3" json:"peer_key,omitempty"`
	State      WhisperRecord_State `protobuf:"varint,6,opt,name=state,proto3,enum=strims.chat.v1.WhisperRecord_State" json:"state,omitempty"`
	Message    *Message            `protobuf:"bytes,7,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *WhisperRecord) Reset() {
	*x = WhisperRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhisperRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhisperRecord) ProtoMessage() {}

func (x *WhisperRecord) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhisperRecord.ProtoReflect.Descriptor instead.
func (*WhisperRecord) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{108}
}

func (x *WhisperRecord) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WhisperRecord) GetVersion() *v1.VersionVector {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *WhisperRecord) GetThreadId() uint64 {
	if x != nil {
		return x.ThreadId
	}
	return 0
}

func (x *WhisperRecord) GetNetworkKey() []byte {
	if x != nil {
		return x.NetworkKey
	}
	return nil
}

func (x *WhisperRecord) GetServerKey() []byte {
	if x != nil {
		return x.ServerKey
	}
	return nil
}

func (x *WhisperRecord) GetPeerKey() []byte {
	if x != nil {
		return x.PeerKey
	}
	return nil
}

func (x *WhisperRecord) GetState() WhisperRecord_State {
	if x != nil {
		return x.State
	}
	return WhisperRecord_WHISPER_STATE_RECEIVED
}

func (x *WhisperRecord) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

type WhisperSendMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerKey []byte `protobuf:"bytes,1,opt,name=server_key,json=serverKey,proto3" json:"server_key,omitempty"`
	Body      string `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *WhisperSendMessageRequest) Reset() {
	*x = WhisperSendMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhisperSendMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhisperSendMessageRequest) ProtoMessage() {}

func (x *WhisperSendMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhisperSendMessageRequest.ProtoReflect.Descriptor instead.
func (*WhisperSendMessageRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{109}
}

func (x *WhisperSendMessageRequest) GetServerKey() []byte {
	if x != nil {
		return x.ServerKey
	}
	return nil
}

func (x *WhisperSendMessageRequest) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type WhisperSendMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WhisperSendMessageResponse) Reset() {
	*x = WhisperSendMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhisperSendMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhisperSendMessageResponse) ProtoMessage() {}

func (x *WhisperSendMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhisperSendMessageResponse.ProtoReflect.Descriptor instead.
func (*WhisperSendMessageResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{110}
}

type EmoteEffect_CustomCSS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Css string `protobuf:"bytes,1,opt,name=css,proto3" json:"css,omitempty"`
}

func (x *EmoteEffect_CustomCSS) Reset() {
	*x = EmoteEffect_CustomCSS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmoteEffect_CustomCSS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmoteEffect_CustomCSS) ProtoMessage() {}

func (x *EmoteEffect_CustomCSS) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmoteEffect_CustomCSS.ProtoReflect.Descriptor instead.
func (*EmoteEffect_CustomCSS) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{5, 0}
}

func (x *EmoteEffect_CustomCSS) GetCss() string {
	if x != nil {
		return x.Css
	}
	return ""
}

type EmoteEffect_SpriteAnimation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FrameCount         uint32 `protobuf:"varint,1,opt,name=frame_count,json=frameCount,proto3" json:"frame_count,omitempty"`
	DurationMs         uint32 `protobuf:"varint,2,opt,name=duration_ms,json=durationMs,proto3" json:"duration_ms,omitempty"`
	IterationCount     uint32 `protobuf:"varint,3,opt,name=iteration_count,json=iterationCount,proto3" json:"iteration_count,omitempty"`
	EndOnFrame         uint32 `protobuf:"varint,4,opt,name=end_on_frame,json=endOnFrame,proto3" json:"end_on_frame,omitempty"`
	LoopForever        bool   `protobuf:"varint,5,opt,name=loop_forever,json=loopForever,proto3" json:"loop_forever,omitempty"`
	AlternateDirection bool   `protobuf:"varint,6,opt,name=alternate_direction,json=alternateDirection,proto3" json:"alternate_direction,omitempty"`
}

func (x *EmoteEffect_SpriteAnimation) Reset() {
	*x = EmoteEffect_SpriteAnimation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmoteEffect_SpriteAnimation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmoteEffect_SpriteAnimation) ProtoMessage() {}

func (x *EmoteEffect_SpriteAnimation) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmoteEffect_SpriteAnimation.ProtoReflect.Descriptor instead.
func (*EmoteEffect_SpriteAnimation) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{5, 1}
}

func (x *EmoteEffect_SpriteAnimation) GetFrameCount() uint32 {
	if x != nil {
		return x.FrameCount
	}
	return 0
}

func (x *EmoteEffect_SpriteAnimation) GetDurationMs() uint32 {
	if x != nil {
		return x.DurationMs
	}
	return 0
}

func (x *EmoteEffect_SpriteAnimation) GetIterationCount() uint32 {
	if x != nil {
		return x.IterationCount
	}
	return 0
}

func (x *EmoteEffect_SpriteAnimation) GetEndOnFrame() uint32 {
	if x != nil {
		return x.EndOnFrame
	}
	return 0
}

func (x *EmoteEffect_SpriteAnimation) GetLoopForever() bool {
	if x != nil {
		return x.LoopForever
	}
	return false
}

func (x *EmoteEffect_SpriteAnimation) GetAlternateDirection() bool {
	if x != nil {
		return x.AlternateDirection
	}
	return false
}

type EmoteEffect_DefaultModifiers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Modifiers []string `protobuf:"bytes,1,rep,name=modifiers,proto3" json:"modifiers,omitempty"`
}

func (x *EmoteEffect_DefaultModifiers) Reset() {
	*x = EmoteEffect_DefaultModifiers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmoteEffect_DefaultModifiers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmoteEffect_DefaultModifiers) ProtoMessage() {}

func (x *EmoteEffect_DefaultModifiers) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmoteEffect_DefaultModifiers.ProtoReflect.Descriptor instead.
func (*EmoteEffect_DefaultModifiers) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{5, 2}
}

func (x *EmoteEffect_DefaultModifiers) GetModifiers() []string {
	if x != nil {
		return x.Modifiers
	}
	return nil
}

type Message_Entities struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Links       []*Message_Entities_Link        `protobuf:"bytes,1,rep,name=links,proto3" json:"links,omitempty"`
	Emotes      []*Message_Entities_Emote       `protobuf:"bytes,2,rep,name=emotes,proto3" json:"emotes,omitempty"`
	Emojis      []*Message_Entities_Emoji       `protobuf:"bytes,3,rep,name=emojis,proto3" json:"emojis,omitempty"`
	Nicks       []*Message_Entities_Nick        `protobuf:"bytes,4,rep,name=nicks,proto3" json:"nicks,omitempty"`
	Tags        []*Message_Entities_Tag         `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`
	CodeBlocks  []*Message_Entities_CodeBlock   `protobuf:"bytes,6,rep,name=code_blocks,json=codeBlocks,proto3" json:"code_blocks,omitempty"`
	Spoilers    []*Message_Entities_Spoiler     `protobuf:"bytes,7,rep,name=spoilers,proto3" json:"spoilers,omitempty"`
	GreenText   *Message_Entities_GenericEntity `protobuf:"bytes,8,opt,name=green_text,json=greenText,proto3" json:"green_text,omitempty"`
	SelfMessage *Message_Entities_GenericEntity `protobuf:"bytes,9,opt,name=self_message,json=selfMessage,proto3" json:"self_message,omitempty"`
}

func (x *Message_Entities) Reset() {
	*x = Message_Entities{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_Entities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_Entities) ProtoMessage() {}

func (x *Message_Entities) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_Entities.ProtoReflect.Descriptor instead.
func (*Message_Entities) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{11, 0}
}

func (x *Message_Entities) GetLinks() []*Message_Entities_Link {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *Message_Entities) GetEmotes() []*Message_Entities_Emote {
	if x != nil {
		return x.Emotes
	}
	return nil
}

func (x *Message_Entities) GetEmojis() []*Message_Entities_Emoji {
	if x != nil {
		return x.Emojis
	}
	return nil
}

func (x *Message_Entities) GetNicks() []*Message_Entities_Nick {
	if x != nil {
		return x.Nicks
	}
	return nil
}

func (x *Message_Entities) GetTags() []*Message_Entities_Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Message_Entities) GetCodeBlocks() []*Message_Entities_CodeBlock {
	if x != nil {
		return x.CodeBlocks
	}
	return nil
}

func (x *Message_Entities) GetSpoilers() []*Message_Entities_Spoiler {
	if x != nil {
		return x.Spoilers
	}
	return nil
}

func (x *Message_Entities) GetGreenText() *Message_Entities_GenericEntity {
	if x != nil {
		return x.GreenText
	}
	return nil
}

func (x *Message_Entities) GetSelfMessage() *Message_Entities_GenericEntity {
	if x != nil {
		return x.SelfMessage
	}
	return nil
}

type Message_DirectoryRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DirectoryId uint64             `protobuf:"varint,1,opt,name=directory_id,json=directoryId,proto3" json:"directory_id,omitempty"`
	NetworkKey  []byte             `protobuf:"bytes,2,opt,name=network_key,json=networkKey,proto3" json:"network_key,omitempty"`
	Listing     *directory.Listing `protobuf:"bytes,3,opt,name=listing,proto3" json:"listing,omitempty"`
	ThemeColor  uint32             `protobuf:"varint,4,opt,name=themeColor,proto3" json:"themeColor,omitempty"`
}

func (x *Message_DirectoryRef) Reset() {
	*x = Message_DirectoryRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_DirectoryRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_DirectoryRef) ProtoMessage() {}

func (x *Message_DirectoryRef) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_DirectoryRef.ProtoReflect.Descriptor instead.
func (*Message_DirectoryRef) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{11, 1}
}

func (x *Message_DirectoryRef) GetDirectoryId() uint64 {
	if x != nil {
		return x.DirectoryId
	}
	return 0
}

func (x *Message_DirectoryRef) GetNetworkKey() []byte {
	if x != nil {
		return x.NetworkKey
	}
	return nil
}

func (x *Message_DirectoryRef) GetListing() *directory.Listing {
	if x != nil {
		return x.Listing
	}
	return nil
}

func (x *Message_DirectoryRef) GetThemeColor() uint32 {
	if x != nil {
		return x.ThemeColor
	}
	return 0
}

type Message_Entities_Bounds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start uint32 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End   uint32 `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *Message_Entities_Bounds) Reset() {
	*x = Message_Entities_Bounds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_Entities_Bounds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_Entities_Bounds) ProtoMessage() {}

func (x *Message_Entities_Bounds) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_Entities_Bounds.ProtoReflect.Descriptor instead.
func (*Message_Entities_Bounds) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{11, 0, 0}
}

func (x *Message_Entities_Bounds) GetStart() uint32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *Message_Entities_Bounds) GetEnd() uint32 {
	if x != nil {
		return x.End
	}
	return 0
}

type Message_Entities_Link struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bounds *Message_Entities_Bounds `protobuf:"bytes,1,opt,name=bounds,proto3" json:"bounds,omitempty"`
	Url    string                   `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *Message_Entities_Link) Reset() {
	*x = Message_Entities_Link{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_Entities_Link) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_Entities_Link) ProtoMessage() {}

func (x *Message_Entities_Link) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_Entities_Link.ProtoReflect.Descriptor instead.
func (*Message_Entities_Link) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{11, 0, 1}
}

func (x *Message_Entities_Link) GetBounds() *Message_Entities_Bounds {
	if x != nil {
		return x.Bounds
	}
	return nil
}

func (x *Message_Entities_Link) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type Message_Entities_Emote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bounds    *Message_Entities_Bounds `protobuf:"bytes,1,opt,name=bounds,proto3" json:"bounds,omitempty"`
	Name      string                   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Modifiers []string                 `protobuf:"bytes,3,rep,name=modifiers,proto3" json:"modifiers,omitempty"`
	Combo     uint32                   `protobuf:"varint,4,opt,name=combo,proto3" json:"combo,omitempty"`
	CanCombo  bool                     `protobuf:"varint,5,opt,name=can_combo,json=canCombo,proto3" json:"can_combo,omitempty"`
}

func (x *Message_Entities_Emote) Reset() {
	*x = Message_Entities_Emote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_Entities_Emote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_Entities_Emote) ProtoMessage() {}

func (x *Message_Entities_Emote) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_Entities_Emote.ProtoReflect.Descriptor instead.
func (*Message_Entities_Emote) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{11, 0, 2}
}

func (x *Message_Entities_Emote) GetBounds() *Message_Entities_Bounds {
	if x != nil {
		return x.Bounds
	}
	return nil
}

func (x *Message_Entities_Emote) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Message_Entities_Emote) GetModifiers() []string {
	if x != nil {
		return x.Modifiers
	}
	return nil
}

func (x *Message_Entities_Emote) GetCombo() uint32 {
	if x != nil {
		return x.Combo
	}
	return 0
}

func (x *Message_Entities_Emote) GetCanCombo() bool {
	if x != nil {
		return x.CanCombo
	}
	return false
}

type Message_Entities_Emoji struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bounds *Message_Entities_Bounds `protobuf:"bytes,1,opt,name=bounds,proto3" json:"bounds,omitempty"`
}

func (x *Message_Entities_Emoji) Reset() {
	*x = Message_Entities_Emoji{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_Entities_Emoji) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_Entities_Emoji) ProtoMessage() {}

func (x *Message_Entities_Emoji) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_Entities_Emoji.ProtoReflect.Descriptor instead.
func (*Message_Entities_Emoji) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{11, 0, 3}
}

func (x *Message_Entities_Emoji) GetBounds() *Message_Entities_Bounds {
	if x != nil {
		return x.Bounds
	}
	return nil
}

type Message_Entities_Nick struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bounds        *Message_Entities_Bounds `protobuf:"bytes,1,opt,name=bounds,proto3" json:"bounds,omitempty"`
	Nick          string                   `protobuf:"bytes,2,opt,name=nick,proto3" json:"nick,omitempty"`
	PeerKey       []byte                   `protobuf:"bytes,3,opt,name=peer_key,json=peerKey,proto3" json:"peer_key,omitempty"`
	ViewedListing *Message_DirectoryRef    `protobuf:"bytes,4,opt,name=viewed_listing,json=viewedListing,proto3" json:"viewed_listing,omitempty"`
}

func (x *Message_Entities_Nick) Reset() {
	*x = Message_Entities_Nick{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_Entities_Nick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_Entities_Nick) ProtoMessage() {}

func (x *Message_Entities_Nick) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_Entities_Nick.ProtoReflect.Descriptor instead.
func (*Message_Entities_Nick) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{11, 0, 4}
}

func (x *Message_Entities_Nick) GetBounds() *Message_Entities_Bounds {
	if x != nil {
		return x.Bounds
	}
	return nil
}

func (x *Message_Entities_Nick) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (x *Message_Entities_Nick) GetPeerKey() []byte {
	if x != nil {
		return x.PeerKey
	}
	return nil
}

func (x *Message_Entities_Nick) GetViewedListing() *Message_DirectoryRef {
	if x != nil {
		return x.ViewedListing
	}
	return nil
}

type Message_Entities_Tag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bounds *Message_Entities_Bounds `protobuf:"bytes,1,opt,name=bounds,proto3" json:"bounds,omitempty"`
	Name   string                   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Message_Entities_Tag) Reset() {
	*x = Message_Entities_Tag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_Entities_Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_Entities_Tag) ProtoMessage() {}

func (x *Message_Entities_Tag) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_Entities_Tag.ProtoReflect.Descriptor instead.
func (*Message_Entities_Tag) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{11, 0, 5}
}

func (x *Message_Entities_Tag) GetBounds() *Message_Entities_Bounds {
	if x != nil {
		return x.Bounds
	}
	return nil
}

func (x *Message_Entities_Tag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Message_Entities_CodeBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bounds *Message_Entities_Bounds `protobuf:"bytes,1,opt,name=bounds,proto3" json:"bounds,omitempty"`
}

func (x *Message_Entities_CodeBlock) Reset() {
	*x = Message_Entities_CodeBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_Entities_CodeBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_Entities_CodeBlock) ProtoMessage() {}

func (x *Message_Entities_CodeBlock) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_Entities_CodeBlock.ProtoReflect.Descriptor instead.
func (*Message_Entities_CodeBlock) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{11, 0, 6}
}

func (x *Message_Entities_CodeBlock) GetBounds() *Message_Entities_Bounds {
	if x != nil {
		return x.Bounds
	}
	return nil
}

type Message_Entities_Spoiler struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bounds *Message_Entities_Bounds `protobuf:"bytes,1,opt,name=bounds,proto3" json:"bounds,omitempty"`
}

func (x *Message_Entities_Spoiler) Reset() {
	*x = Message_Entities_Spoiler{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_Entities_Spoiler) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_Entities_Spoiler) ProtoMessage() {}

func (x *Message_Entities_Spoiler) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_Entities_Spoiler.ProtoReflect.Descriptor instead.
func (*Message_Entities_Spoiler) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{11, 0, 7}
}

func (x *Message_Entities_Spoiler) GetBounds() *Message_Entities_Bounds {
	if x != nil {
		return x.Bounds
	}
	return nil
}

type Message_Entities_GenericEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bounds *Message_Entities_Bounds `protobuf:"bytes,1,opt,name=bounds,proto3" json:"bounds,omitempty"`
}

func (x *Message_Entities_GenericEntity) Reset() {
	*x = Message_Entities_GenericEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_Entities_GenericEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_Entities_GenericEntity) ProtoMessage() {}

func (x *Message_Entities_GenericEntity) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_Entities_GenericEntity.ProtoReflect.Descriptor instead.
func (*Message_Entities_GenericEntity) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{11, 0, 8}
}

func (x *Message_Entities_GenericEntity) GetBounds() *Message_Entities_Bounds {
	if x != nil {
		return x.Bounds
	}
	return nil
}

type Profile_Mute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedAt        int64  `protobuf:"varint,1,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	DurationSecs     uint32 `protobuf:"varint,2,opt,name=duration_secs,json=durationSecs,proto3" json:"duration_secs,omitempty"`
	Message          string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	ModeratorPeerKey []byte `protobuf:"bytes,4,opt,name=moderator_peer_key,json=moderatorPeerKey,proto3" json:"moderator_peer_key,omitempty"`
}

func (x *Profile_Mute) Reset() {
	*x = Profile_Mute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Profile_Mute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profile_Mute) ProtoMessage() {}

func (x *Profile_Mute) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profile_Mute.ProtoReflect.Descriptor instead.
func (*Profile_Mute) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{12, 0}
}

func (x *Profile_Mute) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Profile_Mute) GetDurationSecs() uint32 {
	if x != nil {
		return x.DurationSecs
	}
	return 0
}

func (x *Profile_Mute) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Profile_Mute) GetModeratorPeerKey() []byte {
	if x != nil {
		return x.ModeratorPeerKey
	}
	return nil
}

type UIConfig_SoundFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileType string `protobuf:"bytes,1,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"`
	Data     []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UIConfig_SoundFile) Reset() {
	*x = UIConfig_SoundFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UIConfig_SoundFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UIConfig_SoundFile) ProtoMessage() {}

func (x *UIConfig_SoundFile) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UIConfig_SoundFile.ProtoReflect.Descriptor instead.
func (*UIConfig_SoundFile) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{13, 0}
}

func (x *UIConfig_SoundFile) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *UIConfig_SoundFile) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type OpenClientResponse_Open struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OpenClientResponse_Open) Reset() {
	*x = OpenClientResponse_Open{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenClientResponse_Open) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenClientResponse_Open) ProtoMessage() {}

func (x *OpenClientResponse_Open) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenClientResponse_Open.ProtoReflect.Descriptor instead.
func (*OpenClientResponse_Open) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{64, 0}
}

type OpenClientResponse_ServerEvents struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []*ServerEvent `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *OpenClientResponse_ServerEvents) Reset() {
	*x = OpenClientResponse_ServerEvents{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenClientResponse_ServerEvents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenClientResponse_ServerEvents) ProtoMessage() {}

func (x *OpenClientResponse_ServerEvents) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenClientResponse_ServerEvents.ProtoReflect.Descriptor instead.
func (*OpenClientResponse_ServerEvents) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{64, 1}
}

func (x *OpenClientResponse_ServerEvents) GetEvents() []*ServerEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type WatchWhispersResponse_WhisperThreadDelete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ThreadId uint64 `protobuf:"varint,1,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
}

func (x *WatchWhispersResponse_WhisperThreadDelete) Reset() {
	*x = WatchWhispersResponse_WhisperThreadDelete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchWhispersResponse_WhisperThreadDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchWhispersResponse_WhisperThreadDelete) ProtoMessage() {}

func (x *WatchWhispersResponse_WhisperThreadDelete) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchWhispersResponse_WhisperThreadDelete.ProtoReflect.Descriptor instead.
func (*WatchWhispersResponse_WhisperThreadDelete) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{78, 0}
}

func (x *WatchWhispersResponse_WhisperThreadDelete) GetThreadId() uint64 {
	if x != nil {
		return x.ThreadId
	}
	return 0
}

type WatchWhispersResponse_WhisperDelete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordId uint64 `protobuf:"varint,1,opt,name=record_id,json=recordId,proto3" json:"record_id,omitempty"`
	ThreadId uint64 `protobuf:"varint,2,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
}

func (x *WatchWhispersResponse_WhisperDelete) Reset() {
	*x = WatchWhispersResponse_WhisperDelete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_v1_chat_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchWhispersResponse_WhisperDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchWhispersResponse_WhisperDelete) ProtoMessage() {}

func (x *WatchWhispersResponse_WhisperDelete) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchWhispersResponse_WhisperDelete.ProtoReflect.Descriptor instead.
func (*WatchWhispersResponse_WhisperDelete) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{78, 1}
}

func (x *WatchWhispersResponse_WhisperDelete) GetRecordId() uint64 {
	if x != nil {
		return x.RecordId
	}
	return 0
}

func (x *WatchWhispersResponse_WhisperDelete) GetThreadId() uint64 {
	if x != nil {
		return x.ThreadId
	}
	return 0
}

var File_chat_v1_chat_proto protoreflect.FileDescriptor

var file_chat_v1_chat_proto_rawDesc = []byte{
	0x0a, 0x12, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x76, 0x31, 0x1a, 0x0e, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x6b, 0x65, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f,
	0x76, 0x31, 0x2f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x64, 0x61,
	0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4b,
	0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0xe9, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x2c, 0x0a, 0x04, 0x52,
	0x6f, 0x6f, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x73, 0x73, 0x22, 0xaf, 0x01, 0x0a, 0x06, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x4b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x04, 0x72, 0x6f, 0x6f,
	0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x04, 0x72,
	0x6f, 0x6f, 0x6d, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x65, 0x65,
	0x72, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0d, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x50, 0x65, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x73, 0x22, 0x46, 0x0a, 0x0a, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d,
	0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x22, 0xbc, 0x01, 0x0a, 0x0a, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3a, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x72, 0x69,
	0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x6f, 0x74, 0x65,
	0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x12, 0x30, 0x0a, 0x05, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1a, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x52, 0x05, 0x73, 0x63, 0x61,
	0x6c, 0x65, 0x22, 0xdf, 0x04, 0x0a, 0x0b, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x45, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x12, 0x47, 0x0a, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x63, 0x73, 0x73,
	0x18, 0xe9, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x45, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x43, 0x53, 0x53, 0x48, 0x00,
	0x52, 0x09, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x43, 0x73, 0x73, 0x12, 0x59, 0x0a, 0x10, 0x73,
	0x70, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0xea, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x45, 0x66, 0x66,
	0x65, 0x63, 0x74, 0x2e, 0x53, 0x70, 0x72, 0x69, 0x74, 0x65, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0f, 0x73, 0x70, 0x72, 0x69, 0x74, 0x65, 0x41, 0x6e, 0x69,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5c, 0x0a, 0x11, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x18, 0xeb, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x2e,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73,
	0x48, 0x00, 0x52, 0x10, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x73, 0x1a, 0x1d, 0x0a, 0x09, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x43, 0x53,
	0x53, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x63, 0x73, 0x73, 0x1a, 0xf2, 0x01, 0x0a, 0x0f, 0x53, 0x70, 0x72, 0x69, 0x74, 0x65, 0x41, 0x6e,
	0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x74, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0e, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x65, 0x6e, 0x64, 0x5f, 0x6f, 0x6e, 0x5f, 0x66, 0x72, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x65, 0x6e, 0x64, 0x4f, 0x6e, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x6f, 0x70, 0x5f, 0x66, 0x6f, 0x72,
	0x65, 0x76, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6c, 0x6f, 0x6f, 0x70,
	0x46, 0x6f, 0x72, 0x65, 0x76, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x13, 0x61, 0x6c, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x65, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x30, 0x0a, 0x10, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x09, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x42, 0x08, 0x0a, 0x06, 0x65, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x22, 0x3a, 0x0a, 0x10, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b,
	0x22, 0xf7, 0x01, 0x0a, 0x05, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x74,
	0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x6f,
	0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12,
	0x35, 0x0a, 0x07, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x07, 0x65,
	0x66, 0x66, 0x65, 0x63, 0x74, 0x73, 0x12, 0x42, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x74,
	0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x6f,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x52, 0x0b, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x22, 0xce, 0x01, 0x0a, 0x08, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x12, 0x28, 0x0a, 0x10, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x77, 0x72, 0x61, 0x70, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x57, 0x72, 0x61, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72,
	0x6f, 0x63, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0a, 0x70, 0x72, 0x6f, 0x63, 0x43, 0x68, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x7a, 0x0a, 0x03, 0x54,
	0x61, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x6e,
	0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x65,
	0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x22, 0xab, 0x02, 0x0a, 0x0b, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x64, 0x65,
	0x6c, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x44, 0x65, 0x6c,
	0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64,
	0x49, 0x64, 0x73, 0x12, 0x28, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x12, 0x2d, 0x0a,
	0x06, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x6d, 0x6f, 0x74, 0x65, 0x52, 0x06, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x09,
	0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x73, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x26, 0x0a,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x74,
	0x72, 0x69, 0x6d, 0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0xb8, 0x0f, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x65, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x69, 0x63,
	0x6b, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x3c, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x0e, 0x76, 0x69, 0x65, 0x77, 0x65, 0x64, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x74,
	0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x66, 0x52, 0x0d, 0x76, 0x69, 0x65, 0x77, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67,
	0x1a, 0x88, 0x0c, 0x0a, 0x08, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x3b, 0x0a,
	0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73,
	0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x4c,
	0x69, 0x6e, 0x6b, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x3e, 0x0a, 0x06, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x74, 0x72,
	0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x45, 0x6d, 0x6f,
	0x74, 0x65, 0x52, 0x06, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x06, 0x65, 0x6d,
	0x6f, 0x6a, 0x69, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x74, 0x72,
	0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x45, 0x6d, 0x6f,
	0x6a, 0x69, 0x52, 0x06, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x73, 0x12, 0x3b, 0x0a, 0x05, 0x6e, 0x69,
	0x63, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x74, 0x72, 0x69,
	0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x4e, 0x69, 0x63, 0x6b,
	0x52, 0x05, 0x6e, 0x69, 0x63, 0x6b, 0x73, 0x12, 0x38, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x12, 0x4b, 0x0a, 0x0b, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x52, 0x0a, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x44,
	0x0a, 0x08, 0x73, 0x70, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x2e, 0x53, 0x70, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x52, 0x08, 0x73, 0x70, 0x6f, 0x69,
	0x6c, 0x65, 0x72, 0x73, 0x12, 0x4d, 0x0a, 0x0a, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d,
	0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x69, 0x63, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x09, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x54,
	0x65, 0x78, 0x74, 0x12, 0x51, 0x0a, 0x0c, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x73, 0x74, 0x72, 0x69,
	0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x69, 0x63, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0b, 0x73, 0x65, 0x6c, 0x66, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x30, 0x0a, 0x06, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x1a, 0x59, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x6b,
	0x12, 0x3f, 0x0a, 0x06, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x2e, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x06, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x1a, 0xad, 0x01, 0x0a, 0x05, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x12, 0x3f, 0x0a,
	0x06, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e,
	0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x06, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6d, 0x62, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x63, 0x6f, 0x6d, 0x62, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6e, 0x5f, 0x63, 0x6f,
	0x6d, 0x62, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x61, 0x6e, 0x43, 0x6f,
	0x6d, 0x62, 0x6f, 0x1a, 0x48, 0x0a, 0x05, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x12, 0x3f, 0x0a, 0x06,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73,
	0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x42,
	0x6f, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x06, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x1a, 0xc3, 0x01,
	0x0a, 0x04, 0x4e, 0x69, 0x63, 0x6b, 0x12, 0x3f, 0x0a, 0x06, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x52,
	0x06, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x12, 0x19, 0x0a, 0x08, 0x70,
	0x65, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70,
	0x65, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x4b, 0x0a, 0x0e, 0x76, 0x69, 0x65, 0x77, 0x65, 0x64,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x66, 0x52, 0x0d, 0x76, 0x69, 0x65, 0x77, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x1a, 0x5a, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x12, 0x3f, 0x0a, 0x06, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x74, 0x72,
	0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x42, 0x6f, 0x75,
	0x6e, 0x64, 0x73, 0x52, 0x06, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a,
	0x4c, 0x0a, 0x09, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x3f, 0x0a, 0x06,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73,
	0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x42,
	0x6f, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x06, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x1a, 0x4a, 0x0a,
	0x07, 0x53, 0x70, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x12, 0x3f, 0x0a, 0x06, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d,
	0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x42, 0x6f, 0x75, 0x6e, 0x64,
	0x73, 0x52, 0x06, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x1a, 0x50, 0x0a, 0x0d, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x69, 0x63, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x3f, 0x0a, 0x06, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x74, 0x72,
	0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x42, 0x6f, 0x75,
	0x6e, 0x64, 0x73, 0x52, 0x06, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x1a, 0xb2, 0x01, 0x0a, 0x0c,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x66, 0x12, 0x21, 0x0a, 0x0c,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4b, 0x65, 0x79,
	0x12, 0x3e, 0x0a, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x22, 0xd5, 0x02, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x65, 0x65,
	0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x65, 0x65,
	0x72, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x32, 0x0a, 0x05, 0x6d, 0x75,
	0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x74, 0x72, 0x69,
	0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x2e, 0x4d, 0x75, 0x74, 0x65, 0x52, 0x05, 0x6d, 0x75, 0x74, 0x65, 0x73, 0x12, 0x23,
	0x0a, 0x0d, 0x6d, 0x75, 0x74, 0x65, 0x5f, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6d, 0x75, 0x74, 0x65, 0x44, 0x65, 0x61, 0x64, 0x6c,
	0x69, 0x6e, 0x65, 0x1a, 0x92, 0x01, 0x0a, 0x04, 0x4d, 0x75, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x6f,
	0x64, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x50, 0x65, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x22, 0xdb, 0x0e, 0x0a, 0x08, 0x55, 0x49, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x77, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x66, 0x6c, 0x61, 0x69, 0x72,
	0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x73, 0x68,
	0x6f, 0x77, 0x46, 0x6c, 0x61, 0x69, 0x72, 0x49, 0x63, 0x6f, 0x6e, 0x73, 0x12, 0x29, 0x0a, 0x10,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x6c,
	0x69, 0x6e, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x4c,
	0x69, 0x6e, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x14, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x13, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x57, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x1a, 0x73, 0x6f, 0x75, 0x6e, 0x64,
	0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x68,
	0x69, 0x73, 0x70, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x73, 0x6f, 0x75,
	0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x68,
	0x69, 0x73, 0x70, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x16, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x40, 0x0a, 0x1c,
	0x73, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x68, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x1a, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x5a,
	0x0a, 0x17, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73,
	0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x49, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x15, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x69,
	0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x68,
	0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x5f, 0x68, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0b, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x48, 0x69, 0x67, 0x68, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x47, 0x0a, 0x0c, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x72, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x73, 0x74, 0x72, 0x69,
	0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x49, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x52,
	0x0b, 0x73, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x31, 0x0a, 0x15,
	0x73, 0x68, 0x6f, 0x77, 0x5f, 0x77, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x73, 0x5f, 0x69, 0x6e,
	0x5f, 0x63, 0x68, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x73, 0x68, 0x6f,
	0x77, 0x57, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x12,
	0x27, 0x0a, 0x0f, 0x66, 0x6f, 0x63, 0x75, 0x73, 0x5f, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e,
	0x65, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x66, 0x6f, 0x63, 0x75, 0x73, 0x4d,
	0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x12, 0x31, 0x0a, 0x14, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x69,
	0x67, 0x6e, 0x6f, 0x72, 0x65, 0x5f, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x4d, 0x65, 0x6e, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2f, 0x0a, 0x13, 0x61, 0x75, 0x74, 0x6f, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x5f, 0x68, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x12, 0x61, 0x75, 0x74, 0x6f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x48,
	0x65, 0x6c, 0x70, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x1a, 0x61, 0x75, 0x74, 0x6f, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x61, 0x75, 0x74, 0x6f, 0x63,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x50, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x12, 0x2b, 0x0a, 0x11, 0x74, 0x61, 0x67, 0x67, 0x65, 0x64, 0x5f, 0x76, 0x69,
	0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10,
	0x74, 0x61, 0x67, 0x67, 0x65, 0x64, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x12, 0x1b, 0x0a, 0x09, 0x68, 0x69, 0x64, 0x65, 0x5f, 0x6e, 0x73, 0x66, 0x77, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x68, 0x69, 0x64, 0x65, 0x4e, 0x73, 0x66, 0x77, 0x12, 0x27, 0x0a,
	0x0f, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x76, 0x65, 0x72,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x46,
	0x6f, 0x72, 0x65, 0x76, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x74, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x18, 0x19, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x12,
	0x27, 0x0a, 0x0f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x74, 0x65, 0x72, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x62, 0x6f, 0x18, 0x1b, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x62,
	0x6f, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x73, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x70, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x73, 0x18, 0x1d,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x70, 0x6f,
	0x69, 0x6c, 0x65, 0x72, 0x73, 0x12, 0x66, 0x0a, 0x17, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x72,
	0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x49, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x15, 0x75, 0x73, 0x65, 0x72, 0x50, 0x72, 0x65, 0x73,
	0x65, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x23, 0x0a,
	0x0d, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x5f, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x1f,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x45, 0x6d, 0x6f, 0x74,
	0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x65, 0x6e, 0x5f, 0x6c, 0x69,
	0x6e, 0x6b, 0x73, 0x18, 0x20, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x65, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x63, 0x74, 0x5f, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x69, 0x6e, 0x67,
	0x18, 0x21, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x45,
	0x6d, 0x6f, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x12, 0x30, 0x0a, 0x14, 0x6e,
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x5f, 0x63,
	0x61, 0x73, 0x65, 0x18, 0x22, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x6e, 0x6f, 0x72, 0x6d, 0x61,
	0x6c, 0x69, 0x7a, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x43, 0x61, 0x73, 0x65, 0x12, 0x26, 0x0a,
	0x0f, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x5f, 0x73, 0x6b, 0x69, 0x6e, 0x5f, 0x74, 0x6f, 0x6e, 0x65,
	0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x53, 0x6b, 0x69,
	0x6e, 0x54, 0x6f, 0x6e, 0x65, 0x1a, 0x3c, 0x0a, 0x09, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x46, 0x69,
	0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x5c, 0x0a, 0x0b, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x64, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x48, 0x4f, 0x57, 0x5f, 0x52, 0x45, 0x4d, 0x4f, 0x56,
	0x45, 0x44, 0x5f, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x53,
	0x48, 0x4f, 0x57, 0x5f, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x44, 0x5f, 0x43, 0x45, 0x4e, 0x53,
	0x4f, 0x52, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x48, 0x4f, 0x57, 0x5f, 0x52, 0x45, 0x4d,
	0x4f, 0x56, 0x45, 0x44, 0x5f, 0x44, 0x4f, 0x5f, 0x4e, 0x4f, 0x54, 0x48, 0x49, 0x4e, 0x47, 0x10,
	0x02, 0x22, 0xa2, 0x01, 0x0a, 0x15, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e,
	0x63, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x20, 0x55,
	0x53, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x49, 0x4e, 0x44,
	0x49, 0x43, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x45, 0x4e,
	0x43, 0x45, 0x5f, 0x49, 0x4e, 0x44, 0x49, 0x43, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x42, 0x41, 0x52,
	0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x45,
	0x4e, 0x43, 0x45, 0x5f, 0x49, 0x4e, 0x44, 0x49, 0x43, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x44, 0x4f,
	0x54, 0x10, 0x02, 0x12, 0x21, 0x0a, 0x1d, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x45, 0x53,
	0x45, 0x4e, 0x43, 0x45, 0x5f, 0x49, 0x4e, 0x44, 0x49, 0x43, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x41,
	0x52, 0x52, 0x41, 0x59, 0x10, 0x03, 0x22, 0x8c, 0x01, 0x0a, 0x11, 0x55, 0x49, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x48, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x64, 0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x65,
	0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x65,
	0x65, 0x72, 0x4b, 0x65, 0x79, 0x22, 0x9c, 0x01, 0x0a, 0x0b, 0x55, 0x49, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x54, 0x61, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e,
	0x64, 0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x56, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c,
	0x69, 0x61, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x65, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x22, 0xa5, 0x01, 0x0a, 0x0e, 0x55, 0x49, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d,
	0x73, 0x2e, 0x64, 0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x65, 0x65, 0x72, 0x4b, 0x65, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0x60, 0x0a, 0x13,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x4b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x22, 0x46,
	0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x06,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0x70, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4b, 0x65, 0x79, 0x12, 0x28,
	0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73,
	0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f,
	0x6f, 0x6d, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x22, 0x46, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2e, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x22, 0x25, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x22, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x43, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d,
	0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0x14, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x47,
	0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x07,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x22, 0x60, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x63, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x28, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x57, 0x0a, 0x18, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x63, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
	0x69, 0x63, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x74, 0x72,
	0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x49, 0x63, 0x6f, 0x6e, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x63,
	0x6f, 0x6e, 0x22, 0x33, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x63, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0x54, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x49, 0x63, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3b, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x63, 0x6f,
	0x6e, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x63, 0x6f, 0x6e, 0x22, 0x86, 0x02,
	0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x73, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x73, 0x73, 0x12, 0x35, 0x0a, 0x07, 0x65,
	0x66, 0x66, 0x65, 0x63, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73,
	0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d,
	0x6f, 0x74, 0x65, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x07, 0x65, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x73, 0x12, 0x42, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x22, 0x42, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x45, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a,
	0x05, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73,
	0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d,
	0x6f, 0x74, 0x65, 0x52, 0x05, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x22, 0x96, 0x02, 0x0a, 0x12, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x06,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x73, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x73, 0x73, 0x12, 0x35, 0x0a, 0x07, 0x65, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x74, 0x72, 0x69,
	0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x6f, 0x74, 0x65,
	0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x07, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x73, 0x12,
	0x42, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x6f, 0x72, 0x22, 0x42, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x6f,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x74, 0x72, 0x69,
	0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x6f, 0x74, 0x65,
	0x52, 0x05, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x22, 0x41, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x21, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x3f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x6f, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x05,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x22, 0xaa, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6d,
	0x6f, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6d, 0x6f,
	0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x52,
	0x05, 0x70, 0x61, 0x72, 0x74, 0x73, 0x22, 0x3a, 0x0a, 0x04, 0x50, 0x61, 0x72, 0x74, 0x12, 0x12,
	0x0a, 0x0e, 0x50, 0x41, 0x52, 0x54, 0x5f, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x41, 0x52, 0x54, 0x5f, 0x4d, 0x45, 0x54, 0x41, 0x10,
	0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x41, 0x52, 0x54, 0x5f, 0x41, 0x53, 0x53, 0x45, 0x54, 0x53,
	0x10, 0x02, 0x22, 0x43, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d,
	0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x52,
	0x06, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x73, 0x22, 0xcb, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1a,
	0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x5f, 0x77, 0x72, 0x61, 0x70, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x57, 0x72, 0x61, 0x70, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x63, 0x5f, 0x63, 0x68, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x63, 0x43,
	0x68, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x4e, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x34, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x08, 0x6d, 0x6f, 0x64,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0xdb, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x5f, 0x77, 0x72, 0x61, 0x70, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x57, 0x72, 0x61, 0x70, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x63, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x63, 0x43, 0x68, 0x61,
	0x6e, 0x63, 0x65, 0x22, 0x4e, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a,
	0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x22, 0x44, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x24, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4b, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x34, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x08, 0x6d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0x33, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4f, 0x0a, 0x15, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x22, 0x77, 0x0a, 0x10,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x73, 0x69,
	0x74, 0x69, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x65, 0x6e, 0x73,
	0x69, 0x74, 0x69, 0x76, 0x65, 0x22, 0x3a, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x03, 0x74, 0x61,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x03, 0x74, 0x61,
	0x67, 0x22, 0x87, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x73, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x22, 0x3a, 0x0a, 0x11, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x25, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x61, 0x67, 0x52, 0x03, 0x74, 0x61, 0x67, 0x22, 0x3f, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x37,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x25, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x61, 0x67, 0x52, 0x03, 0x74, 0x61, 0x67, 0x22, 0x2e, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x54,
	0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0x3b, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x54,
	0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x74, 0x72, 0x69,
	0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x22, 0x62, 0x0a, 0x11, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f,
	0x75, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x55, 0x6e, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x4f, 0x0a, 0x12, 0x53, 0x79, 0x6e, 0x63,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x53, 0x0a, 0x11, 0x4f, 0x70, 0x65,
	0x6e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4b, 0x65, 0x79, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x22, 0xc5,
	0x02, 0x0a, 0x12, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0xe9, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x48, 0x00, 0x52,
	0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x57, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0xea, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e,
	0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x70, 0x65, 0x6e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x48, 0x00,
	0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x41,
	0x0a, 0x0c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0xeb,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42, 0x75, 0x6e, 0x64,
	0x6c, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x42, 0x75, 0x6e, 0x64, 0x6c,
	0x65, 0x1a, 0x06, 0x0a, 0x04, 0x4f, 0x70, 0x65, 0x6e, 0x1a, 0x43, 0x0a, 0x0c, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x33, 0x0a, 0x06, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x74, 0x72, 0x69,
	0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x06,
	0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x6e, 0x0a, 0x18, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4b,
	0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x1b, 0x0a, 0x19, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x9f, 0x01, 0x0a, 0x11, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x75,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69,
	0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d,
	0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6b, 0x0a, 0x13, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x6e, 0x6d, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x22, 0x16, 0x0a, 0x14, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x55, 0x6e, 0x6d, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x56, 0x0a, 0x14, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x22, 0x4c, 0x0a, 0x15, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x95, 0x01, 0x0a, 0x0e, 0x57, 0x68, 0x69, 0x73, 0x70,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69,
	0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12,
	0x19, 0x0a, 0x08, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x70, 0x65, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f,
	0x64, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x11,
	0x0a, 0x0f, 0x57, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x30, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x65, 0x65, 0x72,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x65, 0x65, 0x72,
	0x4b, 0x65, 0x79, 0x22, 0x88, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x68, 0x69, 0x73,
	0x70, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x06,
	0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73,
	0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x68,
	0x69, 0x73, 0x70, 0x65, 0x72, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x52, 0x06, 0x74, 0x68, 0x72,
	0x65, 0x61, 0x64, 0x12, 0x39, 0x0a, 0x08, 0x77, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x08, 0x77, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x73, 0x22, 0x16,
	0x0a, 0x14, 0x57, 0x61, 0x74, 0x63, 0x68, 0x57, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x8b, 0x04, 0x0a, 0x15, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x57, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x70, 0x65, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x45, 0x0a, 0x0d, 0x74,
	0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0xe9, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x54, 0x68, 0x72, 0x65,
	0x61, 0x64, 0x48, 0x00, 0x52, 0x0c, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x61, 0x0a, 0x0d, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x18, 0xea, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x73, 0x74, 0x72,
	0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63,
	0x68, 0x57, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x57, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x47, 0x0a, 0x0e, 0x77, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72,
	0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0xeb, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x57, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x48, 0x00, 0x52,
	0x0d, 0x77, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x5d,
	0x0a, 0x0e, 0x77, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x18, 0xec, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x57, 0x68,
	0x69, 0x73, 0x70, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x57,
	0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0d,
	0x77, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x1a, 0x32, 0x0a,
	0x13, 0x57, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49,
	0x64, 0x1a, 0x49, 0x0a, 0x0d, 0x57, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x42, 0x06, 0x0a, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x22, 0x36, 0x0a, 0x17, 0x4d, 0x61, 0x72, 0x6b, 0x57, 0x68, 0x69, 0x73,
	0x70, 0x65, 0x72, 0x73, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x22, 0x1a, 0x0a, 0x18,
	0x4d, 0x61, 0x72, 0x6b, 0x57, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x73, 0x52, 0x65, 0x61, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x39, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x57, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x74, 0x68, 0x72, 0x65, 0x61,
	0x64, 0x49, 0x64, 0x22, 0x1d, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x68, 0x69,
	0x73, 0x70, 0x65, 0x72, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x4b, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x55, 0x49, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x09, 0x75, 0x69, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x74,
	0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x49, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x08, 0x75, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22,
	0x15, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x55, 0x49, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x57, 0x61, 0x74, 0x63, 0x68, 0x55,
	0x49, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xd0,
	0x04, 0x0a, 0x15, 0x57, 0x61, 0x74, 0x63, 0x68, 0x55, 0x49, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x69, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0xe9, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73,
	0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x49,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x08, 0x75, 0x69, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x54, 0x0a, 0x13, 0x75, 0x69, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x68, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x18, 0xea, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x49, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x69, 0x67, 0x68, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x48, 0x00, 0x52, 0x11, 0x75, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48,
	0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x61, 0x0a, 0x1a, 0x75, 0x69, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x68, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0xeb, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x49, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74,
	0x48, 0x00, 0x52, 0x17, 0x75, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x69, 0x67, 0x68,
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x42, 0x0a, 0x0d, 0x75,
	0x69, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x74, 0x61, 0x67, 0x18, 0xec, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x49, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x61, 0x67,
	0x48, 0x00, 0x52, 0x0b, 0x75, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x61, 0x67, 0x12,
	0x4f, 0x0a, 0x14, 0x75, 0x69, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x74, 0x61, 0x67,
	0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0xed, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x49, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x61, 0x67, 0x48, 0x00, 0x52, 0x11, 0x75,
	0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x61, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x4b, 0x0a, 0x10, 0x75, 0x69, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x67,
	0x6e, 0x6f, 0x72, 0x65, 0x18, 0xee, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x74,
	0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x49, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x75,
	0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x12, 0x58, 0x0a,
	0x17, 0x75, 0x69, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x67, 0x6e, 0x6f, 0x72,
	0x65, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0xef, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x49, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x48,
	0x00, 0x52, 0x14, 0x75, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x67, 0x6e, 0x6f, 0x72,
	0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x22, 0x62, 0x0a, 0x0d, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x10, 0x0a, 0x0e, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x63, 0x0a, 0x0f, 0x55, 0x6e, 0x69, 0x67, 0x6e,
	0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x6c, 0x69, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61,
	0x73, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x65, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x22, 0x12, 0x0a, 0x10,
	0x55, 0x6e, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x49, 0x0a, 0x10, 0x48, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x22, 0x13, 0x0a, 0x11, 0x48,
	0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x66, 0x0a, 0x12, 0x55, 0x6e, 0x68, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x19, 0x0a,
	0x08, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x70, 0x65, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x22, 0x15, 0x0a, 0x13, 0x55, 0x6e, 0x68, 0x69,
	0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x59, 0x0a, 0x0a, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61,
	0x6c, 0x69, 0x61, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x0d, 0x0a, 0x0b, 0x54, 0x61,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x60, 0x0a, 0x0c, 0x55, 0x6e, 0x74,
	0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c,
	0x69, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73,
	0x12, 0x19, 0x0a, 0x08, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x70, 0x65, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x22, 0x0f, 0x0a, 0x0d, 0x55,
	0x6e, 0x74, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x0a, 0x12,
	0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x15, 0x0a, 0x13, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x67, 0x0a,
	0x0b, 0x4d, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x70, 0x65, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x70, 0x65, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x0e, 0x0a, 0x0c, 0x4d, 0x75, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x0a, 0x0d, 0x55, 0x6e, 0x6d, 0x75, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x65, 0x65, 0x72, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x65, 0x65, 0x72, 0x4b,
	0x65, 0x79, 0x22, 0x10, 0x0a, 0x0e, 0x55, 0x6e, 0x6d, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x10, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x46, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xad,
	0x02, 0x0a, 0x0d, 0x57, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x36, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x64, 0x61, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x65, 0x65, 0x72,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x65, 0x65, 0x72,
	0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x6e, 0x72,
	0x65, 0x61, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x03, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0xb5,
	0x03, 0x0a, 0x0d, 0x57, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x36, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x64, 0x61, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x68, 0x72, 0x65,
	0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x74, 0x68, 0x72,
	0x65, 0x61, 0x64, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x65, 0x65, 0x72, 0x4b, 0x65, 0x79,
	0x12, 0x39, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x23, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x57, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73,
	0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x76,
	0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x57, 0x48, 0x49, 0x53, 0x50,
	0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x43, 0x45, 0x49, 0x56, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x57, 0x48, 0x49, 0x53, 0x50, 0x45, 0x52, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x45, 0x4e, 0x51, 0x55, 0x45, 0x55, 0x45, 0x44, 0x10, 0x01, 0x12,
	0x1b, 0x0a, 0x17, 0x57, 0x48, 0x49, 0x53, 0x50, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x45, 0x44, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14,
	0x57, 0x48, 0x49, 0x53, 0x50, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x46, 0x41,
	0x49, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x22, 0x4e, 0x0a, 0x19, 0x57, 0x68, 0x69, 0x73, 0x70, 0x65,
	0x72, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4b,
	0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x1c, 0x0a, 0x1a, 0x57, 0x68, 0x69, 0x73, 0x70, 0x65,
	0x72, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x4e, 0x0a, 0x0d, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x46, 0x69, 0x6c,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x11,
	0x0a, 0x0d, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x4e, 0x47, 0x10,
	0x01, 0x12, 0x11, 0x0a, 0x0d, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x47,
	0x49, 0x46, 0x10, 0x02, 0x2a, 0x48, 0x0a, 0x0a, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x53, 0x63, 0x61,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x4d, 0x4f, 0x54, 0x45, 0x5f, 0x53, 0x43, 0x41, 0x4c,
	0x45, 0x5f, 0x31, 0x58, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x4d, 0x4f, 0x54, 0x45, 0x5f,
	0x53, 0x43, 0x41, 0x4c, 0x45, 0x5f, 0x32, 0x58, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x4d,
	0x4f, 0x54, 0x45, 0x5f, 0x53, 0x43, 0x41, 0x4c, 0x45, 0x5f, 0x34, 0x58, 0x10, 0x02, 0x32, 0xfc,
	0x0f, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x46, 0x72, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x64, 0x12, 0x59, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x23, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x74, 0x72,
	0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x59, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x12, 0x23, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x0c, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x23, 0x2e, 0x73, 0x74,
	0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x24, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x12, 0x20, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0x22, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x74,
	0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x65, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x49, 0x63, 0x6f, 0x6e, 0x12, 0x27, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x49, 0x63, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e,
	0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x63, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x24, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d,
	0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x49, 0x63, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x63, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45,
	0x6d, 0x6f, 0x74, 0x65, 0x12, 0x22, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x6f, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d,
	0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x45, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a,
	0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x12, 0x22, 0x2e, 0x73,
	0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45,
	0x6d, 0x6f, 0x74, 0x65, 0x12, 0x22, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6d, 0x6f, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d,
	0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x45, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a,
	0x08, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x73, 0x74, 0x72, 0x69,
	0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6d,
	0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x74, 0x72,
	0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45,
	0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0a,
	0x4c, 0x69, 0x73, 0x74, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x21, 0x2e, 0x73, 0x74, 0x72,
	0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x45, 0x6d, 0x6f, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5f, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x12, 0x25, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x73, 0x74, 0x72,
	0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5f, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x12, 0x25, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x73, 0x74,
	0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x25, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x73,
	0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x12, 0x22, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x0d,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x12, 0x24, 0x2e,
	0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x09, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x12, 0x20, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x74, 0x72, 0x69,
	0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x09,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x12, 0x20, 0x2e, 0x73, 0x74, 0x72, 0x69,
	0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x74,
	0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50,
	0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x67, 0x12, 0x20, 0x2e, 0x73, 0x74,
	0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x47, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x54, 0x61, 0x67, 0x12, 0x1d, 0x2e, 0x73, 0x74, 0x72,
	0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x74, 0x72, 0x69,
	0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x08, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x61, 0x67, 0x73, 0x12, 0x1f, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x67, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x67, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0a, 0x53, 0x79, 0x6e, 0x63,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x21, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x74, 0x72, 0x69,
	0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xbb, 0x0c,
	0x0a, 0x0c, 0x43, 0x68, 0x61, 0x74, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x12, 0x55,
	0x0a, 0x0a, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x2e, 0x73,
	0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70,
	0x65, 0x6e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x68, 0x0a, 0x11, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53,
	0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x28, 0x2e, 0x73, 0x74, 0x72,
	0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x6e, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x53, 0x0a, 0x0a, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x75, 0x74, 0x65, 0x12, 0x21, 0x2e,
	0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x22, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x0c, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x6e,
	0x6d, 0x75, 0x74, 0x65, 0x12, 0x23, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x6e, 0x6d, 0x75,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x74, 0x72, 0x69,
	0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x55, 0x6e, 0x6d, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5c, 0x0a, 0x0d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x74, 0x65,
	0x12, 0x24, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x47, 0x65,
	0x74, 0x4d, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a,
	0x07, 0x57, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d,
	0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x68, 0x69, 0x73, 0x70, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d,
	0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x68, 0x69, 0x73, 0x70, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x0c, 0x4c, 0x69, 0x73,
	0x74, 0x57, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x73, 0x12, 0x23, 0x2e, 0x73, 0x74, 0x72, 0x69,
	0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57,
	0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24,
	0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x57, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x0d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x57, 0x68, 0x69,
	0x73, 0x70, 0x65, 0x72, 0x73, 0x12, 0x24, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x57, 0x68, 0x69, 0x73,
	0x70, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x74,
	0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74,
	0x63, 0x68, 0x57, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x30, 0x01, 0x12, 0x65, 0x0a, 0x10, 0x4d, 0x61, 0x72, 0x6b, 0x57, 0x68, 0x69, 0x73,
	0x70, 0x65, 0x72, 0x73, 0x52, 0x65, 0x61, 0x64, 0x12, 0x27, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d,
	0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x57, 0x68,
	0x69, 0x73, 0x70, 0x65, 0x72, 0x73, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x28, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x57, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x13, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x54, 0x68, 0x72, 0x65,
	0x61, 0x64, 0x12, 0x2a, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x68, 0x69, 0x73, 0x70, 0x65,
	0x72, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b,
	0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x54, 0x68, 0x72,
	0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x0b, 0x53,
	0x65, 0x74, 0x55, 0x49, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x22, 0x2e, 0x73, 0x74, 0x72,
	0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x55,
	0x49, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23,
	0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x74, 0x55, 0x49, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x0d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x55, 0x49, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x24, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x55, 0x49, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x74, 0x72,
	0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63,
	0x68, 0x55, 0x49, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x30, 0x01, 0x12, 0x47, 0x0a, 0x06, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x12, 0x1d, 0x2e,
	0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x67, 0x6e, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73,
	0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x67,
	0x6e, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x08,
	0x55, 0x6e, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x12, 0x1f, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d,
	0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x69, 0x67, 0x6e, 0x6f,
	0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x74, 0x72, 0x69,
	0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x69, 0x67, 0x6e,
	0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x09, 0x48,
	0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x20, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d,
	0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x69, 0x67, 0x68, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x74, 0x72,
	0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x69, 0x67, 0x68,
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a,
	0x0b, 0x55, 0x6e, 0x68, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x22, 0x2e, 0x73,
	0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e,
	0x68, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x6e, 0x68, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x12, 0x1a, 0x2e, 0x73,
	0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d,
	0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x05, 0x55, 0x6e, 0x74, 0x61, 0x67, 0x12, 0x1c,
	0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x6e, 0x74, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73,
	0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e,
	0x74, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xb6, 0x02, 0x0a, 0x04,
	0x43, 0x68, 0x61, 0x74, 0x12, 0x56, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x22, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x04,
	0x4d, 0x75, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x47, 0x0a, 0x06, 0x55, 0x6e, 0x6d, 0x75, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x73, 0x74, 0x72, 0x69,
	0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x6d, 0x75, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d,
	0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x6d, 0x75, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4d,
	0x75, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x32, 0x6f, 0x0a, 0x07, 0x57, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x12,
	0x64, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x29,
	0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x57, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x73, 0x74, 0x72, 0x69,
	0x6d, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x68, 0x69, 0x73, 0x70,
	0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x51, 0x0a, 0x15, 0x67, 0x67, 0x2e, 0x73, 0x74, 0x72, 0x69,
	0x6d, 0x73, 0x2e, 0x70, 0x70, 0x73, 0x70, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5a, 0x32,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4d, 0x65, 0x6d, 0x65, 0x4c,
	0x61, 0x62, 0x73, 0x2f, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61,
	0x70, 0x69, 0x73, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x68, 0x61, 0x74,
	0x76, 0x31, 0xba, 0x02, 0x03, 0x53, 0x43, 0x48, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chat_v1_chat_proto_rawDescOnce sync.Once
	file_chat_v1_chat_proto_rawDescData = file_chat_v1_chat_proto_rawDesc
)

func file_chat_v1_chat_proto_rawDescGZIP() []byte {
	file_chat_v1_chat_proto_rawDescOnce.Do(func() {
		file_chat_v1_chat_proto_rawDescData = protoimpl.X.CompressGZIP(file_chat_v1_chat_proto_rawDescData)
	})
	return file_chat_v1_chat_proto_rawDescData
}

var file_chat_v1_chat_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_chat_v1_chat_proto_msgTypes = make([]protoimpl.MessageInfo, 131)
var file_chat_v1_chat_proto_goTypes = []interface{}{
	(EmoteFileType)(0),                                // 0: strims.chat.v1.EmoteFileType
	(EmoteScale)(0),                                   // 1: strims.chat.v1.EmoteScale
	(UIConfig_ShowRemoved)(0),                         // 2: strims.chat.v1.UIConfig.ShowRemoved
	(UIConfig_UserPresenceIndicator)(0),               // 3: strims.chat.v1.UIConfig.UserPresenceIndicator
	(ListEmotesRequest_Part)(0),                       // 4: strims.chat.v1.ListEmotesRequest.Part
	(WhisperRecord_State)(0),                          // 5: strims.chat.v1.WhisperRecord.State
	(*ServerEvent)(nil),                               // 6: strims.chat.v1.ServerEvent
	(*Room)(nil),                                      // 7: strims.chat.v1.Room
	(*Server)(nil),                                    // 8: strims.chat.v1.Server
	(*ServerIcon)(nil),                                // 9: strims.chat.v1.ServerIcon
	(*EmoteImage)(nil),                                // 10: strims.chat.v1.EmoteImage
	(*EmoteEffect)(nil),                               // 11: strims.chat.v1.EmoteEffect
	(*EmoteContributor)(nil),                          // 12: strims.chat.v1.EmoteContributor
	(*Emote)(nil),                                     // 13: strims.chat.v1.Emote
	(*Modifier)(nil),                                  // 14: strims.chat.v1.Modifier
	(*Tag)(nil),                                       // 15: strims.chat.v1.Tag
	(*AssetBundle)(nil),                               // 16: strims.chat.v1.AssetBundle
	(*Message)(nil),                                   // 17: strims.chat.v1.Message
	(*Profile)(nil),                                   // 18: strims.chat.v1.Profile
	(*UIConfig)(nil),                                  // 19: strims.chat.v1.UIConfig
	(*UIConfigHighlight)(nil),                         // 20: strims.chat.v1.UIConfigHighlight
	(*UIConfigTag)(nil),                               // 21: strims.chat.v1.UIConfigTag
	(*UIConfigIgnore)(nil),                            // 22: strims.chat.v1.UIConfigIgnore
	(*CreateServerRequest)(nil),                       // 23: strims.chat.v1.CreateServerRequest
	(*CreateServerResponse)(nil),                      // 24: strims.chat.v1.CreateServerResponse
	(*UpdateServerRequest)(nil),                       // 25: strims.chat.v1.UpdateServerRequest
	(*UpdateServerResponse)(nil),                      // 26: strims.chat.v1.UpdateServerResponse
	(*DeleteServerRequest)(nil),                       // 27: strims.chat.v1.DeleteServerRequest
	(*DeleteServerResponse)(nil),                      // 28: strims.chat.v1.DeleteServerResponse
	(*GetServerRequest)(nil),                          // 29: strims.chat.v1.GetServerRequest
	(*GetServerResponse)(nil),                         // 30: strims.chat.v1.GetServerResponse
	(*ListServersRequest)(nil),                        // 31: strims.chat.v1.ListServersRequest
	(*ListServersResponse)(nil),                       // 32: strims.chat.v1.ListServersResponse
	(*UpdateServerIconRequest)(nil),                   // 33: strims.chat.v1.UpdateServerIconRequest
	(*UpdateServerIconResponse)(nil),                  // 34: strims.chat.v1.UpdateServerIconResponse
	(*GetServerIconRequest)(nil),                      // 35: strims.chat.v1.GetServerIconRequest
	(*GetServerIconResponse)(nil),                     // 36: strims.chat.v1.GetServerIconResponse
	(*CreateEmoteRequest)(nil),                        // 37: strims.chat.v1.CreateEmoteRequest
	(*CreateEmoteResponse)(nil),                       // 38: strims.chat.v1.CreateEmoteResponse
	(*UpdateEmoteRequest)(nil),                        // 39: strims.chat.v1.UpdateEmoteRequest
	(*UpdateEmoteResponse)(nil),                       // 40: strims.chat.v1.UpdateEmoteResponse
	(*DeleteEmoteRequest)(nil),                        // 41: strims.chat.v1.DeleteEmoteRequest
	(*DeleteEmoteResponse)(nil),                       // 42: strims.chat.v1.DeleteEmoteResponse
	(*GetEmoteRequest)(nil),                           // 43: strims.chat.v1.GetEmoteRequest
	(*GetEmoteResponse)(nil),                          // 44: strims.chat.v1.GetEmoteResponse
	(*ListEmotesRequest)(nil),                         // 45: strims.chat.v1.ListEmotesRequest
	(*ListEmotesResponse)(nil),                        // 46: strims.chat.v1.ListEmotesResponse
	(*CreateModifierRequest)(nil),                     // 47: strims.chat.v1.CreateModifierRequest
	(*CreateModifierResponse)(nil),                    // 48: strims.chat.v1.CreateModifierResponse
	(*UpdateModifierRequest)(nil),                     // 49: strims.chat.v1.UpdateModifierRequest
	(*UpdateModifierResponse)(nil),                    // 50: strims.chat.v1.UpdateModifierResponse
	(*DeleteModifierRequest)(nil),                     // 51: strims.chat.v1.DeleteModifierRequest
	(*DeleteModifierResponse)(nil),                    // 52: strims.chat.v1.DeleteModifierResponse
	(*GetModifierRequest)(nil),                        // 53: strims.chat.v1.GetModifierRequest
	(*GetModifierResponse)(nil),                       // 54: strims.chat.v1.GetModifierResponse
	(*ListModifiersRequest)(nil),                      // 55: strims.chat.v1.ListModifiersRequest
	(*ListModifiersResponse)(nil),                     // 56: strims.chat.v1.ListModifiersResponse
	(*CreateTagRequest)(nil),                          // 57: strims.chat.v1.CreateTagRequest
	(*CreateTagResponse)(nil),                         // 58: strims.chat.v1.CreateTagResponse
	(*UpdateTagRequest)(nil),                          // 59: strims.chat.v1.UpdateTagRequest
	(*UpdateTagResponse)(nil),                         // 60: strims.chat.v1.UpdateTagResponse
	(*DeleteTagRequest)(nil),                          // 61: strims.chat.v1.DeleteTagRequest
	(*DeleteTagResponse)(nil),                         // 62: strims.chat.v1.DeleteTagResponse
	(*GetTagRequest)(nil),                             // 63: strims.chat.v1.GetTagRequest
	(*GetTagResponse)(nil),                            // 64: strims.chat.v1.GetTagResponse
	(*ListTagsRequest)(nil),                           // 65: strims.chat.v1.ListTagsRequest
	(*ListTagsResponse)(nil),                          // 66: strims.chat.v1.ListTagsResponse
	(*SyncAssetsRequest)(nil),                         // 67: strims.chat.v1.SyncAssetsRequest
	(*SyncAssetsResponse)(nil),                        // 68: strims.chat.v1.SyncAssetsResponse
	(*OpenClientRequest)(nil),                         // 69: strims.chat.v1.OpenClientRequest
	(*OpenClientResponse)(nil),                        // 70: strims.chat.v1.OpenClientResponse
	(*ClientSendMessageRequest)(nil),                  // 71: strims.chat.v1.ClientSendMessageRequest
	(*ClientSendMessageResponse)(nil),                 // 72: strims.chat.v1.ClientSendMessageResponse
	(*ClientMuteRequest)(nil),                         // 73: strims.chat.v1.ClientMuteRequest
	(*ClientMuteResponse)(nil),                        // 74: strims.chat.v1.ClientMuteResponse
	(*ClientUnmuteRequest)(nil),                       // 75: strims.chat.v1.ClientUnmuteRequest
	(*ClientUnmuteResponse)(nil),                      // 76: strims.chat.v1.ClientUnmuteResponse
	(*ClientGetMuteRequest)(nil),                      // 77: strims.chat.v1.ClientGetMuteRequest
	(*ClientGetMuteResponse)(nil),                     // 78: strims.chat.v1.ClientGetMuteResponse
	(*WhisperRequest)(nil),                            // 79: strims.chat.v1.WhisperRequest
	(*WhisperResponse)(nil),                           // 80: strims.chat.v1.WhisperResponse
	(*ListWhispersRequest)(nil),                       // 81: strims.chat.v1.ListWhispersRequest
	(*ListWhispersResponse)(nil),                      // 82: strims.chat.v1.ListWhispersResponse
	(*WatchWhispersRequest)(nil),                      // 83: strims.chat.v1.WatchWhispersRequest
	(*WatchWhispersResponse)(nil),                     // 84: strims.chat.v1.WatchWhispersResponse
	(*MarkWhispersReadRequest)(nil),                   // 85: strims.chat.v1.MarkWhispersReadRequest
	(*MarkWhispersReadResponse)(nil),                  // 86: strims.chat.v1.MarkWhispersReadResponse
	(*DeleteWhisperThreadRequest)(nil),                // 87: strims.chat.v1.DeleteWhisperThreadRequest
	(*DeleteWhisperThreadResponse)(nil),               // 88: strims.chat.v1.DeleteWhisperThreadResponse
	(*SetUIConfigRequest)(nil),                        // 89: strims.chat.v1.SetUIConfigRequest
	(*SetUIConfigResponse)(nil),                       // 90: strims.chat.v1.SetUIConfigResponse
	(*WatchUIConfigRequest)(nil),                      // 91: strims.chat.v1.WatchUIConfigRequest
	(*WatchUIConfigResponse)(nil),                     // 92: strims.chat.v1.WatchUIConfigResponse
	(*IgnoreRequest)(nil),                             // 93: strims.chat.v1.IgnoreRequest
	(*IgnoreResponse)(nil),                            // 94: strims.chat.v1.IgnoreResponse
	(*UnignoreRequest)(nil),                           // 95: strims.chat.v1.UnignoreRequest
	(*UnignoreResponse)(nil),                          // 96: strims.chat.v1.UnignoreResponse
	(*HighlightRequest)(nil),                          // 97: strims.chat.v1.HighlightRequest
	(*HighlightResponse)(nil),                         // 98: strims.chat.v1.HighlightResponse
	(*UnhighlightRequest)(nil),                        // 99: strims.chat.v1.UnhighlightRequest
	(*UnhighlightResponse)(nil),                       // 100: strims.chat.v1.UnhighlightResponse
	(*TagRequest)(nil),                                // 101: strims.chat.v1.TagRequest
	(*TagResponse)(nil),                               // 102: strims.chat.v1.TagResponse
	(*UntagRequest)(nil),                              // 103: strims.chat.v1.UntagRequest
	(*UntagResponse)(nil),                             // 104: strims.chat.v1.UntagResponse
	(*SendMessageRequest)(nil),                        // 105: strims.chat.v1.SendMessageRequest
	(*SendMessageResponse)(nil),                       // 106: strims.chat.v1.SendMessageResponse
	(*MuteRequest)(nil),                               // 107: strims.chat.v1.MuteRequest
	(*MuteResponse)(nil),                              // 108: strims.chat.v1.MuteResponse
	(*UnmuteRequest)(nil),                             // 109: strims.chat.v1.UnmuteRequest
	(*UnmuteResponse)(nil),                            // 110: strims.chat.v1.UnmuteResponse
	(*GetMuteRequest)(nil),                            // 111: strims.chat.v1.GetMuteRequest
	(*GetMuteResponse)(nil),                           // 112: strims.chat.v1.GetMuteResponse
	(*WhisperThread)(nil),                             // 113: strims.chat.v1.WhisperThread
	(*WhisperRecord)(nil),                             // 114: strims.chat.v1.WhisperRecord
	(*WhisperSendMessageRequest)(nil),                 // 115: strims.chat.v1.WhisperSendMessageRequest
	(*WhisperSendMessageResponse)(nil),                // 116: strims.chat.v1.WhisperSendMessageResponse
	(*EmoteEffect_CustomCSS)(nil),                     // 117: strims.chat.v1.EmoteEffect.CustomCSS
	(*EmoteEffect_SpriteAnimation)(nil),               // 118: strims.chat.v1.EmoteEffect.SpriteAnimation
	(*EmoteEffect_DefaultModifiers)(nil),              // 119: strims.chat.v1.EmoteEffect.DefaultModifiers
	(*Message_Entities)(nil),                          // 120: strims.chat.v1.Message.Entities
	(*Message_DirectoryRef)(nil),                      // 121: strims.chat.v1.Message.DirectoryRef
	(*Message_Entities_Bounds)(nil),                   // 122: strims.chat.v1.Message.Entities.Bounds
	(*Message_Entities_Link)(nil),                     // 123: strims.chat.v1.Message.Entities.Link
	(*Message_Entities_Emote)(nil),                    // 124: strims.chat.v1.Message.Entities.Emote
	(*Message_Entities_Emoji)(nil),                    // 125: strims.chat.v1.Message.Entities.Emoji
	(*Message_Entities_Nick)(nil),                     // 126: strims.chat.v1.Message.Entities.Nick
	(*Message_Entities_Tag)(nil),                      // 127: strims.chat.v1.Message.Entities.Tag
	(*Message_Entities_CodeBlock)(nil),                // 128: strims.chat.v1.Message.Entities.CodeBlock
	(*Message_Entities_Spoiler)(nil),                  // 129: strims.chat.v1.Message.Entities.Spoiler
	(*Message_Entities_GenericEntity)(nil),            // 130: strims.chat.v1.Message.Entities.GenericEntity
	(*Profile_Mute)(nil),                              // 131: strims.chat.v1.Profile.Mute
	(*UIConfig_SoundFile)(nil),                        // 132: strims.chat.v1.UIConfig.SoundFile
	(*OpenClientResponse_Open)(nil),                   // 133: strims.chat.v1.OpenClientResponse.Open
	(*OpenClientResponse_ServerEvents)(nil),           // 134: strims.chat.v1.OpenClientResponse.ServerEvents
	(*WatchWhispersResponse_WhisperThreadDelete)(nil), // 135: strims.chat.v1.WatchWhispersResponse.WhisperThreadDelete
	(*WatchWhispersResponse_WhisperDelete)(nil),       // 136: strims.chat.v1.WatchWhispersResponse.WhisperDelete
	(*key.Key)(nil),                                   // 137: strims.type.Key
	(*image.Image)(nil),                               // 138: strims.type.Image
	(*v1.VersionVector)(nil),                          // 139: strims.dao.v1.VersionVector
	(*directory.Listing)(nil),                         // 140: strims.network.v1.directory.Listing
}
var file_chat_v1_chat_proto_depIdxs = []int32{
	17,  // 0: strims.chat.v1.ServerEvent.message:type_name -> strims.chat.v1.Message
	137, // 1: strims.chat.v1.Server.key:type_name -> strims.type.Key
	7,   // 2: strims.chat.v1.Server.room:type_name -> strims.chat.v1.Room
	138, // 3: strims.chat.v1.ServerIcon.image:type_name -> strims.type.Image
	0,   // 4: strims.chat.v1.EmoteImage.file_type:type_name -> strims.chat.v1.EmoteFileType
	1,   // 5: strims.chat.v1.EmoteImage.scale:type_name -> strims.chat.v1.EmoteScale
	117, // 6: strims.chat.v1.EmoteEffect.custom_css:type_name -> strims.chat.v1.EmoteEffect.CustomCSS
	118, // 7: strims.chat.v1.EmoteEffect.sprite_animation:type_name -> strims.chat.v1.EmoteEffect.SpriteAnimation
	119, // 8: strims.chat.v1.EmoteEffect.default_modifiers:type_name -> strims.chat.v1.EmoteEffect.DefaultModifiers
	10,  // 9: strims.chat.v1.Emote.images:type_name -> strims.chat.v1.EmoteImage
	11,  // 10: strims.chat.v1.Emote.effects:type_name -> strims.chat.v1.EmoteEffect
	12,  // 11: strims.chat.v1.Emote.contributor:type_name -> strims.chat.v1.EmoteContributor
	7,   // 12: strims.chat.v1.AssetBundle.room:type_name -> strims.chat.v1.Room
	13,  // 13: strims.chat.v1.AssetBundle.emotes:type_name -> strims.chat.v1.Emote
	14,  // 14: strims.chat.v1.AssetBundle.modifiers:type_name -> strims.chat.v1.Modifier
	15,  // 15: strims.chat.v1.AssetBundle.tags:type_name -> strims.chat.v1.Tag
	138, // 16: strims.chat.v1.AssetBundle.icon:type_name -> strims.type.Image
	120, // 17: strims.chat.v1.Message.entities:type_name -> strims.chat.v1.Message.Entities
	121, // 18: strims.chat.v1.Message.viewed_listing:type_name -> strims.chat.v1.Message.DirectoryRef
	131, // 19: strims.chat.v1.Profile.mutes:type_name -> strims.chat.v1.Profile.Mute
	132, // 20: strims.chat.v1.UIConfig.notification_sound_file:type_name -> strims.chat.v1.UIConfig.SoundFile
	2,   // 21: strims.chat.v1.UIConfig.show_removed:type_name -> strims.chat.v1.UIConfig.ShowRemoved
	3,   // 22: strims.chat.v1.UIConfig.user_presence_indicator:type_name -> strims.chat.v1.UIConfig.UserPresenceIndicator
	139, // 23: strims.chat.v1.UIConfigHighlight.version:type_name -> strims.dao.v1.VersionVector
	139, // 24: strims.chat.v1.UIConfigTag.version:type_name -> strims.dao.v1.VersionVector
	139, // 25: strims.chat.v1.UIConfigIgnore.version:type_name -> strims.dao.v1.VersionVector
	7,   // 26: strims.chat.v1.CreateServerRequest.room:type_name -> strims.chat.v1.Room
	8,   // 27: strims.chat.v1.CreateServerResponse.server:type_name -> strims.chat.v1.Server
	7,   // 28: strims.chat.v1.UpdateServerRequest.room:type_name -> strims.chat.v1.Room
	8,   // 29: strims.chat.v1.UpdateServerResponse.server:type_name -> strims.chat.v1.Server
	8,   // 30: strims.chat.v1.GetServerResponse.server:type_name -> strims.chat.v1.Server
	8,   // 31: strims.chat.v1.ListServersResponse.servers:type_name -> strims.chat.v1.Server
	138, // 32: strims.chat.v1.UpdateServerIconRequest.image:type_name -> strims.type.Image
	9,   // 33: strims.chat.v1.UpdateServerIconResponse.server_icon:type_name -> strims.chat.v1.ServerIcon
	9,   // 34: strims.chat.v1.GetServerIconResponse.server_icon:type_name -> strims.chat.v1.ServerIcon
	10,  // 35: strims.chat.v1.CreateEmoteRequest.images:type_name -> strims.chat.v1.EmoteImage
	11,  // 36: strims.chat.v1.CreateEmoteRequest.effects:type_name -> strims.chat.v1.EmoteEffect
	12,  // 37: strims.chat.v1.CreateEmoteRequest.contributor:type_name -> strims.chat.v1.EmoteContributor
	13,  // 38: strims.chat.v1.CreateEmoteResponse.emote:type_name -> strims.chat.v1.Emote
	10,  // 39: strims.chat.v1.UpdateEmoteRequest.images:type_name -> strims.chat.v1.EmoteImage
	11,  // 40: strims.chat.v1.UpdateEmoteRequest.effects:type_name -> strims.chat.v1.EmoteEffect
	12,  // 41: strims.chat.v1.UpdateEmoteRequest.contributor:type_name -> strims.chat.v1.EmoteContributor
	13,  // 42: strims.chat.v1.UpdateEmoteResponse.emote:type_name -> strims.chat.v1.Emote
	13,  // 43: strims.chat.v1.GetEmoteResponse.emote:type_name -> strims.chat.v1.Emote
	4,   // 44: strims.chat.v1.ListEmotesRequest.parts:type_name -> strims.chat.v1.ListEmotesRequest.Part
	13,  // 45: strims.chat.v1.ListEmotesResponse.emotes:type_name -> strims.chat.v1.Emote
	14,  // 46: strims.chat.v1.CreateModifierResponse.modifier:type_name -> strims.chat.v1.Modifier
	14,  // 47: strims.chat.v1.UpdateModifierResponse.modifier:type_name -> strims.chat.v1.Modifier
	14,  // 48: strims.chat.v1.GetModifierResponse.modifier:type_name -> strims.chat.v1.Modifier
	14,  // 49: strims.chat.v1.ListModifiersResponse.modifiers:type_name -> strims.chat.v1.Modifier
	15,  // 50: strims.chat.v1.CreateTagResponse.tag:type_name -> strims.chat.v1.Tag
	15,  // 51: strims.chat.v1.UpdateTagResponse.tag:type_name -> strims.chat.v1.Tag
	15,  // 52: strims.chat.v1.GetTagResponse.tag:type_name -> strims.chat.v1.Tag
	15,  // 53: strims.chat.v1.ListTagsResponse.tags:type_name -> strims.chat.v1.Tag
	133, // 54: strims.chat.v1.OpenClientResponse.open:type_name -> strims.chat.v1.OpenClientResponse.Open
	134, // 55: strims.chat.v1.OpenClientResponse.server_events:type_name -> strims.chat.v1.OpenClientResponse.ServerEvents
	16,  // 56: strims.chat.v1.OpenClientResponse.asset_bundle:type_name -> strims.chat.v1.AssetBundle
	113, // 57: strims.chat.v1.ListWhispersResponse.thread:type_name -> strims.chat.v1.WhisperThread
	114, // 58: strims.chat.v1.ListWhispersResponse.whispers:type_name -> strims.chat.v1.WhisperRecord
	113, // 59: strims.chat.v1.WatchWhispersResponse.thread_update:type_name -> strims.chat.v1.WhisperThread
	135, // 60: strims.chat.v1.WatchWhispersResponse.thread_delete:type_name -> strims.chat.v1.WatchWhispersResponse.WhisperThreadDelete
	114, // 61: strims.chat.v1.WatchWhispersResponse.whisper_update:type_name -> strims.chat.v1.WhisperRecord
	136, // 62: strims.chat.v1.WatchWhispersResponse.whisper_delete:type_name -> strims.chat.v1.WatchWhispersResponse.WhisperDelete
	19,  // 63: strims.chat.v1.SetUIConfigRequest.ui_config:type_name -> strims.chat.v1.UIConfig
	19,  // 64: strims.chat.v1.WatchUIConfigResponse.ui_config:type_name -> strims.chat.v1.UIConfig
	20,  // 65: strims.chat.v1.WatchUIConfigResponse.ui_config_highlight:type_name -> strims.chat.v1.UIConfigHighlight
	20,  // 66: strims.chat.v1.WatchUIConfigResponse.ui_config_highlight_delete:type_name -> strims.chat.v1.UIConfigHighlight
	21,  // 67: strims.chat.v1.WatchUIConfigResponse.ui_config_tag:type_name -> strims.chat.v1.UIConfigTag
	21,  // 68: strims.chat.v1.WatchUIConfigResponse.ui_config_tag_delete:type_name -> strims.chat.v1.UIConfigTag
	22,  // 69: strims.chat.v1.WatchUIConfigResponse.ui_config_ignore:type_name -> strims.chat.v1.UIConfigIgnore
	22,  // 70: strims.chat.v1.WatchUIConfigResponse.ui_config_ignore_delete:type_name -> strims.chat.v1.UIConfigIgnore
	139, // 71: strims.chat.v1.WhisperThread.version:type_name -> strims.dao.v1.VersionVector
	139, // 72: strims.chat.v1.WhisperRecord.version:type_name -> strims.dao.v1.VersionVector
	5,   // 73: strims.chat.v1.WhisperRecord.state:type_name -> strims.chat.v1.WhisperRecord.State
	17,  // 74: strims.chat.v1.WhisperRecord.message:type_name -> strims.chat.v1.Message
	123, // 75: strims.chat.v1.Message.Entities.links:type_name -> strims.chat.v1.Message.Entities.Link
	124, // 76: strims.chat.v1.Message.Entities.emotes:type_name -> strims.chat.v1.Message.Entities.Emote
	125, // 77: strims.chat.v1.Message.Entities.emojis:type_name -> strims.chat.v1.Message.Entities.Emoji
	126, // 78: strims.chat.v1.Message.Entities.nicks:type_name -> strims.chat.v1.Message.Entities.Nick
	127, // 79: strims.chat.v1.Message.Entities.tags:type_name -> strims.chat.v1.Message.Entities.Tag
	128, // 80: strims.chat.v1.Message.Entities.code_blocks:type_name -> strims.chat.v1.Message.Entities.CodeBlock
	129, // 81: strims.chat.v1.Message.Entities.spoilers:type_name -> strims.chat.v1.Message.Entities.Spoiler
	130, // 82: strims.chat.v1.Message.Entities.green_text:type_name -> strims.chat.v1.Message.Entities.GenericEntity
	130, // 83: strims.chat.v1.Message.Entities.self_message:type_name -> strims.chat.v1.Message.Entities.GenericEntity
	140, // 84: strims.chat.v1.Message.DirectoryRef.listing:type_name -> strims.network.v1.directory.Listing
	122, // 85: strims.chat.v1.Message.Entities.Link.bounds:type_name -> strims.chat.v1.Message.Entities.Bounds
	122, // 86: strims.chat.v1.Message.Entities.Emote.bounds:type_name -> strims.chat.v1.Message.Entities.Bounds
	122, // 87: strims.chat.v1.Message.Entities.Emoji.bounds:type_name -> strims.chat.v1.Message.Entities.Bounds
	122, // 88: strims.chat.v1.Message.Entities.Nick.bounds:type_name -> strims.chat.v1.Message.Entities.Bounds
	121, // 89: strims.chat.v1.Message.Entities.Nick.viewed_listing:type_name -> strims.chat.v1.Message.DirectoryRef
	122, // 90: strims.chat.v1.Message.Entities.Tag.bounds:type_name -> strims.chat.v1.Message.Entities.Bounds
	122, // 91: strims.chat.v1.Message.Entities.CodeBlock.bounds:type_name -> strims.chat.v1.Message.Entities.Bounds
	122, // 92: strims.chat.v1.Message.Entities.Spoiler.bounds:type_name -> strims.chat.v1.Message.Entities.Bounds
	122, // 93: strims.chat.v1.Message.Entities.GenericEntity.bounds:type_name -> strims.chat.v1.Message.Entities.Bounds
	6,   // 94: strims.chat.v1.OpenClientResponse.ServerEvents.events:type_name -> strims.chat.v1.ServerEvent
	23,  // 95: strims.chat.v1.ChatServerFrontend.CreateServer:input_type -> strims.chat.v1.CreateServerRequest
	25,  // 96: strims.chat.v1.ChatServerFrontend.UpdateServer:input_type -> strims.chat.v1.UpdateServerRequest
	27,  // 97: strims.chat.v1.ChatServerFrontend.DeleteServer:input_type -> strims.chat.v1.DeleteServerRequest
	29,  // 98: strims.chat.v1.ChatServerFrontend.GetServer:input_type -> strims.chat.v1.GetServerRequest
	31,  // 99: strims.chat.v1.ChatServerFrontend.ListServers:input_type -> strims.chat.v1.ListServersRequest
	33,  // 100: strims.chat.v1.ChatServerFrontend.UpdateServerIcon:input_type -> strims.chat.v1.UpdateServerIconRequest
	35,  // 101: strims.chat.v1.ChatServerFrontend.GetServerIcon:input_type -> strims.chat.v1.GetServerIconRequest
	37,  // 102: strims.chat.v1.ChatServerFrontend.CreateEmote:input_type -> strims.chat.v1.CreateEmoteRequest
	39,  // 103: strims.chat.v1.ChatServerFrontend.UpdateEmote:input_type -> strims.chat.v1.UpdateEmoteRequest
	41,  // 104: strims.chat.v1.ChatServerFrontend.DeleteEmote:input_type -> strims.chat.v1.DeleteEmoteRequest
	43,  // 105: strims.chat.v1.ChatServerFrontend.GetEmote:input_type -> strims.chat.v1.GetEmoteRequest
	45,  // 106: strims.chat.v1.ChatServerFrontend.ListEmotes:input_type -> strims.chat.v1.ListEmotesRequest
	47,  // 107: strims.chat.v1.ChatServerFrontend.CreateModifier:input_type -> strims.chat.v1.CreateModifierRequest
	49,  // 108: strims.chat.v1.ChatServerFrontend.UpdateModifier:input_type -> strims.chat.v1.UpdateModifierRequest
	51,  // 109: strims.chat.v1.ChatServerFrontend.DeleteModifier:input_type -> strims.chat.v1.DeleteModifierRequest
	53,  // 110: strims.chat.v1.ChatServerFrontend.GetModifier:input_type -> strims.chat.v1.GetModifierRequest
	55,  // 111: strims.chat.v1.ChatServerFrontend.ListModifiers:input_type -> strims.chat.v1.ListModifiersRequest
	57,  // 112: strims.chat.v1.ChatServerFrontend.CreateTag:input_type -> strims.chat.v1.CreateTagRequest
	59,  // 113: strims.chat.v1.ChatServerFrontend.UpdateTag:input_type -> strims.chat.v1.UpdateTagRequest
	61,  // 114: strims.chat.v1.ChatServerFrontend.DeleteTag:input_type -> strims.chat.v1.DeleteTagRequest
	63,  // 115: strims.chat.v1.ChatServerFrontend.GetTag:input_type -> strims.chat.v1.GetTagRequest
	65,  // 116: strims.chat.v1.ChatServerFrontend.ListTags:input_type -> strims.chat.v1.ListTagsRequest
	67,  // 117: strims.chat.v1.ChatServerFrontend.SyncAssets:input_type -> strims.chat.v1.SyncAssetsRequest
	69,  // 118: strims.chat.v1.ChatFrontend.OpenClient:input_type -> strims.chat.v1.OpenClientRequest
	71,  // 119: strims.chat.v1.ChatFrontend.ClientSendMessage:input_type -> strims.chat.v1.ClientSendMessageRequest
	73,  // 120: strims.chat.v1.ChatFrontend.ClientMute:input_type -> strims.chat.v1.ClientMuteRequest
	75,  // 121: strims.chat.v1.ChatFrontend.ClientUnmute:input_type -> strims.chat.v1.ClientUnmuteRequest
	77,  // 122: strims.chat.v1.ChatFrontend.ClientGetMute:input_type -> strims.chat.v1.ClientGetMuteRequest
	79,  // 123: strims.chat.v1.ChatFrontend.Whisper:input_type -> strims.chat.v1.WhisperRequest
	81,  // 124: strims.chat.v1.ChatFrontend.ListWhispers:input_type -> strims.chat.v1.ListWhispersRequest
	83,  // 125: strims.chat.v1.ChatFrontend.WatchWhispers:input_type -> strims.chat.v1.WatchWhispersRequest
	85,  // 126: strims.chat.v1.ChatFrontend.MarkWhispersRead:input_type -> strims.chat.v1.MarkWhispersReadRequest
	87,  // 127: strims.chat.v1.ChatFrontend.DeleteWhisperThread:input_type -> strims.chat.v1.DeleteWhisperThreadRequest
	89,  // 128: strims.chat.v1.ChatFrontend.SetUIConfig:input_type -> strims.chat.v1.SetUIConfigRequest
	91,  // 129: strims.chat.v1.ChatFrontend.WatchUIConfig:input_type -> strims.chat.v1.WatchUIConfigRequest
	93,  // 130: strims.chat.v1.ChatFrontend.Ignore:input_type -> strims.chat.v1.IgnoreRequest
	95,  // 131: strims.chat.v1.ChatFrontend.Unignore:input_type -> strims.chat.v1.UnignoreRequest
	97,  // 132: strims.chat.v1.ChatFrontend.Highlight:input_type -> strims.chat.v1.HighlightRequest
	99,  // 133: strims.chat.v1.ChatFrontend.Unhighlight:input_type -> strims.chat.v1.UnhighlightRequest
	101, // 134: strims.chat.v1.ChatFrontend.Tag:input_type -> strims.chat.v1.TagRequest
	103, // 135: strims.chat.v1.ChatFrontend.Untag:input_type -> strims.chat.v1.UntagRequest
	105, // 136: strims.chat.v1.Chat.SendMessage:input_type -> strims.chat.v1.SendMessageRequest
	107, // 137: strims.chat.v1.Chat.Mute:input_type -> strims.chat.v1.MuteRequest
	109, // 138: strims.chat.v1.Chat.Unmute:input_type -> strims.chat.v1.UnmuteRequest
	111, // 139: strims.chat.v1.Chat.GetMute:input_type -> strims.chat.v1.GetMuteRequest
	115, // 140: strims.chat.v1.Whisper.SendMessage:input_type -> strims.chat.v1.WhisperSendMessageRequest
	24,  // 141: strims.chat.v1.ChatServerFrontend.CreateServer:output_type -> strims.chat.v1.CreateServerResponse
	26,  // 142: strims.chat.v1.ChatServerFrontend.UpdateServer:output_type -> strims.chat.v1.UpdateServerResponse
	28,  // 143: strims.chat.v1.ChatServerFrontend.DeleteServer:output_type -> strims.chat.v1.DeleteServerResponse
	30,  // 144: strims.chat.v1.ChatServerFrontend.GetServer:output_type -> strims.chat.v1.GetServerResponse
	32,  // 145: strims.chat.v1.ChatServerFrontend.ListServers:output_type -> strims.chat.v1.ListServersResponse
	34,  // 146: strims.chat.v1.ChatServerFrontend.UpdateServerIcon:output_type -> strims.chat.v1.UpdateServerIconResponse
	36,  // 147: strims.chat.v1.ChatServerFrontend.GetServerIcon:output_type -> strims.chat.v1.GetServerIconResponse
	38,  // 148: strims.chat.v1.ChatServerFrontend.CreateEmote:output_type -> strims.chat.v1.CreateEmoteResponse
	40,  // 149: strims.chat.v1.ChatServerFrontend.UpdateEmote:output_type -> strims.chat.v1.UpdateEmoteResponse
	42,  // 150: strims.chat.v1.ChatServerFrontend.DeleteEmote:output_type -> strims.chat.v1.DeleteEmoteResponse
	44,  // 151: strims.chat.v1.ChatServerFrontend.GetEmote:output_type -> strims.chat.v1.GetEmoteResponse
	46,  // 152: strims.chat.v1.ChatServerFrontend.ListEmotes:output_type -> strims.chat.v1.ListEmotesResponse
	48,  // 153: strims.chat.v1.ChatServerFrontend.CreateModifier:output_type -> strims.chat.v1.CreateModifierResponse
	50,  // 154: strims.chat.v1.ChatServerFrontend.UpdateModifier:output_type -> strims.chat.v1.UpdateModifierResponse
	52,  // 155: strims.chat.v1.ChatServerFrontend.DeleteModifier:output_type -> strims.chat.v1.DeleteModifierResponse
	54,  // 156: strims.chat.v1.ChatServerFrontend.GetModifier:output_type -> strims.chat.v1.GetModifierResponse
	56,  // 157: strims.chat.v1.ChatServerFrontend.ListModifiers:output_type -> strims.chat.v1.ListModifiersResponse
	58,  // 158: strims.chat.v1.ChatServerFrontend.CreateTag:output_type -> strims.chat.v1.CreateTagResponse
	60,  // 159: strims.chat.v1.ChatServerFrontend.UpdateTag:output_type -> strims.chat.v1.UpdateTagResponse
	62,  // 160: strims.chat.v1.ChatServerFrontend.DeleteTag:output_type -> strims.chat.v1.DeleteTagResponse
	64,  // 161: strims.chat.v1.ChatServerFrontend.GetTag:output_type -> strims.chat.v1.GetTagResponse
	66,  // 162: strims.chat.v1.ChatServerFrontend.ListTags:output_type -> strims.chat.v1.ListTagsResponse
	68,  // 163: strims.chat.v1.ChatServerFrontend.SyncAssets:output_type -> strims.chat.v1.SyncAssetsResponse
	70,  // 164: strims.chat.v1.ChatFrontend.OpenClient:output_type -> strims.chat.v1.OpenClientResponse
	72,  // 165: strims.chat.v1.ChatFrontend.ClientSendMessage:output_type -> strims.chat.v1.ClientSendMessageResponse
	74,  // 166: strims.chat.v1.ChatFrontend.ClientMute:output_type -> strims.chat.v1.ClientMuteResponse
	76,  // 167: strims.chat.v1.ChatFrontend.ClientUnmute:output_type -> strims.chat.v1.ClientUnmuteResponse
	78,  // 168: strims.chat.v1.ChatFrontend.ClientGetMute:output_type -> strims.chat.v1.ClientGetMuteResponse
	80,  // 169: strims.chat.v1.ChatFrontend.Whisper:output_type -> strims.chat.v1.WhisperResponse
	82,  // 170: strims.chat.v1.ChatFrontend.ListWhispers:output_type -> strims.chat.v1.ListWhispersResponse
	84,  // 171: strims.chat.v1.ChatFrontend.WatchWhispers:output_type -> strims.chat.v1.WatchWhispersResponse
	86,  // 172: strims.chat.v1.ChatFrontend.MarkWhispersRead:output_type -> strims.chat.v1.MarkWhispersReadResponse
	88,  // 173: strims.chat.v1.ChatFrontend.DeleteWhisperThread:output_type -> strims.chat.v1.DeleteWhisperThreadResponse
	90,  // 174: strims.chat.v1.ChatFrontend.SetUIConfig:output_type -> strims.chat.v1.SetUIConfigResponse
	92,  // 175: strims.chat.v1.ChatFrontend.WatchUIConfig:output_type -> strims.chat.v1.WatchUIConfigResponse
	94,  // 176: strims.chat.v1.ChatFrontend.Ignore:output_type -> strims.chat.v1.IgnoreResponse
	96,  // 177: strims.chat.v1.ChatFrontend.Unignore:output_type -> strims.chat.v1.UnignoreResponse
	98,  // 178: strims.chat.v1.ChatFrontend.Highlight:output_type -> strims.chat.v1.HighlightResponse
	100, // 179: strims.chat.v1.ChatFrontend.Unhighlight:output_type -> strims.chat.v1.UnhighlightResponse
	102, // 180: strims.chat.v1.ChatFrontend.Tag:output_type -> strims.chat.v1.TagResponse
	104, // 181: strims.chat.v1.ChatFrontend.Untag:output_type -> strims.chat.v1.UntagResponse
	106, // 182: strims.chat.v1.Chat.SendMessage:output_type -> strims.chat.v1.SendMessageResponse
	108, // 183: strims.chat.v1.Chat.Mute:output_type -> strims.chat.v1.MuteResponse
	110, // 184: strims.chat.v1.Chat.Unmute:output_type -> strims.chat.v1.UnmuteResponse
	112, // 185: strims.chat.v1.Chat.GetMute:output_type -> strims.chat.v1.GetMuteResponse
	116, // 186: strims.chat.v1.Whisper.SendMessage:output_type -> strims.chat.v1.WhisperSendMessageResponse
	141, // [141:187] is the sub-list for method output_type
	95,  // [95:141] is the sub-list for method input_type
	95,  // [95:95] is the sub-list for extension type_name
	95,  // [95:95] is the sub-list for extension extendee
	0,   // [0:95] is the sub-list for field type_name
}

func init() { file_chat_v1_chat_proto_init() }
func file_chat_v1_chat_proto_init() {
	if File_chat_v1_chat_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_chat_v1_chat_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Room); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Server); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerIcon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmoteImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmoteEffect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmoteContributor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Emote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Modifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetBundle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Profile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UIConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UIConfigHighlight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UIConfigTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UIConfigIgnore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateServerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteServerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServerIconRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServerIconResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerIconRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerIconResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEmoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEmoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEmoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEmoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteEmoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteEmoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEmoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEmoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEmotesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEmotesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateModifierRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateModifierResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateModifierRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateModifierResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteModifierRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteModifierResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetModifierRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetModifierResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListModifiersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListModifiersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTagResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTagResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTagResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTagResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTagsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTagsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncAssetsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncAssetsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenClientRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenClientResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientSendMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientSendMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMuteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMuteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientUnmuteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientUnmuteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientGetMuteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientGetMuteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhisperRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhisperResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWhispersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWhispersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchWhispersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchWhispersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkWhispersReadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkWhispersReadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteWhisperThreadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteWhisperThreadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUIConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUIConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchUIConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchUIConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IgnoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IgnoreResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnignoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnignoreResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HighlightRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HighlightResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnhighlightRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnhighlightResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UntagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UntagResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MuteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MuteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnmuteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnmuteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMuteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMuteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhisperThread); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhisperRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhisperSendMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhisperSendMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmoteEffect_CustomCSS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmoteEffect_SpriteAnimation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmoteEffect_DefaultModifiers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_Entities); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_DirectoryRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_Entities_Bounds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_Entities_Link); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_Entities_Emote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_Entities_Emoji); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_Entities_Nick); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_Entities_Tag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_Entities_CodeBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_Entities_Spoiler); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_Entities_GenericEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Profile_Mute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UIConfig_SoundFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenClientResponse_Open); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenClientResponse_ServerEvents); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchWhispersResponse_WhisperThreadDelete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_v1_chat_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchWhispersResponse_WhisperDelete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_chat_v1_chat_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ServerEvent_Message)(nil),
	}
	file_chat_v1_chat_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*EmoteEffect_CustomCss)(nil),
		(*EmoteEffect_SpriteAnimation_)(nil),
		(*EmoteEffect_DefaultModifiers_)(nil),
	}
	file_chat_v1_chat_proto_msgTypes[64].OneofWrappers = []interface{}{
		(*OpenClientResponse_Open_)(nil),
		(*OpenClientResponse_ServerEvents_)(nil),
		(*OpenClientResponse_AssetBundle)(nil),
	}
	file_chat_v1_chat_proto_msgTypes[78].OneofWrappers = []interface{}{
		(*WatchWhispersResponse_ThreadUpdate)(nil),
		(*WatchWhispersResponse_ThreadDelete)(nil),
		(*WatchWhispersResponse_WhisperUpdate)(nil),
		(*WatchWhispersResponse_WhisperDelete_)(nil),
	}
	file_chat_v1_chat_proto_msgTypes[86].OneofWrappers = []interface{}{
		(*WatchUIConfigResponse_UiConfig)(nil),
		(*WatchUIConfigResponse_UiConfigHighlight)(nil),
		(*WatchUIConfigResponse_UiConfigHighlightDelete)(nil),
		(*WatchUIConfigResponse_UiConfigTag)(nil),
		(*WatchUIConfigResponse_UiConfigTagDelete)(nil),
		(*WatchUIConfigResponse_UiConfigIgnore)(nil),
		(*WatchUIConfigResponse_UiConfigIgnoreDelete)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chat_v1_chat_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   131,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_chat_v1_chat_proto_goTypes,
		DependencyIndexes: file_chat_v1_chat_proto_depIdxs,
		EnumInfos:         file_chat_v1_chat_proto_enumTypes,
		MessageInfos:      file_chat_v1_chat_proto_msgTypes,
	}.Build()
	File_chat_v1_chat_proto = out.File
	file_chat_v1_chat_proto_rawDesc = nil
	file_chat_v1_chat_proto_goTypes = nil
	file_chat_v1_chat_proto_depIdxs = nil
}
