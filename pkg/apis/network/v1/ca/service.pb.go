// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: network/v1/ca/service.proto

package ca

import (
	certificate "github.com/MemeLabs/go-ppspp/pkg/apis/type/certificate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CertificateLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64                   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	NetworkId   uint64                   `protobuf:"varint,2,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	Certificate *certificate.Certificate `protobuf:"bytes,3,opt,name=certificate,proto3" json:"certificate,omitempty"`
}

func (x *CertificateLog) Reset() {
	*x = CertificateLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_ca_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CertificateLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CertificateLog) ProtoMessage() {}

func (x *CertificateLog) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_ca_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CertificateLog.ProtoReflect.Descriptor instead.
func (*CertificateLog) Descriptor() ([]byte, []int) {
	return file_network_v1_ca_service_proto_rawDescGZIP(), []int{0}
}

func (x *CertificateLog) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CertificateLog) GetNetworkId() uint64 {
	if x != nil {
		return x.NetworkId
	}
	return 0
}

func (x *CertificateLog) GetCertificate() *certificate.Certificate {
	if x != nil {
		return x.Certificate
	}
	return nil
}

type CARenewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Certificate        *certificate.Certificate        `protobuf:"bytes,1,opt,name=certificate,proto3" json:"certificate,omitempty"`
	CertificateRequest *certificate.CertificateRequest `protobuf:"bytes,2,opt,name=certificate_request,json=certificateRequest,proto3" json:"certificate_request,omitempty"`
}

func (x *CARenewRequest) Reset() {
	*x = CARenewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_ca_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CARenewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CARenewRequest) ProtoMessage() {}

func (x *CARenewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_ca_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CARenewRequest.ProtoReflect.Descriptor instead.
func (*CARenewRequest) Descriptor() ([]byte, []int) {
	return file_network_v1_ca_service_proto_rawDescGZIP(), []int{1}
}

func (x *CARenewRequest) GetCertificate() *certificate.Certificate {
	if x != nil {
		return x.Certificate
	}
	return nil
}

func (x *CARenewRequest) GetCertificateRequest() *certificate.CertificateRequest {
	if x != nil {
		return x.CertificateRequest
	}
	return nil
}

type CARenewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Certificate *certificate.Certificate `protobuf:"bytes,1,opt,name=certificate,proto3" json:"certificate,omitempty"`
}

func (x *CARenewResponse) Reset() {
	*x = CARenewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_ca_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CARenewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CARenewResponse) ProtoMessage() {}

func (x *CARenewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_ca_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CARenewResponse.ProtoReflect.Descriptor instead.
func (*CARenewResponse) Descriptor() ([]byte, []int) {
	return file_network_v1_ca_service_proto_rawDescGZIP(), []int{2}
}

func (x *CARenewResponse) GetCertificate() *certificate.Certificate {
	if x != nil {
		return x.Certificate
	}
	return nil
}

type CAFindRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subject      string `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	SerialNumber []byte `protobuf:"bytes,2,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	FullChain    bool   `protobuf:"varint,3,opt,name=full_chain,json=fullChain,proto3" json:"full_chain,omitempty"`
}

func (x *CAFindRequest) Reset() {
	*x = CAFindRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_ca_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CAFindRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CAFindRequest) ProtoMessage() {}

func (x *CAFindRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_ca_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CAFindRequest.ProtoReflect.Descriptor instead.
func (*CAFindRequest) Descriptor() ([]byte, []int) {
	return file_network_v1_ca_service_proto_rawDescGZIP(), []int{3}
}

func (x *CAFindRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *CAFindRequest) GetSerialNumber() []byte {
	if x != nil {
		return x.SerialNumber
	}
	return nil
}

func (x *CAFindRequest) GetFullChain() bool {
	if x != nil {
		return x.FullChain
	}
	return false
}

type CAFindResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Certificate *certificate.Certificate `protobuf:"bytes,1,opt,name=certificate,proto3" json:"certificate,omitempty"`
}

func (x *CAFindResponse) Reset() {
	*x = CAFindResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_ca_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CAFindResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CAFindResponse) ProtoMessage() {}

func (x *CAFindResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_ca_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CAFindResponse.ProtoReflect.Descriptor instead.
func (*CAFindResponse) Descriptor() ([]byte, []int) {
	return file_network_v1_ca_service_proto_rawDescGZIP(), []int{4}
}

func (x *CAFindResponse) GetCertificate() *certificate.Certificate {
	if x != nil {
		return x.Certificate
	}
	return nil
}

var File_network_v1_ca_service_proto protoreflect.FileDescriptor

var file_network_v1_ca_service_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x73,
	0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31,
	0x2e, 0x63, 0x61, 0x1a, 0x16, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7b, 0x0a, 0x0e, 0x43,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x0b,
	0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x63, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x22, 0x9e, 0x01, 0x0a, 0x0e, 0x43, 0x41, 0x52,
	0x65, 0x6e, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0b, 0x63,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x43,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x63, 0x65, 0x72, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x50, 0x0a, 0x13, 0x63, 0x65, 0x72, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x12, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x0f, 0x43, 0x41, 0x52,
	0x65, 0x6e, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0b,
	0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x63, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x22, 0x6d, 0x0a, 0x0d, 0x43, 0x41, 0x46, 0x69,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x75, 0x6c, 0x6c,
	0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x66, 0x75,
	0x6c, 0x6c, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x22, 0x4c, 0x0a, 0x0e, 0x43, 0x41, 0x46, 0x69, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0b, 0x63, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x43, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x32, 0xad, 0x01, 0x0a, 0x02, 0x43, 0x41, 0x12, 0x54, 0x0a, 0x05,
	0x52, 0x65, 0x6e, 0x65, 0x77, 0x12, 0x24, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x61, 0x2e, 0x43, 0x41, 0x52,
	0x65, 0x6e, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x74,
	0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e,
	0x63, 0x61, 0x2e, 0x43, 0x41, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x51, 0x0a, 0x04, 0x46, 0x69, 0x6e, 0x64, 0x12, 0x23, 0x2e, 0x73, 0x74, 0x72,
	0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x63,
	0x61, 0x2e, 0x43, 0x41, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x24, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x63, 0x61, 0x2e, 0x43, 0x41, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x57, 0x0a, 0x17, 0x67, 0x67, 0x2e, 0x73, 0x74, 0x72, 0x69,
	0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x61,
	0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4d, 0x65, 0x6d,
	0x65, 0x4c, 0x61, 0x62, 0x73, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x70, 0x73, 0x70, 0x70, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f,
	0x76, 0x31, 0x2f, 0x63, 0x61, 0x3b, 0x63, 0x61, 0xba, 0x02, 0x03, 0x53, 0x4e, 0x43, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_network_v1_ca_service_proto_rawDescOnce sync.Once
	file_network_v1_ca_service_proto_rawDescData = file_network_v1_ca_service_proto_rawDesc
)

func file_network_v1_ca_service_proto_rawDescGZIP() []byte {
	file_network_v1_ca_service_proto_rawDescOnce.Do(func() {
		file_network_v1_ca_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_network_v1_ca_service_proto_rawDescData)
	})
	return file_network_v1_ca_service_proto_rawDescData
}

var file_network_v1_ca_service_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_network_v1_ca_service_proto_goTypes = []interface{}{
	(*CertificateLog)(nil),                 // 0: strims.network.v1.ca.CertificateLog
	(*CARenewRequest)(nil),                 // 1: strims.network.v1.ca.CARenewRequest
	(*CARenewResponse)(nil),                // 2: strims.network.v1.ca.CARenewResponse
	(*CAFindRequest)(nil),                  // 3: strims.network.v1.ca.CAFindRequest
	(*CAFindResponse)(nil),                 // 4: strims.network.v1.ca.CAFindResponse
	(*certificate.Certificate)(nil),        // 5: strims.type.Certificate
	(*certificate.CertificateRequest)(nil), // 6: strims.type.CertificateRequest
}
var file_network_v1_ca_service_proto_depIdxs = []int32{
	5, // 0: strims.network.v1.ca.CertificateLog.certificate:type_name -> strims.type.Certificate
	5, // 1: strims.network.v1.ca.CARenewRequest.certificate:type_name -> strims.type.Certificate
	6, // 2: strims.network.v1.ca.CARenewRequest.certificate_request:type_name -> strims.type.CertificateRequest
	5, // 3: strims.network.v1.ca.CARenewResponse.certificate:type_name -> strims.type.Certificate
	5, // 4: strims.network.v1.ca.CAFindResponse.certificate:type_name -> strims.type.Certificate
	1, // 5: strims.network.v1.ca.CA.Renew:input_type -> strims.network.v1.ca.CARenewRequest
	3, // 6: strims.network.v1.ca.CA.Find:input_type -> strims.network.v1.ca.CAFindRequest
	2, // 7: strims.network.v1.ca.CA.Renew:output_type -> strims.network.v1.ca.CARenewResponse
	4, // 8: strims.network.v1.ca.CA.Find:output_type -> strims.network.v1.ca.CAFindResponse
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_network_v1_ca_service_proto_init() }
func file_network_v1_ca_service_proto_init() {
	if File_network_v1_ca_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_network_v1_ca_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CertificateLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_ca_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CARenewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_ca_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CARenewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_ca_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CAFindRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_ca_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CAFindResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_network_v1_ca_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_network_v1_ca_service_proto_goTypes,
		DependencyIndexes: file_network_v1_ca_service_proto_depIdxs,
		MessageInfos:      file_network_v1_ca_service_proto_msgTypes,
	}.Build()
	File_network_v1_ca_service_proto = out.File
	file_network_v1_ca_service_proto_rawDesc = nil
	file_network_v1_ca_service_proto_goTypes = nil
	file_network_v1_ca_service_proto_depIdxs = nil
}
