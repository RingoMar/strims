// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: network/v1/directory/directory.proto

package networkv1directory

import (
	image "github.com/MemeLabs/go-ppspp/pkg/apis/type/image"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Listing_Embed_Service int32

const (
	Listing_Embed_DIRECTORY_LISTING_EMBED_SERVICE_UNDEFINED     Listing_Embed_Service = 0
	Listing_Embed_DIRECTORY_LISTING_EMBED_SERVICE_ANGELTHUMP    Listing_Embed_Service = 1
	Listing_Embed_DIRECTORY_LISTING_EMBED_SERVICE_TWITCH_STREAM Listing_Embed_Service = 2
	Listing_Embed_DIRECTORY_LISTING_EMBED_SERVICE_TWITCH_VOD    Listing_Embed_Service = 3
	Listing_Embed_DIRECTORY_LISTING_EMBED_SERVICE_YOUTUBE       Listing_Embed_Service = 4
)

// Enum value maps for Listing_Embed_Service.
var (
	Listing_Embed_Service_name = map[int32]string{
		0: "DIRECTORY_LISTING_EMBED_SERVICE_UNDEFINED",
		1: "DIRECTORY_LISTING_EMBED_SERVICE_ANGELTHUMP",
		2: "DIRECTORY_LISTING_EMBED_SERVICE_TWITCH_STREAM",
		3: "DIRECTORY_LISTING_EMBED_SERVICE_TWITCH_VOD",
		4: "DIRECTORY_LISTING_EMBED_SERVICE_YOUTUBE",
	}
	Listing_Embed_Service_value = map[string]int32{
		"DIRECTORY_LISTING_EMBED_SERVICE_UNDEFINED":     0,
		"DIRECTORY_LISTING_EMBED_SERVICE_ANGELTHUMP":    1,
		"DIRECTORY_LISTING_EMBED_SERVICE_TWITCH_STREAM": 2,
		"DIRECTORY_LISTING_EMBED_SERVICE_TWITCH_VOD":    3,
		"DIRECTORY_LISTING_EMBED_SERVICE_YOUTUBE":       4,
	}
)

func (x Listing_Embed_Service) Enum() *Listing_Embed_Service {
	p := new(Listing_Embed_Service)
	*p = x
	return p
}

func (x Listing_Embed_Service) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Listing_Embed_Service) Descriptor() protoreflect.EnumDescriptor {
	return file_network_v1_directory_directory_proto_enumTypes[0].Descriptor()
}

func (Listing_Embed_Service) Type() protoreflect.EnumType {
	return &file_network_v1_directory_directory_proto_enumTypes[0]
}

func (x Listing_Embed_Service) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Listing_Embed_Service.Descriptor instead.
func (Listing_Embed_Service) EnumDescriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{4, 2, 0}
}

type ServerConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Integrations *ServerConfig_Integrations `protobuf:"bytes,1,opt,name=integrations,proto3" json:"integrations,omitempty"`
}

func (x *ServerConfig) Reset() {
	*x = ServerConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerConfig) ProtoMessage() {}

func (x *ServerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerConfig.ProtoReflect.Descriptor instead.
func (*ServerConfig) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{0}
}

func (x *ServerConfig) GetIntegrations() *ServerConfig_Integrations {
	if x != nil {
		return x.Integrations
	}
	return nil
}

type GetEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkKey []byte `protobuf:"bytes,1,opt,name=network_key,json=networkKey,proto3" json:"network_key,omitempty"`
}

func (x *GetEventsRequest) Reset() {
	*x = GetEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsRequest) ProtoMessage() {}

func (x *GetEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsRequest.ProtoReflect.Descriptor instead.
func (*GetEventsRequest) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{1}
}

func (x *GetEventsRequest) GetNetworkKey() []byte {
	if x != nil {
		return x.NetworkKey
	}
	return nil
}

type TestPublishRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkKey []byte `protobuf:"bytes,1,opt,name=network_key,json=networkKey,proto3" json:"network_key,omitempty"`
}

func (x *TestPublishRequest) Reset() {
	*x = TestPublishRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestPublishRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestPublishRequest) ProtoMessage() {}

func (x *TestPublishRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestPublishRequest.ProtoReflect.Descriptor instead.
func (*TestPublishRequest) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{2}
}

func (x *TestPublishRequest) GetNetworkKey() []byte {
	if x != nil {
		return x.NetworkKey
	}
	return nil
}

type TestPublishResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TestPublishResponse) Reset() {
	*x = TestPublishResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestPublishResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestPublishResponse) ProtoMessage() {}

func (x *TestPublishResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestPublishResponse.ProtoReflect.Descriptor instead.
func (*TestPublishResponse) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{3}
}

type Listing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Content:
	//	*Listing_Media_
	//	*Listing_Service_
	//	*Listing_Embed_
	Content isListing_Content `protobuf_oneof:"content"`
}

func (x *Listing) Reset() {
	*x = Listing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Listing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Listing) ProtoMessage() {}

func (x *Listing) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Listing.ProtoReflect.Descriptor instead.
func (*Listing) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{4}
}

func (m *Listing) GetContent() isListing_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (x *Listing) GetMedia() *Listing_Media {
	if x, ok := x.GetContent().(*Listing_Media_); ok {
		return x.Media
	}
	return nil
}

func (x *Listing) GetService() *Listing_Service {
	if x, ok := x.GetContent().(*Listing_Service_); ok {
		return x.Service
	}
	return nil
}

func (x *Listing) GetEmbed() *Listing_Embed {
	if x, ok := x.GetContent().(*Listing_Embed_); ok {
		return x.Embed
	}
	return nil
}

type isListing_Content interface {
	isListing_Content()
}

type Listing_Media_ struct {
	Media *Listing_Media `protobuf:"bytes,1001,opt,name=media,proto3,oneof"`
}

type Listing_Service_ struct {
	Service *Listing_Service `protobuf:"bytes,1002,opt,name=service,proto3,oneof"`
}

type Listing_Embed_ struct {
	Embed *Listing_Embed `protobuf:"bytes,1003,opt,name=embed,proto3,oneof"`
}

func (*Listing_Media_) isListing_Content() {}

func (*Listing_Service_) isListing_Content() {}

func (*Listing_Embed_) isListing_Content() {}

type ListingSnippet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string                `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description string                `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Tags        []string              `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
	Category    string                `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
	ChannelName string                `protobuf:"bytes,5,opt,name=channel_name,json=channelName,proto3" json:"channel_name,omitempty"`
	ViewerCount uint64                `protobuf:"varint,6,opt,name=viewer_count,json=viewerCount,proto3" json:"viewer_count,omitempty"`
	Live        bool                  `protobuf:"varint,7,opt,name=live,proto3" json:"live,omitempty"`
	IsMature    bool                  `protobuf:"varint,8,opt,name=is_mature,json=isMature,proto3" json:"is_mature,omitempty"`
	Thumbnail   *ListingSnippet_Image `protobuf:"bytes,9,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"`
	ChannelLogo *ListingSnippet_Image `protobuf:"bytes,10,opt,name=channel_logo,json=channelLogo,proto3" json:"channel_logo,omitempty"`
	Key         []byte                `protobuf:"bytes,10001,opt,name=key,proto3" json:"key,omitempty"`
	Signature   []byte                `protobuf:"bytes,10002,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *ListingSnippet) Reset() {
	*x = ListingSnippet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListingSnippet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListingSnippet) ProtoMessage() {}

func (x *ListingSnippet) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListingSnippet.ProtoReflect.Descriptor instead.
func (*ListingSnippet) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{5}
}

func (x *ListingSnippet) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ListingSnippet) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ListingSnippet) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ListingSnippet) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *ListingSnippet) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

func (x *ListingSnippet) GetViewerCount() uint64 {
	if x != nil {
		return x.ViewerCount
	}
	return 0
}

func (x *ListingSnippet) GetLive() bool {
	if x != nil {
		return x.Live
	}
	return false
}

func (x *ListingSnippet) GetIsMature() bool {
	if x != nil {
		return x.IsMature
	}
	return false
}

func (x *ListingSnippet) GetThumbnail() *ListingSnippet_Image {
	if x != nil {
		return x.Thumbnail
	}
	return nil
}

func (x *ListingSnippet) GetChannelLogo() *ListingSnippet_Image {
	if x != nil {
		return x.ChannelLogo
	}
	return nil
}

func (x *ListingSnippet) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *ListingSnippet) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Body:
	//	*Event_ListingChange_
	//	*Event_Unpublish_
	//	*Event_ViewerCountChange_
	//	*Event_ViewerStateChange_
	//	*Event_Ping_
	Body isEvent_Body `protobuf_oneof:"body"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{6}
}

func (m *Event) GetBody() isEvent_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (x *Event) GetListingChange() *Event_ListingChange {
	if x, ok := x.GetBody().(*Event_ListingChange_); ok {
		return x.ListingChange
	}
	return nil
}

func (x *Event) GetUnpublish() *Event_Unpublish {
	if x, ok := x.GetBody().(*Event_Unpublish_); ok {
		return x.Unpublish
	}
	return nil
}

func (x *Event) GetViewerCountChange() *Event_ViewerCountChange {
	if x, ok := x.GetBody().(*Event_ViewerCountChange_); ok {
		return x.ViewerCountChange
	}
	return nil
}

func (x *Event) GetViewerStateChange() *Event_ViewerStateChange {
	if x, ok := x.GetBody().(*Event_ViewerStateChange_); ok {
		return x.ViewerStateChange
	}
	return nil
}

func (x *Event) GetPing() *Event_Ping {
	if x, ok := x.GetBody().(*Event_Ping_); ok {
		return x.Ping
	}
	return nil
}

type isEvent_Body interface {
	isEvent_Body()
}

type Event_ListingChange_ struct {
	ListingChange *Event_ListingChange `protobuf:"bytes,1001,opt,name=listing_change,json=listingChange,proto3,oneof"`
}

type Event_Unpublish_ struct {
	Unpublish *Event_Unpublish `protobuf:"bytes,1002,opt,name=unpublish,proto3,oneof"`
}

type Event_ViewerCountChange_ struct {
	ViewerCountChange *Event_ViewerCountChange `protobuf:"bytes,1003,opt,name=viewer_count_change,json=viewerCountChange,proto3,oneof"`
}

type Event_ViewerStateChange_ struct {
	ViewerStateChange *Event_ViewerStateChange `protobuf:"bytes,1004,opt,name=viewer_state_change,json=viewerStateChange,proto3,oneof"`
}

type Event_Ping_ struct {
	Ping *Event_Ping `protobuf:"bytes,1005,opt,name=ping,proto3,oneof"`
}

func (*Event_ListingChange_) isEvent_Body() {}

func (*Event_Unpublish_) isEvent_Body() {}

func (*Event_ViewerCountChange_) isEvent_Body() {}

func (*Event_ViewerStateChange_) isEvent_Body() {}

func (*Event_Ping_) isEvent_Body() {}

type EventBroadcast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []*Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *EventBroadcast) Reset() {
	*x = EventBroadcast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventBroadcast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventBroadcast) ProtoMessage() {}

func (x *EventBroadcast) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventBroadcast.ProtoReflect.Descriptor instead.
func (*EventBroadcast) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{7}
}

func (x *EventBroadcast) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

type PublishRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Listing *Listing `protobuf:"bytes,1,opt,name=listing,proto3" json:"listing,omitempty"`
}

func (x *PublishRequest) Reset() {
	*x = PublishRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishRequest) ProtoMessage() {}

func (x *PublishRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishRequest.ProtoReflect.Descriptor instead.
func (*PublishRequest) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{8}
}

func (x *PublishRequest) GetListing() *Listing {
	if x != nil {
		return x.Listing
	}
	return nil
}

type PublishResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PublishResponse) Reset() {
	*x = PublishResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishResponse) ProtoMessage() {}

func (x *PublishResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishResponse.ProtoReflect.Descriptor instead.
func (*PublishResponse) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{9}
}

func (x *PublishResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UnpublishRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UnpublishRequest) Reset() {
	*x = UnpublishRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnpublishRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnpublishRequest) ProtoMessage() {}

func (x *UnpublishRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnpublishRequest.ProtoReflect.Descriptor instead.
func (*UnpublishRequest) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{10}
}

func (x *UnpublishRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UnpublishResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnpublishResponse) Reset() {
	*x = UnpublishResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnpublishResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnpublishResponse) ProtoMessage() {}

func (x *UnpublishResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnpublishResponse.ProtoReflect.Descriptor instead.
func (*UnpublishResponse) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{11}
}

type JoinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *JoinRequest) Reset() {
	*x = JoinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRequest) ProtoMessage() {}

func (x *JoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRequest.ProtoReflect.Descriptor instead.
func (*JoinRequest) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{12}
}

func (x *JoinRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type JoinResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *JoinResponse) Reset() {
	*x = JoinResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinResponse) ProtoMessage() {}

func (x *JoinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinResponse.ProtoReflect.Descriptor instead.
func (*JoinResponse) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{13}
}

type PartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PartRequest) Reset() {
	*x = PartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartRequest) ProtoMessage() {}

func (x *PartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartRequest.ProtoReflect.Descriptor instead.
func (*PartRequest) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{14}
}

func (x *PartRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type PartResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PartResponse) Reset() {
	*x = PartResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartResponse) ProtoMessage() {}

func (x *PartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartResponse.ProtoReflect.Descriptor instead.
func (*PartResponse) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{15}
}

type PingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{16}
}

type PingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{17}
}

type FrontendOpenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FrontendOpenRequest) Reset() {
	*x = FrontendOpenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendOpenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendOpenRequest) ProtoMessage() {}

func (x *FrontendOpenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendOpenRequest.ProtoReflect.Descriptor instead.
func (*FrontendOpenRequest) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{18}
}

type FrontendOpenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkId  uint64 `protobuf:"varint,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	NetworkKey []byte `protobuf:"bytes,2,opt,name=network_key,json=networkKey,proto3" json:"network_key,omitempty"`
	// Types that are assignable to Body:
	//	*FrontendOpenResponse_Close_
	//	*FrontendOpenResponse_Broadcast
	Body isFrontendOpenResponse_Body `protobuf_oneof:"body"`
}

func (x *FrontendOpenResponse) Reset() {
	*x = FrontendOpenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendOpenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendOpenResponse) ProtoMessage() {}

func (x *FrontendOpenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendOpenResponse.ProtoReflect.Descriptor instead.
func (*FrontendOpenResponse) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{19}
}

func (x *FrontendOpenResponse) GetNetworkId() uint64 {
	if x != nil {
		return x.NetworkId
	}
	return 0
}

func (x *FrontendOpenResponse) GetNetworkKey() []byte {
	if x != nil {
		return x.NetworkKey
	}
	return nil
}

func (m *FrontendOpenResponse) GetBody() isFrontendOpenResponse_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (x *FrontendOpenResponse) GetClose() *FrontendOpenResponse_Close {
	if x, ok := x.GetBody().(*FrontendOpenResponse_Close_); ok {
		return x.Close
	}
	return nil
}

func (x *FrontendOpenResponse) GetBroadcast() *EventBroadcast {
	if x, ok := x.GetBody().(*FrontendOpenResponse_Broadcast); ok {
		return x.Broadcast
	}
	return nil
}

type isFrontendOpenResponse_Body interface {
	isFrontendOpenResponse_Body()
}

type FrontendOpenResponse_Close_ struct {
	Close *FrontendOpenResponse_Close `protobuf:"bytes,1001,opt,name=close,proto3,oneof"`
}

type FrontendOpenResponse_Broadcast struct {
	Broadcast *EventBroadcast `protobuf:"bytes,1002,opt,name=broadcast,proto3,oneof"`
}

func (*FrontendOpenResponse_Close_) isFrontendOpenResponse_Body() {}

func (*FrontendOpenResponse_Broadcast) isFrontendOpenResponse_Body() {}

type FrontendTestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkKey []byte `protobuf:"bytes,1,opt,name=network_key,json=networkKey,proto3" json:"network_key,omitempty"`
}

func (x *FrontendTestRequest) Reset() {
	*x = FrontendTestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendTestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendTestRequest) ProtoMessage() {}

func (x *FrontendTestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendTestRequest.ProtoReflect.Descriptor instead.
func (*FrontendTestRequest) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{20}
}

func (x *FrontendTestRequest) GetNetworkKey() []byte {
	if x != nil {
		return x.NetworkKey
	}
	return nil
}

type FrontendTestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FrontendTestResponse) Reset() {
	*x = FrontendTestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendTestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendTestResponse) ProtoMessage() {}

func (x *FrontendTestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendTestResponse.ProtoReflect.Descriptor instead.
func (*FrontendTestResponse) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{21}
}

type SnippetSubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SwarmId []byte `protobuf:"bytes,1,opt,name=swarm_id,json=swarmId,proto3" json:"swarm_id,omitempty"`
}

func (x *SnippetSubscribeRequest) Reset() {
	*x = SnippetSubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnippetSubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnippetSubscribeRequest) ProtoMessage() {}

func (x *SnippetSubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnippetSubscribeRequest.ProtoReflect.Descriptor instead.
func (*SnippetSubscribeRequest) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{22}
}

func (x *SnippetSubscribeRequest) GetSwarmId() []byte {
	if x != nil {
		return x.SwarmId
	}
	return nil
}

type SnippetSubscribeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Category    *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	ChannelName *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=channel_name,json=channelName,proto3" json:"channel_name,omitempty"`
	ViewerCount *wrapperspb.UInt32Value `protobuf:"bytes,5,opt,name=viewer_count,json=viewerCount,proto3" json:"viewer_count,omitempty"`
	Live        *wrapperspb.BoolValue   `protobuf:"bytes,6,opt,name=live,proto3" json:"live,omitempty"`
	IsMature    *wrapperspb.BoolValue   `protobuf:"bytes,7,opt,name=is_mature,json=isMature,proto3" json:"is_mature,omitempty"`
	// Types that are assignable to TagsOneof:
	//	*SnippetSubscribeResponse_Tags_
	TagsOneof isSnippetSubscribeResponse_TagsOneof `protobuf_oneof:"tags_oneof"`
	// Types that are assignable to ThumbnailOneof:
	//	*SnippetSubscribeResponse_ThumbnailImage
	ThumbnailOneof isSnippetSubscribeResponse_ThumbnailOneof `protobuf_oneof:"thumbnail_oneof"`
	// Types that are assignable to ChannelLogoOneof:
	//	*SnippetSubscribeResponse_ChannelLogoImage
	ChannelLogoOneof isSnippetSubscribeResponse_ChannelLogoOneof `protobuf_oneof:"channel_logo_oneof"`
}

func (x *SnippetSubscribeResponse) Reset() {
	*x = SnippetSubscribeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnippetSubscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnippetSubscribeResponse) ProtoMessage() {}

func (x *SnippetSubscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnippetSubscribeResponse.ProtoReflect.Descriptor instead.
func (*SnippetSubscribeResponse) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{23}
}

func (x *SnippetSubscribeResponse) GetTitle() *wrapperspb.StringValue {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *SnippetSubscribeResponse) GetDescription() *wrapperspb.StringValue {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *SnippetSubscribeResponse) GetCategory() *wrapperspb.StringValue {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *SnippetSubscribeResponse) GetChannelName() *wrapperspb.StringValue {
	if x != nil {
		return x.ChannelName
	}
	return nil
}

func (x *SnippetSubscribeResponse) GetViewerCount() *wrapperspb.UInt32Value {
	if x != nil {
		return x.ViewerCount
	}
	return nil
}

func (x *SnippetSubscribeResponse) GetLive() *wrapperspb.BoolValue {
	if x != nil {
		return x.Live
	}
	return nil
}

func (x *SnippetSubscribeResponse) GetIsMature() *wrapperspb.BoolValue {
	if x != nil {
		return x.IsMature
	}
	return nil
}

func (m *SnippetSubscribeResponse) GetTagsOneof() isSnippetSubscribeResponse_TagsOneof {
	if m != nil {
		return m.TagsOneof
	}
	return nil
}

func (x *SnippetSubscribeResponse) GetTags() *SnippetSubscribeResponse_Tags {
	if x, ok := x.GetTagsOneof().(*SnippetSubscribeResponse_Tags_); ok {
		return x.Tags
	}
	return nil
}

func (m *SnippetSubscribeResponse) GetThumbnailOneof() isSnippetSubscribeResponse_ThumbnailOneof {
	if m != nil {
		return m.ThumbnailOneof
	}
	return nil
}

func (x *SnippetSubscribeResponse) GetThumbnailImage() *image.Image {
	if x, ok := x.GetThumbnailOneof().(*SnippetSubscribeResponse_ThumbnailImage); ok {
		return x.ThumbnailImage
	}
	return nil
}

func (m *SnippetSubscribeResponse) GetChannelLogoOneof() isSnippetSubscribeResponse_ChannelLogoOneof {
	if m != nil {
		return m.ChannelLogoOneof
	}
	return nil
}

func (x *SnippetSubscribeResponse) GetChannelLogoImage() *image.Image {
	if x, ok := x.GetChannelLogoOneof().(*SnippetSubscribeResponse_ChannelLogoImage); ok {
		return x.ChannelLogoImage
	}
	return nil
}

type isSnippetSubscribeResponse_TagsOneof interface {
	isSnippetSubscribeResponse_TagsOneof()
}

type SnippetSubscribeResponse_Tags_ struct {
	Tags *SnippetSubscribeResponse_Tags `protobuf:"bytes,1001,opt,name=tags,proto3,oneof"`
}

func (*SnippetSubscribeResponse_Tags_) isSnippetSubscribeResponse_TagsOneof() {}

type isSnippetSubscribeResponse_ThumbnailOneof interface {
	isSnippetSubscribeResponse_ThumbnailOneof()
}

type SnippetSubscribeResponse_ThumbnailImage struct {
	ThumbnailImage *image.Image `protobuf:"bytes,2001,opt,name=thumbnail_image,json=thumbnailImage,proto3,oneof"`
}

func (*SnippetSubscribeResponse_ThumbnailImage) isSnippetSubscribeResponse_ThumbnailOneof() {}

type isSnippetSubscribeResponse_ChannelLogoOneof interface {
	isSnippetSubscribeResponse_ChannelLogoOneof()
}

type SnippetSubscribeResponse_ChannelLogoImage struct {
	ChannelLogoImage *image.Image `protobuf:"bytes,3001,opt,name=channel_logo_image,json=channelLogoImage,proto3,oneof"`
}

func (*SnippetSubscribeResponse_ChannelLogoImage) isSnippetSubscribeResponse_ChannelLogoOneof() {}

type ServerConfig_Integrations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Angelthump *ServerConfig_Integrations_AngelThump `protobuf:"bytes,1,opt,name=angelthump,proto3" json:"angelthump,omitempty"`
	Twitch     *ServerConfig_Integrations_Twitch     `protobuf:"bytes,2,opt,name=twitch,proto3" json:"twitch,omitempty"`
	Youtube    *ServerConfig_Integrations_YouTube    `protobuf:"bytes,3,opt,name=youtube,proto3" json:"youtube,omitempty"`
	Swarm      *ServerConfig_Integrations_Swarm      `protobuf:"bytes,4,opt,name=swarm,proto3" json:"swarm,omitempty"`
}

func (x *ServerConfig_Integrations) Reset() {
	*x = ServerConfig_Integrations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerConfig_Integrations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerConfig_Integrations) ProtoMessage() {}

func (x *ServerConfig_Integrations) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerConfig_Integrations.ProtoReflect.Descriptor instead.
func (*ServerConfig_Integrations) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ServerConfig_Integrations) GetAngelthump() *ServerConfig_Integrations_AngelThump {
	if x != nil {
		return x.Angelthump
	}
	return nil
}

func (x *ServerConfig_Integrations) GetTwitch() *ServerConfig_Integrations_Twitch {
	if x != nil {
		return x.Twitch
	}
	return nil
}

func (x *ServerConfig_Integrations) GetYoutube() *ServerConfig_Integrations_YouTube {
	if x != nil {
		return x.Youtube
	}
	return nil
}

func (x *ServerConfig_Integrations) GetSwarm() *ServerConfig_Integrations_Swarm {
	if x != nil {
		return x.Swarm
	}
	return nil
}

type ServerConfig_Integrations_AngelThump struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enable bool `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
}

func (x *ServerConfig_Integrations_AngelThump) Reset() {
	*x = ServerConfig_Integrations_AngelThump{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerConfig_Integrations_AngelThump) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerConfig_Integrations_AngelThump) ProtoMessage() {}

func (x *ServerConfig_Integrations_AngelThump) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerConfig_Integrations_AngelThump.ProtoReflect.Descriptor instead.
func (*ServerConfig_Integrations_AngelThump) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *ServerConfig_Integrations_AngelThump) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

type ServerConfig_Integrations_Twitch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enable       bool   `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
	ClientId     string `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientSecret string `protobuf:"bytes,3,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
}

func (x *ServerConfig_Integrations_Twitch) Reset() {
	*x = ServerConfig_Integrations_Twitch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerConfig_Integrations_Twitch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerConfig_Integrations_Twitch) ProtoMessage() {}

func (x *ServerConfig_Integrations_Twitch) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerConfig_Integrations_Twitch.ProtoReflect.Descriptor instead.
func (*ServerConfig_Integrations_Twitch) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{0, 0, 1}
}

func (x *ServerConfig_Integrations_Twitch) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *ServerConfig_Integrations_Twitch) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *ServerConfig_Integrations_Twitch) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

type ServerConfig_Integrations_YouTube struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enable       bool   `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
	PublicApiKey string `protobuf:"bytes,2,opt,name=public_api_key,json=publicApiKey,proto3" json:"public_api_key,omitempty"`
}

func (x *ServerConfig_Integrations_YouTube) Reset() {
	*x = ServerConfig_Integrations_YouTube{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerConfig_Integrations_YouTube) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerConfig_Integrations_YouTube) ProtoMessage() {}

func (x *ServerConfig_Integrations_YouTube) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerConfig_Integrations_YouTube.ProtoReflect.Descriptor instead.
func (*ServerConfig_Integrations_YouTube) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{0, 0, 2}
}

func (x *ServerConfig_Integrations_YouTube) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *ServerConfig_Integrations_YouTube) GetPublicApiKey() string {
	if x != nil {
		return x.PublicApiKey
	}
	return ""
}

type ServerConfig_Integrations_Swarm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enable bool `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
}

func (x *ServerConfig_Integrations_Swarm) Reset() {
	*x = ServerConfig_Integrations_Swarm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerConfig_Integrations_Swarm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerConfig_Integrations_Swarm) ProtoMessage() {}

func (x *ServerConfig_Integrations_Swarm) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerConfig_Integrations_Swarm.ProtoReflect.Descriptor instead.
func (*ServerConfig_Integrations_Swarm) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{0, 0, 3}
}

func (x *ServerConfig_Integrations_Swarm) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

type Listing_Media struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MimeType string `protobuf:"bytes,1,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	SwarmUri string `protobuf:"bytes,2,opt,name=swarm_uri,json=swarmUri,proto3" json:"swarm_uri,omitempty"`
}

func (x *Listing_Media) Reset() {
	*x = Listing_Media{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Listing_Media) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Listing_Media) ProtoMessage() {}

func (x *Listing_Media) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Listing_Media.ProtoReflect.Descriptor instead.
func (*Listing_Media) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{4, 0}
}

func (x *Listing_Media) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *Listing_Media) GetSwarmUri() string {
	if x != nil {
		return x.SwarmUri
	}
	return ""
}

type Listing_Service struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *Listing_Service) Reset() {
	*x = Listing_Service{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Listing_Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Listing_Service) ProtoMessage() {}

func (x *Listing_Service) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Listing_Service.ProtoReflect.Descriptor instead.
func (*Listing_Service) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{4, 1}
}

func (x *Listing_Service) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type Listing_Embed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service Listing_Embed_Service `protobuf:"varint,1,opt,name=service,proto3,enum=strims.network.v1.directory.Listing_Embed_Service" json:"service,omitempty"`
	Id      string                `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Listing_Embed) Reset() {
	*x = Listing_Embed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Listing_Embed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Listing_Embed) ProtoMessage() {}

func (x *Listing_Embed) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Listing_Embed.ProtoReflect.Descriptor instead.
func (*Listing_Embed) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{4, 2}
}

func (x *Listing_Embed) GetService() Listing_Embed_Service {
	if x != nil {
		return x.Service
	}
	return Listing_Embed_DIRECTORY_LISTING_EMBED_SERVICE_UNDEFINED
}

func (x *Listing_Embed) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListingSnippet_Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to SourceOneof:
	//	*ListingSnippet_Image_Url
	//	*ListingSnippet_Image_Image
	SourceOneof isListingSnippet_Image_SourceOneof `protobuf_oneof:"source_oneof"`
}

func (x *ListingSnippet_Image) Reset() {
	*x = ListingSnippet_Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListingSnippet_Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListingSnippet_Image) ProtoMessage() {}

func (x *ListingSnippet_Image) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListingSnippet_Image.ProtoReflect.Descriptor instead.
func (*ListingSnippet_Image) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{5, 0}
}

func (m *ListingSnippet_Image) GetSourceOneof() isListingSnippet_Image_SourceOneof {
	if m != nil {
		return m.SourceOneof
	}
	return nil
}

func (x *ListingSnippet_Image) GetUrl() string {
	if x, ok := x.GetSourceOneof().(*ListingSnippet_Image_Url); ok {
		return x.Url
	}
	return ""
}

func (x *ListingSnippet_Image) GetImage() *image.Image {
	if x, ok := x.GetSourceOneof().(*ListingSnippet_Image_Image); ok {
		return x.Image
	}
	return nil
}

type isListingSnippet_Image_SourceOneof interface {
	isListingSnippet_Image_SourceOneof()
}

type ListingSnippet_Image_Url struct {
	Url string `protobuf:"bytes,1001,opt,name=url,proto3,oneof"`
}

type ListingSnippet_Image_Image struct {
	Image *image.Image `protobuf:"bytes,1002,opt,name=image,proto3,oneof"`
}

func (*ListingSnippet_Image_Url) isListingSnippet_Image_SourceOneof() {}

func (*ListingSnippet_Image_Image) isListingSnippet_Image_SourceOneof() {}

type Event_ListingChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      uint64          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Listing *Listing        `protobuf:"bytes,2,opt,name=listing,proto3" json:"listing,omitempty"`
	Snippet *ListingSnippet `protobuf:"bytes,3,opt,name=snippet,proto3" json:"snippet,omitempty"`
}

func (x *Event_ListingChange) Reset() {
	*x = Event_ListingChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event_ListingChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event_ListingChange) ProtoMessage() {}

func (x *Event_ListingChange) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event_ListingChange.ProtoReflect.Descriptor instead.
func (*Event_ListingChange) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{6, 0}
}

func (x *Event_ListingChange) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Event_ListingChange) GetListing() *Listing {
	if x != nil {
		return x.Listing
	}
	return nil
}

func (x *Event_ListingChange) GetSnippet() *ListingSnippet {
	if x != nil {
		return x.Snippet
	}
	return nil
}

type Event_Unpublish struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Event_Unpublish) Reset() {
	*x = Event_Unpublish{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event_Unpublish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event_Unpublish) ProtoMessage() {}

func (x *Event_Unpublish) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event_Unpublish.ProtoReflect.Descriptor instead.
func (*Event_Unpublish) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{6, 1}
}

func (x *Event_Unpublish) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Event_ViewerCountChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Count uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *Event_ViewerCountChange) Reset() {
	*x = Event_ViewerCountChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event_ViewerCountChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event_ViewerCountChange) ProtoMessage() {}

func (x *Event_ViewerCountChange) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event_ViewerCountChange.ProtoReflect.Descriptor instead.
func (*Event_ViewerCountChange) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{6, 2}
}

func (x *Event_ViewerCountChange) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Event_ViewerCountChange) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type Event_ViewerStateChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subject    string   `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	Online     bool     `protobuf:"varint,2,opt,name=online,proto3" json:"online,omitempty"`
	ViewingIds []uint64 `protobuf:"varint,3,rep,packed,name=viewing_ids,json=viewingIds,proto3" json:"viewing_ids,omitempty"`
}

func (x *Event_ViewerStateChange) Reset() {
	*x = Event_ViewerStateChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event_ViewerStateChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event_ViewerStateChange) ProtoMessage() {}

func (x *Event_ViewerStateChange) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event_ViewerStateChange.ProtoReflect.Descriptor instead.
func (*Event_ViewerStateChange) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{6, 3}
}

func (x *Event_ViewerStateChange) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *Event_ViewerStateChange) GetOnline() bool {
	if x != nil {
		return x.Online
	}
	return false
}

func (x *Event_ViewerStateChange) GetViewingIds() []uint64 {
	if x != nil {
		return x.ViewingIds
	}
	return nil
}

type Event_Ping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time int64 `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *Event_Ping) Reset() {
	*x = Event_Ping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event_Ping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event_Ping) ProtoMessage() {}

func (x *Event_Ping) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event_Ping.ProtoReflect.Descriptor instead.
func (*Event_Ping) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{6, 4}
}

func (x *Event_Ping) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type FrontendOpenResponse_Close struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FrontendOpenResponse_Close) Reset() {
	*x = FrontendOpenResponse_Close{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendOpenResponse_Close) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendOpenResponse_Close) ProtoMessage() {}

func (x *FrontendOpenResponse_Close) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendOpenResponse_Close.ProtoReflect.Descriptor instead.
func (*FrontendOpenResponse_Close) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{19, 0}
}

type SnippetSubscribeResponse_Tags struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tags []string `protobuf:"bytes,1001,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *SnippetSubscribeResponse_Tags) Reset() {
	*x = SnippetSubscribeResponse_Tags{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnippetSubscribeResponse_Tags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnippetSubscribeResponse_Tags) ProtoMessage() {}

func (x *SnippetSubscribeResponse_Tags) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnippetSubscribeResponse_Tags.ProtoReflect.Descriptor instead.
func (*SnippetSubscribeResponse_Tags) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{23, 0}
}

func (x *SnippetSubscribeResponse_Tags) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

var File_network_v1_directory_directory_proto protoreflect.FileDescriptor

var file_network_v1_directory_directory_proto_rawDesc = []byte{
	0x0a, 0x24, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x1a, 0x10, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd7, 0x05, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x5a, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x73,
	0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31,
	0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x1a, 0xea, 0x04, 0x0a, 0x0c, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x61, 0x0a, 0x0a, 0x61, 0x6e, 0x67, 0x65, 0x6c, 0x74, 0x68, 0x75, 0x6d,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73,
	0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x41, 0x6e, 0x67, 0x65, 0x6c, 0x54, 0x68, 0x75, 0x6d, 0x70, 0x52, 0x0a, 0x61, 0x6e, 0x67, 0x65,
	0x6c, 0x74, 0x68, 0x75, 0x6d, 0x70, 0x12, 0x55, 0x0a, 0x06, 0x74, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x54,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x52, 0x06, 0x74, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x58, 0x0a,
	0x07, 0x79, 0x6f, 0x75, 0x74, 0x75, 0x62, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e,
	0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x59, 0x6f, 0x75, 0x54, 0x75, 0x62, 0x65, 0x52, 0x07,
	0x79, 0x6f, 0x75, 0x74, 0x75, 0x62, 0x65, 0x12, 0x52, 0x0a, 0x05, 0x73, 0x77, 0x61, 0x72, 0x6d,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x53,
	0x77, 0x61, 0x72, 0x6d, 0x52, 0x05, 0x73, 0x77, 0x61, 0x72, 0x6d, 0x1a, 0x24, 0x0a, 0x0a, 0x41,
	0x6e, 0x67, 0x65, 0x6c, 0x54, 0x68, 0x75, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x1a, 0x62, 0x0a, 0x06, 0x54, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x1a, 0x47, 0x0a, 0x07, 0x59, 0x6f, 0x75, 0x54, 0x75, 0x62, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x1a, 0x1f,
	0x0a, 0x05, 0x53, 0x77, 0x61, 0x72, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x22,
	0x33, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x4b, 0x65, 0x79, 0x22, 0x35, 0x0a, 0x12, 0x54, 0x65, 0x73, 0x74, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4b, 0x65, 0x79, 0x22, 0x15, 0x0a, 0x13, 0x54,
	0x65, 0x73, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0xae, 0x05, 0x0a, 0x07, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x43,
	0x0a, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0xe9, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x48, 0x00, 0x52, 0x05, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x12, 0x49, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0xea,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x48, 0x00, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x43,
	0x0a, 0x05, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x18, 0xeb, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x48, 0x00, 0x52, 0x05, 0x65, 0x6d,
	0x62, 0x65, 0x64, 0x1a, 0x41, 0x0a, 0x05, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x1b, 0x0a, 0x09,
	0x6d, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x77, 0x61,
	0x72, 0x6d, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x77,
	0x61, 0x72, 0x6d, 0x55, 0x72, 0x69, 0x1a, 0x1d, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x1a, 0xe0, 0x02, 0x0a, 0x05, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x12,
	0x4c, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x32, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xf8, 0x01,
	0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2d, 0x0a, 0x29, 0x44, 0x49, 0x52,
	0x45, 0x43, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x45,
	0x4d, 0x42, 0x45, 0x44, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x55, 0x4e, 0x44,
	0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x2e, 0x0a, 0x2a, 0x44, 0x49, 0x52, 0x45,
	0x43, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x45, 0x4d,
	0x42, 0x45, 0x44, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x41, 0x4e, 0x47, 0x45,
	0x4c, 0x54, 0x48, 0x55, 0x4d, 0x50, 0x10, 0x01, 0x12, 0x31, 0x0a, 0x2d, 0x44, 0x49, 0x52, 0x45,
	0x43, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x45, 0x4d,
	0x42, 0x45, 0x44, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x54, 0x57, 0x49, 0x54,
	0x43, 0x48, 0x5f, 0x53, 0x54, 0x52, 0x45, 0x41, 0x4d, 0x10, 0x02, 0x12, 0x2e, 0x0a, 0x2a, 0x44,
	0x49, 0x52, 0x45, 0x43, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x49, 0x4e, 0x47,
	0x5f, 0x45, 0x4d, 0x42, 0x45, 0x44, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x54,
	0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x56, 0x4f, 0x44, 0x10, 0x03, 0x12, 0x2b, 0x0a, 0x27, 0x44,
	0x49, 0x52, 0x45, 0x43, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x49, 0x4e, 0x47,
	0x5f, 0x45, 0x4d, 0x42, 0x45, 0x44, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x59,
	0x4f, 0x55, 0x54, 0x55, 0x42, 0x45, 0x10, 0x04, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x22, 0xa3, 0x04, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x53,
	0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6d,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4d,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x4f, 0x0a, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61,
	0x69, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d,
	0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x6e,
	0x69, 0x70, 0x70, 0x65, 0x74, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x09, 0x74, 0x68, 0x75,
	0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x12, 0x54, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x73,
	0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31,
	0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52,
	0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x11, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x91, 0x4e, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x1d, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x92, 0x4e, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x1a, 0x59,
	0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x13, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0xe9,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x2b, 0x0a, 0x05,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0xea, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73,
	0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x48, 0x00, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x22, 0xd1, 0x06, 0x0a, 0x05, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x5a, 0x0a, 0x0e, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0xe9, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73,
	0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31,
	0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x00,
	0x52, 0x0d, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12,
	0x4d, 0x0a, 0x09, 0x75, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x18, 0xea, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x48, 0x00, 0x52, 0x09, 0x75, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x67,
	0x0a, 0x13, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0xeb, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x73,
	0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31,
	0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x48, 0x00, 0x52, 0x11, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x67, 0x0a, 0x13, 0x76, 0x69, 0x65, 0x77, 0x65,
	0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0xec,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52, 0x11, 0x76,
	0x69, 0x65, 0x77, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x12, 0x3e, 0x0a, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x18, 0xed, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x04, 0x70, 0x69, 0x6e, 0x67,
	0x1a, 0xa6, 0x01, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x3e, 0x0a, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x45, 0x0a, 0x07, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74,
	0x52, 0x07, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x1a, 0x1b, 0x0a, 0x09, 0x55, 0x6e, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x1a, 0x39, 0x0a, 0x11, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x1a, 0x66, 0x0a, 0x11, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x69, 0x65, 0x77,
	0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0a, 0x76,
	0x69, 0x65, 0x77, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x73, 0x1a, 0x1a, 0x0a, 0x04, 0x50, 0x69, 0x6e,
	0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x4c, 0x0a,
	0x0e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12,
	0x3a, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x50, 0x0a, 0x0e, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a,
	0x07, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x21, 0x0a,
	0x0f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x22, 0x0a, 0x10, 0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x0a, 0x0b, 0x4a, 0x6f, 0x69,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x0e, 0x0a, 0x0c, 0x4a, 0x6f, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x0e, 0x0a, 0x0c, 0x50, 0x61, 0x72, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0d, 0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x0e, 0x0a, 0x0c, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x64, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x87, 0x02,
	0x0a, 0x14, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x4b, 0x65, 0x79, 0x12, 0x50, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18,
	0xe9, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x4f, 0x70, 0x65,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x09, 0x62, 0x72, 0x6f, 0x61,
	0x64, 0x63, 0x61, 0x73, 0x74, 0x18, 0xea, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73,
	0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31,
	0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x48, 0x00, 0x52, 0x09, 0x62, 0x72, 0x6f,
	0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x1a, 0x07, 0x0a, 0x05, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x42,
	0x06, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x36, 0x0a, 0x13, 0x46, 0x72, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x64, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4b, 0x65, 0x79, 0x22,
	0x16, 0x0a, 0x14, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x0a, 0x17, 0x53, 0x6e, 0x69, 0x70, 0x70,
	0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x77, 0x61, 0x72, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x73, 0x77, 0x61, 0x72, 0x6d, 0x49, 0x64, 0x22, 0xdf, 0x05,
	0x0a, 0x18, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x3e,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38,
	0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x3f, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x0c, 0x76, 0x69, 0x65,
	0x77, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x76,
	0x69, 0x65, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x6c, 0x69,
	0x76, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x69, 0x73,
	0x5f, 0x6d, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x69, 0x73, 0x4d, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x51, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0xe9, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x48, 0x00,
	0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x3e, 0x0a, 0x0f, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e,
	0x61, 0x69, 0x6c, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0xd1, 0x0f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x48, 0x01, 0x52, 0x0e, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69,
	0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x43, 0x0a, 0x12, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0xb9, 0x17, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x48, 0x02, 0x52, 0x10, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x4c, 0x6f, 0x67, 0x6f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x1a, 0x1b, 0x0a, 0x04, 0x54,
	0x61, 0x67, 0x73, 0x12, 0x13, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0xe9, 0x07, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x74, 0x61, 0x67, 0x73,
	0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x42, 0x11, 0x0a, 0x0f, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e,
	0x61, 0x69, 0x6c, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x42, 0x14, 0x0a, 0x12, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x32,
	0xf4, 0x03, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x64, 0x0a,
	0x07, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x2b, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d,
	0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x09, 0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x12, 0x2d, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x55,
	0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2e, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x55, 0x6e,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5b, 0x0a, 0x04, 0x4a, 0x6f, 0x69, 0x6e, 0x12, 0x28, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73,
	0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x29, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e,
	0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x04,
	0x50, 0x61, 0x72, 0x74, 0x12, 0x28, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29,
	0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x50, 0x61, 0x72,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x04, 0x50, 0x69, 0x6e,
	0x67, 0x12, 0x28, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e,
	0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x73, 0x74,
	0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xef, 0x01, 0x0a, 0x11, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x12, 0x6d, 0x0a, 0x04,
	0x4f, 0x70, 0x65, 0x6e, 0x12, 0x30, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x4f, 0x70, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x4f, 0x70, 0x65,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x6b, 0x0a, 0x04, 0x54,
	0x65, 0x73, 0x74, 0x12, 0x30, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x8e, 0x01, 0x0a, 0x10, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x12, 0x7a, 0x0a,
	0x09, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x34, 0x2e, 0x73, 0x74, 0x72,
	0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x35, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x53,
	0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x42, 0x75, 0x0a, 0x1e, 0x67, 0x67, 0x2e,
	0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76,
	0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5a, 0x4d, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4d, 0x65, 0x6d, 0x65, 0x4c, 0x61, 0x62, 0x73,
	0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x70, 0x73, 0x70, 0x70, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70,
	0x69, 0x73, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x3b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x76,
	0x31, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0xba, 0x02, 0x03, 0x53, 0x4e, 0x44,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_network_v1_directory_directory_proto_rawDescOnce sync.Once
	file_network_v1_directory_directory_proto_rawDescData = file_network_v1_directory_directory_proto_rawDesc
)

func file_network_v1_directory_directory_proto_rawDescGZIP() []byte {
	file_network_v1_directory_directory_proto_rawDescOnce.Do(func() {
		file_network_v1_directory_directory_proto_rawDescData = protoimpl.X.CompressGZIP(file_network_v1_directory_directory_proto_rawDescData)
	})
	return file_network_v1_directory_directory_proto_rawDescData
}

var file_network_v1_directory_directory_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_network_v1_directory_directory_proto_msgTypes = make([]protoimpl.MessageInfo, 40)
var file_network_v1_directory_directory_proto_goTypes = []interface{}{
	(Listing_Embed_Service)(0),                   // 0: strims.network.v1.directory.Listing.Embed.Service
	(*ServerConfig)(nil),                         // 1: strims.network.v1.directory.ServerConfig
	(*GetEventsRequest)(nil),                     // 2: strims.network.v1.directory.GetEventsRequest
	(*TestPublishRequest)(nil),                   // 3: strims.network.v1.directory.TestPublishRequest
	(*TestPublishResponse)(nil),                  // 4: strims.network.v1.directory.TestPublishResponse
	(*Listing)(nil),                              // 5: strims.network.v1.directory.Listing
	(*ListingSnippet)(nil),                       // 6: strims.network.v1.directory.ListingSnippet
	(*Event)(nil),                                // 7: strims.network.v1.directory.Event
	(*EventBroadcast)(nil),                       // 8: strims.network.v1.directory.EventBroadcast
	(*PublishRequest)(nil),                       // 9: strims.network.v1.directory.PublishRequest
	(*PublishResponse)(nil),                      // 10: strims.network.v1.directory.PublishResponse
	(*UnpublishRequest)(nil),                     // 11: strims.network.v1.directory.UnpublishRequest
	(*UnpublishResponse)(nil),                    // 12: strims.network.v1.directory.UnpublishResponse
	(*JoinRequest)(nil),                          // 13: strims.network.v1.directory.JoinRequest
	(*JoinResponse)(nil),                         // 14: strims.network.v1.directory.JoinResponse
	(*PartRequest)(nil),                          // 15: strims.network.v1.directory.PartRequest
	(*PartResponse)(nil),                         // 16: strims.network.v1.directory.PartResponse
	(*PingRequest)(nil),                          // 17: strims.network.v1.directory.PingRequest
	(*PingResponse)(nil),                         // 18: strims.network.v1.directory.PingResponse
	(*FrontendOpenRequest)(nil),                  // 19: strims.network.v1.directory.FrontendOpenRequest
	(*FrontendOpenResponse)(nil),                 // 20: strims.network.v1.directory.FrontendOpenResponse
	(*FrontendTestRequest)(nil),                  // 21: strims.network.v1.directory.FrontendTestRequest
	(*FrontendTestResponse)(nil),                 // 22: strims.network.v1.directory.FrontendTestResponse
	(*SnippetSubscribeRequest)(nil),              // 23: strims.network.v1.directory.SnippetSubscribeRequest
	(*SnippetSubscribeResponse)(nil),             // 24: strims.network.v1.directory.SnippetSubscribeResponse
	(*ServerConfig_Integrations)(nil),            // 25: strims.network.v1.directory.ServerConfig.Integrations
	(*ServerConfig_Integrations_AngelThump)(nil), // 26: strims.network.v1.directory.ServerConfig.Integrations.AngelThump
	(*ServerConfig_Integrations_Twitch)(nil),     // 27: strims.network.v1.directory.ServerConfig.Integrations.Twitch
	(*ServerConfig_Integrations_YouTube)(nil),    // 28: strims.network.v1.directory.ServerConfig.Integrations.YouTube
	(*ServerConfig_Integrations_Swarm)(nil),      // 29: strims.network.v1.directory.ServerConfig.Integrations.Swarm
	(*Listing_Media)(nil),                        // 30: strims.network.v1.directory.Listing.Media
	(*Listing_Service)(nil),                      // 31: strims.network.v1.directory.Listing.Service
	(*Listing_Embed)(nil),                        // 32: strims.network.v1.directory.Listing.Embed
	(*ListingSnippet_Image)(nil),                 // 33: strims.network.v1.directory.ListingSnippet.Image
	(*Event_ListingChange)(nil),                  // 34: strims.network.v1.directory.Event.ListingChange
	(*Event_Unpublish)(nil),                      // 35: strims.network.v1.directory.Event.Unpublish
	(*Event_ViewerCountChange)(nil),              // 36: strims.network.v1.directory.Event.ViewerCountChange
	(*Event_ViewerStateChange)(nil),              // 37: strims.network.v1.directory.Event.ViewerStateChange
	(*Event_Ping)(nil),                           // 38: strims.network.v1.directory.Event.Ping
	(*FrontendOpenResponse_Close)(nil),           // 39: strims.network.v1.directory.FrontendOpenResponse.Close
	(*SnippetSubscribeResponse_Tags)(nil),        // 40: strims.network.v1.directory.SnippetSubscribeResponse.Tags
	(*wrapperspb.StringValue)(nil),               // 41: google.protobuf.StringValue
	(*wrapperspb.UInt32Value)(nil),               // 42: google.protobuf.UInt32Value
	(*wrapperspb.BoolValue)(nil),                 // 43: google.protobuf.BoolValue
	(*image.Image)(nil),                          // 44: strims.type.Image
}
var file_network_v1_directory_directory_proto_depIdxs = []int32{
	25, // 0: strims.network.v1.directory.ServerConfig.integrations:type_name -> strims.network.v1.directory.ServerConfig.Integrations
	30, // 1: strims.network.v1.directory.Listing.media:type_name -> strims.network.v1.directory.Listing.Media
	31, // 2: strims.network.v1.directory.Listing.service:type_name -> strims.network.v1.directory.Listing.Service
	32, // 3: strims.network.v1.directory.Listing.embed:type_name -> strims.network.v1.directory.Listing.Embed
	33, // 4: strims.network.v1.directory.ListingSnippet.thumbnail:type_name -> strims.network.v1.directory.ListingSnippet.Image
	33, // 5: strims.network.v1.directory.ListingSnippet.channel_logo:type_name -> strims.network.v1.directory.ListingSnippet.Image
	34, // 6: strims.network.v1.directory.Event.listing_change:type_name -> strims.network.v1.directory.Event.ListingChange
	35, // 7: strims.network.v1.directory.Event.unpublish:type_name -> strims.network.v1.directory.Event.Unpublish
	36, // 8: strims.network.v1.directory.Event.viewer_count_change:type_name -> strims.network.v1.directory.Event.ViewerCountChange
	37, // 9: strims.network.v1.directory.Event.viewer_state_change:type_name -> strims.network.v1.directory.Event.ViewerStateChange
	38, // 10: strims.network.v1.directory.Event.ping:type_name -> strims.network.v1.directory.Event.Ping
	7,  // 11: strims.network.v1.directory.EventBroadcast.events:type_name -> strims.network.v1.directory.Event
	5,  // 12: strims.network.v1.directory.PublishRequest.listing:type_name -> strims.network.v1.directory.Listing
	39, // 13: strims.network.v1.directory.FrontendOpenResponse.close:type_name -> strims.network.v1.directory.FrontendOpenResponse.Close
	8,  // 14: strims.network.v1.directory.FrontendOpenResponse.broadcast:type_name -> strims.network.v1.directory.EventBroadcast
	41, // 15: strims.network.v1.directory.SnippetSubscribeResponse.title:type_name -> google.protobuf.StringValue
	41, // 16: strims.network.v1.directory.SnippetSubscribeResponse.description:type_name -> google.protobuf.StringValue
	41, // 17: strims.network.v1.directory.SnippetSubscribeResponse.category:type_name -> google.protobuf.StringValue
	41, // 18: strims.network.v1.directory.SnippetSubscribeResponse.channel_name:type_name -> google.protobuf.StringValue
	42, // 19: strims.network.v1.directory.SnippetSubscribeResponse.viewer_count:type_name -> google.protobuf.UInt32Value
	43, // 20: strims.network.v1.directory.SnippetSubscribeResponse.live:type_name -> google.protobuf.BoolValue
	43, // 21: strims.network.v1.directory.SnippetSubscribeResponse.is_mature:type_name -> google.protobuf.BoolValue
	40, // 22: strims.network.v1.directory.SnippetSubscribeResponse.tags:type_name -> strims.network.v1.directory.SnippetSubscribeResponse.Tags
	44, // 23: strims.network.v1.directory.SnippetSubscribeResponse.thumbnail_image:type_name -> strims.type.Image
	44, // 24: strims.network.v1.directory.SnippetSubscribeResponse.channel_logo_image:type_name -> strims.type.Image
	26, // 25: strims.network.v1.directory.ServerConfig.Integrations.angelthump:type_name -> strims.network.v1.directory.ServerConfig.Integrations.AngelThump
	27, // 26: strims.network.v1.directory.ServerConfig.Integrations.twitch:type_name -> strims.network.v1.directory.ServerConfig.Integrations.Twitch
	28, // 27: strims.network.v1.directory.ServerConfig.Integrations.youtube:type_name -> strims.network.v1.directory.ServerConfig.Integrations.YouTube
	29, // 28: strims.network.v1.directory.ServerConfig.Integrations.swarm:type_name -> strims.network.v1.directory.ServerConfig.Integrations.Swarm
	0,  // 29: strims.network.v1.directory.Listing.Embed.service:type_name -> strims.network.v1.directory.Listing.Embed.Service
	44, // 30: strims.network.v1.directory.ListingSnippet.Image.image:type_name -> strims.type.Image
	5,  // 31: strims.network.v1.directory.Event.ListingChange.listing:type_name -> strims.network.v1.directory.Listing
	6,  // 32: strims.network.v1.directory.Event.ListingChange.snippet:type_name -> strims.network.v1.directory.ListingSnippet
	9,  // 33: strims.network.v1.directory.Directory.Publish:input_type -> strims.network.v1.directory.PublishRequest
	11, // 34: strims.network.v1.directory.Directory.Unpublish:input_type -> strims.network.v1.directory.UnpublishRequest
	13, // 35: strims.network.v1.directory.Directory.Join:input_type -> strims.network.v1.directory.JoinRequest
	15, // 36: strims.network.v1.directory.Directory.Part:input_type -> strims.network.v1.directory.PartRequest
	17, // 37: strims.network.v1.directory.Directory.Ping:input_type -> strims.network.v1.directory.PingRequest
	19, // 38: strims.network.v1.directory.DirectoryFrontend.Open:input_type -> strims.network.v1.directory.FrontendOpenRequest
	21, // 39: strims.network.v1.directory.DirectoryFrontend.Test:input_type -> strims.network.v1.directory.FrontendTestRequest
	23, // 40: strims.network.v1.directory.DirectorySnippet.Subscribe:input_type -> strims.network.v1.directory.SnippetSubscribeRequest
	10, // 41: strims.network.v1.directory.Directory.Publish:output_type -> strims.network.v1.directory.PublishResponse
	12, // 42: strims.network.v1.directory.Directory.Unpublish:output_type -> strims.network.v1.directory.UnpublishResponse
	14, // 43: strims.network.v1.directory.Directory.Join:output_type -> strims.network.v1.directory.JoinResponse
	16, // 44: strims.network.v1.directory.Directory.Part:output_type -> strims.network.v1.directory.PartResponse
	18, // 45: strims.network.v1.directory.Directory.Ping:output_type -> strims.network.v1.directory.PingResponse
	20, // 46: strims.network.v1.directory.DirectoryFrontend.Open:output_type -> strims.network.v1.directory.FrontendOpenResponse
	22, // 47: strims.network.v1.directory.DirectoryFrontend.Test:output_type -> strims.network.v1.directory.FrontendTestResponse
	24, // 48: strims.network.v1.directory.DirectorySnippet.Subscribe:output_type -> strims.network.v1.directory.SnippetSubscribeResponse
	41, // [41:49] is the sub-list for method output_type
	33, // [33:41] is the sub-list for method input_type
	33, // [33:33] is the sub-list for extension type_name
	33, // [33:33] is the sub-list for extension extendee
	0,  // [0:33] is the sub-list for field type_name
}

func init() { file_network_v1_directory_directory_proto_init() }
func file_network_v1_directory_directory_proto_init() {
	if File_network_v1_directory_directory_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_network_v1_directory_directory_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestPublishRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestPublishResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Listing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListingSnippet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventBroadcast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnpublishRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnpublishResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PartResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontendOpenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontendOpenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontendTestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontendTestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnippetSubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnippetSubscribeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerConfig_Integrations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerConfig_Integrations_AngelThump); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerConfig_Integrations_Twitch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerConfig_Integrations_YouTube); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerConfig_Integrations_Swarm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Listing_Media); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Listing_Service); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Listing_Embed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListingSnippet_Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event_ListingChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event_Unpublish); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event_ViewerCountChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event_ViewerStateChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event_Ping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontendOpenResponse_Close); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnippetSubscribeResponse_Tags); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_network_v1_directory_directory_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*Listing_Media_)(nil),
		(*Listing_Service_)(nil),
		(*Listing_Embed_)(nil),
	}
	file_network_v1_directory_directory_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*Event_ListingChange_)(nil),
		(*Event_Unpublish_)(nil),
		(*Event_ViewerCountChange_)(nil),
		(*Event_ViewerStateChange_)(nil),
		(*Event_Ping_)(nil),
	}
	file_network_v1_directory_directory_proto_msgTypes[19].OneofWrappers = []interface{}{
		(*FrontendOpenResponse_Close_)(nil),
		(*FrontendOpenResponse_Broadcast)(nil),
	}
	file_network_v1_directory_directory_proto_msgTypes[23].OneofWrappers = []interface{}{
		(*SnippetSubscribeResponse_Tags_)(nil),
		(*SnippetSubscribeResponse_ThumbnailImage)(nil),
		(*SnippetSubscribeResponse_ChannelLogoImage)(nil),
	}
	file_network_v1_directory_directory_proto_msgTypes[32].OneofWrappers = []interface{}{
		(*ListingSnippet_Image_Url)(nil),
		(*ListingSnippet_Image_Image)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_network_v1_directory_directory_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   40,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_network_v1_directory_directory_proto_goTypes,
		DependencyIndexes: file_network_v1_directory_directory_proto_depIdxs,
		EnumInfos:         file_network_v1_directory_directory_proto_enumTypes,
		MessageInfos:      file_network_v1_directory_directory_proto_msgTypes,
	}.Build()
	File_network_v1_directory_directory_proto = out.File
	file_network_v1_directory_directory_proto_rawDesc = nil
	file_network_v1_directory_directory_proto_goTypes = nil
	file_network_v1_directory_directory_proto_depIdxs = nil
}
