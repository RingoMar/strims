// Copyright 2022 Strims contributors
// SPDX-License-Identifier: AGPL-3.0-only

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.20.1
// source: network/v1/directory/directory.proto

package networkv1directory

import (
	image "github.com/MemeLabs/strims/pkg/apis/type/image"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListingContentType int32

const (
	ListingContentType_LISTING_CONTENT_TYPE_UNDEFINED ListingContentType = 0
	ListingContentType_LISTING_CONTENT_TYPE_MEDIA     ListingContentType = 1
	ListingContentType_LISTING_CONTENT_TYPE_SERVICE   ListingContentType = 2
	ListingContentType_LISTING_CONTENT_TYPE_EMBED     ListingContentType = 3
	ListingContentType_LISTING_CONTENT_TYPE_CHAT      ListingContentType = 4
)

// Enum value maps for ListingContentType.
var (
	ListingContentType_name = map[int32]string{
		0: "LISTING_CONTENT_TYPE_UNDEFINED",
		1: "LISTING_CONTENT_TYPE_MEDIA",
		2: "LISTING_CONTENT_TYPE_SERVICE",
		3: "LISTING_CONTENT_TYPE_EMBED",
		4: "LISTING_CONTENT_TYPE_CHAT",
	}
	ListingContentType_value = map[string]int32{
		"LISTING_CONTENT_TYPE_UNDEFINED": 0,
		"LISTING_CONTENT_TYPE_MEDIA":     1,
		"LISTING_CONTENT_TYPE_SERVICE":   2,
		"LISTING_CONTENT_TYPE_EMBED":     3,
		"LISTING_CONTENT_TYPE_CHAT":      4,
	}
)

func (x ListingContentType) Enum() *ListingContentType {
	p := new(ListingContentType)
	*p = x
	return p
}

func (x ListingContentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListingContentType) Descriptor() protoreflect.EnumDescriptor {
	return file_network_v1_directory_directory_proto_enumTypes[0].Descriptor()
}

func (ListingContentType) Type() protoreflect.EnumType {
	return &file_network_v1_directory_directory_proto_enumTypes[0]
}

func (x ListingContentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListingContentType.Descriptor instead.
func (ListingContentType) EnumDescriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{0}
}

type Listing_Embed_Service int32

const (
	Listing_Embed_DIRECTORY_LISTING_EMBED_SERVICE_UNDEFINED     Listing_Embed_Service = 0
	Listing_Embed_DIRECTORY_LISTING_EMBED_SERVICE_ANGELTHUMP    Listing_Embed_Service = 1
	Listing_Embed_DIRECTORY_LISTING_EMBED_SERVICE_TWITCH_STREAM Listing_Embed_Service = 2
	Listing_Embed_DIRECTORY_LISTING_EMBED_SERVICE_TWITCH_VOD    Listing_Embed_Service = 3
	Listing_Embed_DIRECTORY_LISTING_EMBED_SERVICE_YOUTUBE       Listing_Embed_Service = 4
)

// Enum value maps for Listing_Embed_Service.
var (
	Listing_Embed_Service_name = map[int32]string{
		0: "DIRECTORY_LISTING_EMBED_SERVICE_UNDEFINED",
		1: "DIRECTORY_LISTING_EMBED_SERVICE_ANGELTHUMP",
		2: "DIRECTORY_LISTING_EMBED_SERVICE_TWITCH_STREAM",
		3: "DIRECTORY_LISTING_EMBED_SERVICE_TWITCH_VOD",
		4: "DIRECTORY_LISTING_EMBED_SERVICE_YOUTUBE",
	}
	Listing_Embed_Service_value = map[string]int32{
		"DIRECTORY_LISTING_EMBED_SERVICE_UNDEFINED":     0,
		"DIRECTORY_LISTING_EMBED_SERVICE_ANGELTHUMP":    1,
		"DIRECTORY_LISTING_EMBED_SERVICE_TWITCH_STREAM": 2,
		"DIRECTORY_LISTING_EMBED_SERVICE_TWITCH_VOD":    3,
		"DIRECTORY_LISTING_EMBED_SERVICE_YOUTUBE":       4,
	}
)

func (x Listing_Embed_Service) Enum() *Listing_Embed_Service {
	p := new(Listing_Embed_Service)
	*p = x
	return p
}

func (x Listing_Embed_Service) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Listing_Embed_Service) Descriptor() protoreflect.EnumDescriptor {
	return file_network_v1_directory_directory_proto_enumTypes[1].Descriptor()
}

func (Listing_Embed_Service) Type() protoreflect.EnumType {
	return &file_network_v1_directory_directory_proto_enumTypes[1]
}

func (x Listing_Embed_Service) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Listing_Embed_Service.Descriptor instead.
func (Listing_Embed_Service) EnumDescriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{5, 2, 0}
}

type FrontendWatchListingUsersResponse_UserEventType int32

const (
	FrontendWatchListingUsersResponse_USER_EVENT_TYPE_JOIN   FrontendWatchListingUsersResponse_UserEventType = 0
	FrontendWatchListingUsersResponse_USER_EVENT_TYPE_PART   FrontendWatchListingUsersResponse_UserEventType = 1
	FrontendWatchListingUsersResponse_USER_EVENT_TYPE_RENAME FrontendWatchListingUsersResponse_UserEventType = 2
)

// Enum value maps for FrontendWatchListingUsersResponse_UserEventType.
var (
	FrontendWatchListingUsersResponse_UserEventType_name = map[int32]string{
		0: "USER_EVENT_TYPE_JOIN",
		1: "USER_EVENT_TYPE_PART",
		2: "USER_EVENT_TYPE_RENAME",
	}
	FrontendWatchListingUsersResponse_UserEventType_value = map[string]int32{
		"USER_EVENT_TYPE_JOIN":   0,
		"USER_EVENT_TYPE_PART":   1,
		"USER_EVENT_TYPE_RENAME": 2,
	}
)

func (x FrontendWatchListingUsersResponse_UserEventType) Enum() *FrontendWatchListingUsersResponse_UserEventType {
	p := new(FrontendWatchListingUsersResponse_UserEventType)
	*p = x
	return p
}

func (x FrontendWatchListingUsersResponse_UserEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FrontendWatchListingUsersResponse_UserEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_network_v1_directory_directory_proto_enumTypes[2].Descriptor()
}

func (FrontendWatchListingUsersResponse_UserEventType) Type() protoreflect.EnumType {
	return &file_network_v1_directory_directory_proto_enumTypes[2]
}

func (x FrontendWatchListingUsersResponse_UserEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FrontendWatchListingUsersResponse_UserEventType.Descriptor instead.
func (FrontendWatchListingUsersResponse_UserEventType) EnumDescriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{54, 0}
}

type ServerConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Integrations          *ServerConfig_Integrations `protobuf:"bytes,1,opt,name=integrations,proto3" json:"integrations,omitempty"`
	PublishQuota          uint32                     `protobuf:"varint,2,opt,name=publish_quota,json=publishQuota,proto3" json:"publish_quota,omitempty"`
	JoinQuota             uint32                     `protobuf:"varint,3,opt,name=join_quota,json=joinQuota,proto3" json:"join_quota,omitempty"`
	BroadcastInterval     uint32                     `protobuf:"varint,4,opt,name=broadcast_interval,json=broadcastInterval,proto3" json:"broadcast_interval,omitempty"`
	RefreshInterval       uint32                     `protobuf:"varint,5,opt,name=refresh_interval,json=refreshInterval,proto3" json:"refresh_interval,omitempty"`
	SessionTimeout        uint32                     `protobuf:"varint,6,opt,name=session_timeout,json=sessionTimeout,proto3" json:"session_timeout,omitempty"`
	MinPingInterval       uint32                     `protobuf:"varint,7,opt,name=min_ping_interval,json=minPingInterval,proto3" json:"min_ping_interval,omitempty"`
	MaxPingInterval       uint32                     `protobuf:"varint,8,opt,name=max_ping_interval,json=maxPingInterval,proto3" json:"max_ping_interval,omitempty"`
	EmbedLoadInterval     uint32                     `protobuf:"varint,9,opt,name=embed_load_interval,json=embedLoadInterval,proto3" json:"embed_load_interval,omitempty"`
	LoadMediaEmbedTimeout uint32                     `protobuf:"varint,10,opt,name=load_media_embed_timeout,json=loadMediaEmbedTimeout,proto3" json:"load_media_embed_timeout,omitempty"`
}

func (x *ServerConfig) Reset() {
	*x = ServerConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerConfig) ProtoMessage() {}

func (x *ServerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerConfig.ProtoReflect.Descriptor instead.
func (*ServerConfig) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{0}
}

func (x *ServerConfig) GetIntegrations() *ServerConfig_Integrations {
	if x != nil {
		return x.Integrations
	}
	return nil
}

func (x *ServerConfig) GetPublishQuota() uint32 {
	if x != nil {
		return x.PublishQuota
	}
	return 0
}

func (x *ServerConfig) GetJoinQuota() uint32 {
	if x != nil {
		return x.JoinQuota
	}
	return 0
}

func (x *ServerConfig) GetBroadcastInterval() uint32 {
	if x != nil {
		return x.BroadcastInterval
	}
	return 0
}

func (x *ServerConfig) GetRefreshInterval() uint32 {
	if x != nil {
		return x.RefreshInterval
	}
	return 0
}

func (x *ServerConfig) GetSessionTimeout() uint32 {
	if x != nil {
		return x.SessionTimeout
	}
	return 0
}

func (x *ServerConfig) GetMinPingInterval() uint32 {
	if x != nil {
		return x.MinPingInterval
	}
	return 0
}

func (x *ServerConfig) GetMaxPingInterval() uint32 {
	if x != nil {
		return x.MaxPingInterval
	}
	return 0
}

func (x *ServerConfig) GetEmbedLoadInterval() uint32 {
	if x != nil {
		return x.EmbedLoadInterval
	}
	return 0
}

func (x *ServerConfig) GetLoadMediaEmbedTimeout() uint32 {
	if x != nil {
		return x.LoadMediaEmbedTimeout
	}
	return 0
}

type ClientConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Integrations    *ClientConfig_Integrations `protobuf:"bytes,1,opt,name=integrations,proto3" json:"integrations,omitempty"`
	PublishQuota    uint32                     `protobuf:"varint,2,opt,name=publish_quota,json=publishQuota,proto3" json:"publish_quota,omitempty"`
	JoinQuota       uint32                     `protobuf:"varint,3,opt,name=join_quota,json=joinQuota,proto3" json:"join_quota,omitempty"`
	MinPingInterval uint32                     `protobuf:"varint,4,opt,name=min_ping_interval,json=minPingInterval,proto3" json:"min_ping_interval,omitempty"`
	MaxPingInterval uint32                     `protobuf:"varint,5,opt,name=max_ping_interval,json=maxPingInterval,proto3" json:"max_ping_interval,omitempty"`
}

func (x *ClientConfig) Reset() {
	*x = ClientConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientConfig) ProtoMessage() {}

func (x *ClientConfig) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientConfig.ProtoReflect.Descriptor instead.
func (*ClientConfig) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{1}
}

func (x *ClientConfig) GetIntegrations() *ClientConfig_Integrations {
	if x != nil {
		return x.Integrations
	}
	return nil
}

func (x *ClientConfig) GetPublishQuota() uint32 {
	if x != nil {
		return x.PublishQuota
	}
	return 0
}

func (x *ClientConfig) GetJoinQuota() uint32 {
	if x != nil {
		return x.JoinQuota
	}
	return 0
}

func (x *ClientConfig) GetMinPingInterval() uint32 {
	if x != nil {
		return x.MinPingInterval
	}
	return 0
}

func (x *ClientConfig) GetMaxPingInterval() uint32 {
	if x != nil {
		return x.MaxPingInterval
	}
	return 0
}

type GetEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkKey []byte `protobuf:"bytes,1,opt,name=network_key,json=networkKey,proto3" json:"network_key,omitempty"`
}

func (x *GetEventsRequest) Reset() {
	*x = GetEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsRequest) ProtoMessage() {}

func (x *GetEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsRequest.ProtoReflect.Descriptor instead.
func (*GetEventsRequest) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{2}
}

func (x *GetEventsRequest) GetNetworkKey() []byte {
	if x != nil {
		return x.NetworkKey
	}
	return nil
}

type TestPublishRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkKey []byte `protobuf:"bytes,1,opt,name=network_key,json=networkKey,proto3" json:"network_key,omitempty"`
}

func (x *TestPublishRequest) Reset() {
	*x = TestPublishRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestPublishRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestPublishRequest) ProtoMessage() {}

func (x *TestPublishRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestPublishRequest.ProtoReflect.Descriptor instead.
func (*TestPublishRequest) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{3}
}

func (x *TestPublishRequest) GetNetworkKey() []byte {
	if x != nil {
		return x.NetworkKey
	}
	return nil
}

type TestPublishResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TestPublishResponse) Reset() {
	*x = TestPublishResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestPublishResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestPublishResponse) ProtoMessage() {}

func (x *TestPublishResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestPublishResponse.ProtoReflect.Descriptor instead.
func (*TestPublishResponse) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{4}
}

type Listing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Content:
	//	*Listing_Media_
	//	*Listing_Service_
	//	*Listing_Embed_
	//	*Listing_Chat_
	Content isListing_Content `protobuf_oneof:"content"`
}

func (x *Listing) Reset() {
	*x = Listing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Listing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Listing) ProtoMessage() {}

func (x *Listing) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Listing.ProtoReflect.Descriptor instead.
func (*Listing) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{5}
}

func (m *Listing) GetContent() isListing_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (x *Listing) GetMedia() *Listing_Media {
	if x, ok := x.GetContent().(*Listing_Media_); ok {
		return x.Media
	}
	return nil
}

func (x *Listing) GetService() *Listing_Service {
	if x, ok := x.GetContent().(*Listing_Service_); ok {
		return x.Service
	}
	return nil
}

func (x *Listing) GetEmbed() *Listing_Embed {
	if x, ok := x.GetContent().(*Listing_Embed_); ok {
		return x.Embed
	}
	return nil
}

func (x *Listing) GetChat() *Listing_Chat {
	if x, ok := x.GetContent().(*Listing_Chat_); ok {
		return x.Chat
	}
	return nil
}

type isListing_Content interface {
	isListing_Content()
}

type Listing_Media_ struct {
	Media *Listing_Media `protobuf:"bytes,1001,opt,name=media,proto3,oneof"`
}

type Listing_Service_ struct {
	Service *Listing_Service `protobuf:"bytes,1002,opt,name=service,proto3,oneof"`
}

type Listing_Embed_ struct {
	Embed *Listing_Embed `protobuf:"bytes,1003,opt,name=embed,proto3,oneof"`
}

type Listing_Chat_ struct {
	Chat *Listing_Chat `protobuf:"bytes,1004,opt,name=chat,proto3,oneof"`
}

func (*Listing_Media_) isListing_Content() {}

func (*Listing_Service_) isListing_Content() {}

func (*Listing_Embed_) isListing_Content() {}

func (*Listing_Chat_) isListing_Content() {}

type ListingSnippetImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to SourceOneof:
	//	*ListingSnippetImage_Url
	//	*ListingSnippetImage_Image
	SourceOneof isListingSnippetImage_SourceOneof `protobuf_oneof:"source_oneof"`
}

func (x *ListingSnippetImage) Reset() {
	*x = ListingSnippetImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListingSnippetImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListingSnippetImage) ProtoMessage() {}

func (x *ListingSnippetImage) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListingSnippetImage.ProtoReflect.Descriptor instead.
func (*ListingSnippetImage) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{6}
}

func (m *ListingSnippetImage) GetSourceOneof() isListingSnippetImage_SourceOneof {
	if m != nil {
		return m.SourceOneof
	}
	return nil
}

func (x *ListingSnippetImage) GetUrl() string {
	if x, ok := x.GetSourceOneof().(*ListingSnippetImage_Url); ok {
		return x.Url
	}
	return ""
}

func (x *ListingSnippetImage) GetImage() *image.Image {
	if x, ok := x.GetSourceOneof().(*ListingSnippetImage_Image); ok {
		return x.Image
	}
	return nil
}

type isListingSnippetImage_SourceOneof interface {
	isListingSnippetImage_SourceOneof()
}

type ListingSnippetImage_Url struct {
	Url string `protobuf:"bytes,1001,opt,name=url,proto3,oneof"`
}

type ListingSnippetImage_Image struct {
	Image *image.Image `protobuf:"bytes,1002,opt,name=image,proto3,oneof"`
}

func (*ListingSnippetImage_Url) isListingSnippetImage_SourceOneof() {}

func (*ListingSnippetImage_Image) isListingSnippetImage_SourceOneof() {}

type ListingSnippet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string               `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description string               `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Tags        []string             `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
	Category    string               `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
	ChannelName string               `protobuf:"bytes,5,opt,name=channel_name,json=channelName,proto3" json:"channel_name,omitempty"`
	UserCount   uint64               `protobuf:"varint,6,opt,name=user_count,json=userCount,proto3" json:"user_count,omitempty"`
	Live        bool                 `protobuf:"varint,7,opt,name=live,proto3" json:"live,omitempty"`
	IsMature    bool                 `protobuf:"varint,8,opt,name=is_mature,json=isMature,proto3" json:"is_mature,omitempty"`
	Thumbnail   *ListingSnippetImage `protobuf:"bytes,9,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"`
	ChannelLogo *ListingSnippetImage `protobuf:"bytes,10,opt,name=channel_logo,json=channelLogo,proto3" json:"channel_logo,omitempty"`
	VideoHeight uint32               `protobuf:"varint,11,opt,name=video_height,json=videoHeight,proto3" json:"video_height,omitempty"`
	VideoWidth  uint32               `protobuf:"varint,12,opt,name=video_width,json=videoWidth,proto3" json:"video_width,omitempty"`
	ThemeColor  uint32               `protobuf:"fixed32,13,opt,name=theme_color,json=themeColor,proto3" json:"theme_color,omitempty"`
	StartTime   int64                `protobuf:"varint,14,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	Key         []byte               `protobuf:"bytes,10001,opt,name=key,proto3" json:"key,omitempty"`
	Signature   []byte               `protobuf:"bytes,10002,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *ListingSnippet) Reset() {
	*x = ListingSnippet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListingSnippet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListingSnippet) ProtoMessage() {}

func (x *ListingSnippet) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListingSnippet.ProtoReflect.Descriptor instead.
func (*ListingSnippet) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{7}
}

func (x *ListingSnippet) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ListingSnippet) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ListingSnippet) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ListingSnippet) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *ListingSnippet) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

func (x *ListingSnippet) GetUserCount() uint64 {
	if x != nil {
		return x.UserCount
	}
	return 0
}

func (x *ListingSnippet) GetLive() bool {
	if x != nil {
		return x.Live
	}
	return false
}

func (x *ListingSnippet) GetIsMature() bool {
	if x != nil {
		return x.IsMature
	}
	return false
}

func (x *ListingSnippet) GetThumbnail() *ListingSnippetImage {
	if x != nil {
		return x.Thumbnail
	}
	return nil
}

func (x *ListingSnippet) GetChannelLogo() *ListingSnippetImage {
	if x != nil {
		return x.ChannelLogo
	}
	return nil
}

func (x *ListingSnippet) GetVideoHeight() uint32 {
	if x != nil {
		return x.VideoHeight
	}
	return 0
}

func (x *ListingSnippet) GetVideoWidth() uint32 {
	if x != nil {
		return x.VideoWidth
	}
	return 0
}

func (x *ListingSnippet) GetThemeColor() uint32 {
	if x != nil {
		return x.ThemeColor
	}
	return 0
}

func (x *ListingSnippet) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ListingSnippet) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *ListingSnippet) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type ListingSnippetDelta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Category    *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	ChannelName *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=channel_name,json=channelName,proto3" json:"channel_name,omitempty"`
	UserCount   *wrapperspb.UInt64Value `protobuf:"bytes,5,opt,name=user_count,json=userCount,proto3" json:"user_count,omitempty"`
	Live        *wrapperspb.BoolValue   `protobuf:"bytes,6,opt,name=live,proto3" json:"live,omitempty"`
	IsMature    *wrapperspb.BoolValue   `protobuf:"bytes,7,opt,name=is_mature,json=isMature,proto3" json:"is_mature,omitempty"`
	Key         *wrapperspb.BytesValue  `protobuf:"bytes,8,opt,name=key,proto3" json:"key,omitempty"`
	Signature   *wrapperspb.BytesValue  `protobuf:"bytes,9,opt,name=signature,proto3" json:"signature,omitempty"`
	VideoHeight *wrapperspb.UInt32Value `protobuf:"bytes,10,opt,name=video_height,json=videoHeight,proto3" json:"video_height,omitempty"`
	VideoWidth  *wrapperspb.UInt32Value `protobuf:"bytes,11,opt,name=video_width,json=videoWidth,proto3" json:"video_width,omitempty"`
	ThemeColor  *wrapperspb.UInt32Value `protobuf:"bytes,12,opt,name=theme_color,json=themeColor,proto3" json:"theme_color,omitempty"`
	StartTime   *wrapperspb.Int64Value  `protobuf:"bytes,13,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// Types that are assignable to TagsOneof:
	//	*ListingSnippetDelta_Tags_
	TagsOneof isListingSnippetDelta_TagsOneof `protobuf_oneof:"tags_oneof"`
	// Types that are assignable to ThumbnailOneof:
	//	*ListingSnippetDelta_Thumbnail
	ThumbnailOneof isListingSnippetDelta_ThumbnailOneof `protobuf_oneof:"thumbnail_oneof"`
	// Types that are assignable to ChannelLogoOneof:
	//	*ListingSnippetDelta_ChannelLogo
	ChannelLogoOneof isListingSnippetDelta_ChannelLogoOneof `protobuf_oneof:"channel_logo_oneof"`
}

func (x *ListingSnippetDelta) Reset() {
	*x = ListingSnippetDelta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListingSnippetDelta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListingSnippetDelta) ProtoMessage() {}

func (x *ListingSnippetDelta) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListingSnippetDelta.ProtoReflect.Descriptor instead.
func (*ListingSnippetDelta) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{8}
}

func (x *ListingSnippetDelta) GetTitle() *wrapperspb.StringValue {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *ListingSnippetDelta) GetDescription() *wrapperspb.StringValue {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *ListingSnippetDelta) GetCategory() *wrapperspb.StringValue {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *ListingSnippetDelta) GetChannelName() *wrapperspb.StringValue {
	if x != nil {
		return x.ChannelName
	}
	return nil
}

func (x *ListingSnippetDelta) GetUserCount() *wrapperspb.UInt64Value {
	if x != nil {
		return x.UserCount
	}
	return nil
}

func (x *ListingSnippetDelta) GetLive() *wrapperspb.BoolValue {
	if x != nil {
		return x.Live
	}
	return nil
}

func (x *ListingSnippetDelta) GetIsMature() *wrapperspb.BoolValue {
	if x != nil {
		return x.IsMature
	}
	return nil
}

func (x *ListingSnippetDelta) GetKey() *wrapperspb.BytesValue {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *ListingSnippetDelta) GetSignature() *wrapperspb.BytesValue {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *ListingSnippetDelta) GetVideoHeight() *wrapperspb.UInt32Value {
	if x != nil {
		return x.VideoHeight
	}
	return nil
}

func (x *ListingSnippetDelta) GetVideoWidth() *wrapperspb.UInt32Value {
	if x != nil {
		return x.VideoWidth
	}
	return nil
}

func (x *ListingSnippetDelta) GetThemeColor() *wrapperspb.UInt32Value {
	if x != nil {
		return x.ThemeColor
	}
	return nil
}

func (x *ListingSnippetDelta) GetStartTime() *wrapperspb.Int64Value {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (m *ListingSnippetDelta) GetTagsOneof() isListingSnippetDelta_TagsOneof {
	if m != nil {
		return m.TagsOneof
	}
	return nil
}

func (x *ListingSnippetDelta) GetTags() *ListingSnippetDelta_Tags {
	if x, ok := x.GetTagsOneof().(*ListingSnippetDelta_Tags_); ok {
		return x.Tags
	}
	return nil
}

func (m *ListingSnippetDelta) GetThumbnailOneof() isListingSnippetDelta_ThumbnailOneof {
	if m != nil {
		return m.ThumbnailOneof
	}
	return nil
}

func (x *ListingSnippetDelta) GetThumbnail() *ListingSnippetImage {
	if x, ok := x.GetThumbnailOneof().(*ListingSnippetDelta_Thumbnail); ok {
		return x.Thumbnail
	}
	return nil
}

func (m *ListingSnippetDelta) GetChannelLogoOneof() isListingSnippetDelta_ChannelLogoOneof {
	if m != nil {
		return m.ChannelLogoOneof
	}
	return nil
}

func (x *ListingSnippetDelta) GetChannelLogo() *ListingSnippetImage {
	if x, ok := x.GetChannelLogoOneof().(*ListingSnippetDelta_ChannelLogo); ok {
		return x.ChannelLogo
	}
	return nil
}

type isListingSnippetDelta_TagsOneof interface {
	isListingSnippetDelta_TagsOneof()
}

type ListingSnippetDelta_Tags_ struct {
	Tags *ListingSnippetDelta_Tags `protobuf:"bytes,1001,opt,name=tags,proto3,oneof"`
}

func (*ListingSnippetDelta_Tags_) isListingSnippetDelta_TagsOneof() {}

type isListingSnippetDelta_ThumbnailOneof interface {
	isListingSnippetDelta_ThumbnailOneof()
}

type ListingSnippetDelta_Thumbnail struct {
	Thumbnail *ListingSnippetImage `protobuf:"bytes,2001,opt,name=thumbnail,proto3,oneof"`
}

func (*ListingSnippetDelta_Thumbnail) isListingSnippetDelta_ThumbnailOneof() {}

type isListingSnippetDelta_ChannelLogoOneof interface {
	isListingSnippetDelta_ChannelLogoOneof()
}

type ListingSnippetDelta_ChannelLogo struct {
	ChannelLogo *ListingSnippetImage `protobuf:"bytes,3001,opt,name=channel_logo,json=channelLogo,proto3,oneof"`
}

func (*ListingSnippetDelta_ChannelLogo) isListingSnippetDelta_ChannelLogoOneof() {}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Body:
	//	*Event_ListingChange_
	//	*Event_Unpublish_
	//	*Event_UserCountChange_
	//	*Event_UserPresenceChange_
	//	*Event_Ping_
	Body isEvent_Body `protobuf_oneof:"body"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{9}
}

func (m *Event) GetBody() isEvent_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (x *Event) GetListingChange() *Event_ListingChange {
	if x, ok := x.GetBody().(*Event_ListingChange_); ok {
		return x.ListingChange
	}
	return nil
}

func (x *Event) GetUnpublish() *Event_Unpublish {
	if x, ok := x.GetBody().(*Event_Unpublish_); ok {
		return x.Unpublish
	}
	return nil
}

func (x *Event) GetUserCountChange() *Event_UserCountChange {
	if x, ok := x.GetBody().(*Event_UserCountChange_); ok {
		return x.UserCountChange
	}
	return nil
}

func (x *Event) GetUserPresenceChange() *Event_UserPresenceChange {
	if x, ok := x.GetBody().(*Event_UserPresenceChange_); ok {
		return x.UserPresenceChange
	}
	return nil
}

func (x *Event) GetPing() *Event_Ping {
	if x, ok := x.GetBody().(*Event_Ping_); ok {
		return x.Ping
	}
	return nil
}

type isEvent_Body interface {
	isEvent_Body()
}

type Event_ListingChange_ struct {
	ListingChange *Event_ListingChange `protobuf:"bytes,1001,opt,name=listing_change,json=listingChange,proto3,oneof"`
}

type Event_Unpublish_ struct {
	Unpublish *Event_Unpublish `protobuf:"bytes,1002,opt,name=unpublish,proto3,oneof"`
}

type Event_UserCountChange_ struct {
	UserCountChange *Event_UserCountChange `protobuf:"bytes,1003,opt,name=user_count_change,json=userCountChange,proto3,oneof"`
}

type Event_UserPresenceChange_ struct {
	UserPresenceChange *Event_UserPresenceChange `protobuf:"bytes,1004,opt,name=user_presence_change,json=userPresenceChange,proto3,oneof"`
}

type Event_Ping_ struct {
	Ping *Event_Ping `protobuf:"bytes,1005,opt,name=ping,proto3,oneof"`
}

func (*Event_ListingChange_) isEvent_Body() {}

func (*Event_Unpublish_) isEvent_Body() {}

func (*Event_UserCountChange_) isEvent_Body() {}

func (*Event_UserPresenceChange_) isEvent_Body() {}

func (*Event_Ping_) isEvent_Body() {}

type ListingModeration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsMature *wrapperspb.BoolValue   `protobuf:"bytes,2,opt,name=is_mature,json=isMature,proto3" json:"is_mature,omitempty"`
	IsBanned *wrapperspb.BoolValue   `protobuf:"bytes,3,opt,name=is_banned,json=isBanned,proto3" json:"is_banned,omitempty"`
	Category *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
}

func (x *ListingModeration) Reset() {
	*x = ListingModeration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListingModeration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListingModeration) ProtoMessage() {}

func (x *ListingModeration) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListingModeration.ProtoReflect.Descriptor instead.
func (*ListingModeration) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{10}
}

func (x *ListingModeration) GetIsMature() *wrapperspb.BoolValue {
	if x != nil {
		return x.IsMature
	}
	return nil
}

func (x *ListingModeration) GetIsBanned() *wrapperspb.BoolValue {
	if x != nil {
		return x.IsBanned
	}
	return nil
}

func (x *ListingModeration) GetCategory() *wrapperspb.StringValue {
	if x != nil {
		return x.Category
	}
	return nil
}

type ListingQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Query:
	//	*ListingQuery_Id
	//	*ListingQuery_Listing
	Query isListingQuery_Query `protobuf_oneof:"query"`
}

func (x *ListingQuery) Reset() {
	*x = ListingQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListingQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListingQuery) ProtoMessage() {}

func (x *ListingQuery) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListingQuery.ProtoReflect.Descriptor instead.
func (*ListingQuery) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{11}
}

func (m *ListingQuery) GetQuery() isListingQuery_Query {
	if m != nil {
		return m.Query
	}
	return nil
}

func (x *ListingQuery) GetId() uint64 {
	if x, ok := x.GetQuery().(*ListingQuery_Id); ok {
		return x.Id
	}
	return 0
}

func (x *ListingQuery) GetListing() *Listing {
	if x, ok := x.GetQuery().(*ListingQuery_Listing); ok {
		return x.Listing
	}
	return nil
}

type isListingQuery_Query interface {
	isListingQuery_Query()
}

type ListingQuery_Id struct {
	Id uint64 `protobuf:"varint,1001,opt,name=id,proto3,oneof"`
}

type ListingQuery_Listing struct {
	Listing *Listing `protobuf:"bytes,1002,opt,name=listing,proto3,oneof"`
}

func (*ListingQuery_Id) isListingQuery_Query() {}

func (*ListingQuery_Listing) isListingQuery_Query() {}

type ListingRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	NetworkId  uint64             `protobuf:"varint,2,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	Listing    *Listing           `protobuf:"bytes,3,opt,name=listing,proto3" json:"listing,omitempty"`
	Moderation *ListingModeration `protobuf:"bytes,4,opt,name=moderation,proto3" json:"moderation,omitempty"`
	Notes      string             `protobuf:"bytes,5,opt,name=notes,proto3" json:"notes,omitempty"`
}

func (x *ListingRecord) Reset() {
	*x = ListingRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListingRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListingRecord) ProtoMessage() {}

func (x *ListingRecord) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListingRecord.ProtoReflect.Descriptor instead.
func (*ListingRecord) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{12}
}

func (x *ListingRecord) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListingRecord) GetNetworkId() uint64 {
	if x != nil {
		return x.NetworkId
	}
	return 0
}

func (x *ListingRecord) GetListing() *Listing {
	if x != nil {
		return x.Listing
	}
	return nil
}

func (x *ListingRecord) GetModeration() *ListingModeration {
	if x != nil {
		return x.Moderation
	}
	return nil
}

func (x *ListingRecord) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

type UserModeration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisableJoin    *wrapperspb.BoolValue `protobuf:"bytes,1,opt,name=disable_join,json=disableJoin,proto3" json:"disable_join,omitempty"`
	DisablePublish *wrapperspb.BoolValue `protobuf:"bytes,2,opt,name=disable_publish,json=disablePublish,proto3" json:"disable_publish,omitempty"`
	IsModerator    *wrapperspb.BoolValue `protobuf:"bytes,3,opt,name=is_moderator,json=isModerator,proto3" json:"is_moderator,omitempty"`
	IsAdmin        *wrapperspb.BoolValue `protobuf:"bytes,4,opt,name=is_admin,json=isAdmin,proto3" json:"is_admin,omitempty"`
}

func (x *UserModeration) Reset() {
	*x = UserModeration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserModeration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserModeration) ProtoMessage() {}

func (x *UserModeration) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserModeration.ProtoReflect.Descriptor instead.
func (*UserModeration) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{13}
}

func (x *UserModeration) GetDisableJoin() *wrapperspb.BoolValue {
	if x != nil {
		return x.DisableJoin
	}
	return nil
}

func (x *UserModeration) GetDisablePublish() *wrapperspb.BoolValue {
	if x != nil {
		return x.DisablePublish
	}
	return nil
}

func (x *UserModeration) GetIsModerator() *wrapperspb.BoolValue {
	if x != nil {
		return x.IsModerator
	}
	return nil
}

func (x *UserModeration) GetIsAdmin() *wrapperspb.BoolValue {
	if x != nil {
		return x.IsAdmin
	}
	return nil
}

type UserRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	NetworkId  uint64          `protobuf:"varint,2,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	PeerKey    []byte          `protobuf:"bytes,3,opt,name=peer_key,json=peerKey,proto3" json:"peer_key,omitempty"`
	Moderation *UserModeration `protobuf:"bytes,4,opt,name=moderation,proto3" json:"moderation,omitempty"`
}

func (x *UserRecord) Reset() {
	*x = UserRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRecord) ProtoMessage() {}

func (x *UserRecord) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRecord.ProtoReflect.Descriptor instead.
func (*UserRecord) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{14}
}

func (x *UserRecord) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserRecord) GetNetworkId() uint64 {
	if x != nil {
		return x.NetworkId
	}
	return 0
}

func (x *UserRecord) GetPeerKey() []byte {
	if x != nil {
		return x.PeerKey
	}
	return nil
}

func (x *UserRecord) GetModeration() *UserModeration {
	if x != nil {
		return x.Moderation
	}
	return nil
}

type EventBroadcast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []*Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *EventBroadcast) Reset() {
	*x = EventBroadcast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventBroadcast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventBroadcast) ProtoMessage() {}

func (x *EventBroadcast) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventBroadcast.ProtoReflect.Descriptor instead.
func (*EventBroadcast) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{15}
}

func (x *EventBroadcast) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

type PublishRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Listing *Listing `protobuf:"bytes,1,opt,name=listing,proto3" json:"listing,omitempty"`
}

func (x *PublishRequest) Reset() {
	*x = PublishRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishRequest) ProtoMessage() {}

func (x *PublishRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishRequest.ProtoReflect.Descriptor instead.
func (*PublishRequest) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{16}
}

func (x *PublishRequest) GetListing() *Listing {
	if x != nil {
		return x.Listing
	}
	return nil
}

type PublishResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PublishResponse) Reset() {
	*x = PublishResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishResponse) ProtoMessage() {}

func (x *PublishResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishResponse.ProtoReflect.Descriptor instead.
func (*PublishResponse) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{17}
}

func (x *PublishResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UnpublishRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UnpublishRequest) Reset() {
	*x = UnpublishRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnpublishRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnpublishRequest) ProtoMessage() {}

func (x *UnpublishRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnpublishRequest.ProtoReflect.Descriptor instead.
func (*UnpublishRequest) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{18}
}

func (x *UnpublishRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UnpublishResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnpublishResponse) Reset() {
	*x = UnpublishResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnpublishResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnpublishResponse) ProtoMessage() {}

func (x *UnpublishResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnpublishResponse.ProtoReflect.Descriptor instead.
func (*UnpublishResponse) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{19}
}

type JoinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query *ListingQuery `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *JoinRequest) Reset() {
	*x = JoinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRequest) ProtoMessage() {}

func (x *JoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRequest.ProtoReflect.Descriptor instead.
func (*JoinRequest) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{20}
}

func (x *JoinRequest) GetQuery() *ListingQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

type JoinResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *JoinResponse) Reset() {
	*x = JoinResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinResponse) ProtoMessage() {}

func (x *JoinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinResponse.ProtoReflect.Descriptor instead.
func (*JoinResponse) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{21}
}

func (x *JoinResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type PartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PartRequest) Reset() {
	*x = PartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartRequest) ProtoMessage() {}

func (x *PartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartRequest.ProtoReflect.Descriptor instead.
func (*PartRequest) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{22}
}

func (x *PartRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type PartResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PartResponse) Reset() {
	*x = PartResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartResponse) ProtoMessage() {}

func (x *PartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartResponse.ProtoReflect.Descriptor instead.
func (*PartResponse) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{23}
}

type PingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{24}
}

type PingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{25}
}

type ModerateListingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Moderation *ListingModeration `protobuf:"bytes,2,opt,name=moderation,proto3" json:"moderation,omitempty"`
}

func (x *ModerateListingRequest) Reset() {
	*x = ModerateListingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModerateListingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModerateListingRequest) ProtoMessage() {}

func (x *ModerateListingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModerateListingRequest.ProtoReflect.Descriptor instead.
func (*ModerateListingRequest) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{26}
}

func (x *ModerateListingRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ModerateListingRequest) GetModeration() *ListingModeration {
	if x != nil {
		return x.Moderation
	}
	return nil
}

type ModerateListingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ModerateListingResponse) Reset() {
	*x = ModerateListingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModerateListingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModerateListingResponse) ProtoMessage() {}

func (x *ModerateListingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModerateListingResponse.ProtoReflect.Descriptor instead.
func (*ModerateListingResponse) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{27}
}

type ModerateUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerKey    []byte          `protobuf:"bytes,1,opt,name=peer_key,json=peerKey,proto3" json:"peer_key,omitempty"`
	Moderation *UserModeration `protobuf:"bytes,2,opt,name=moderation,proto3" json:"moderation,omitempty"`
}

func (x *ModerateUserRequest) Reset() {
	*x = ModerateUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModerateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModerateUserRequest) ProtoMessage() {}

func (x *ModerateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModerateUserRequest.ProtoReflect.Descriptor instead.
func (*ModerateUserRequest) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{28}
}

func (x *ModerateUserRequest) GetPeerKey() []byte {
	if x != nil {
		return x.PeerKey
	}
	return nil
}

func (x *ModerateUserRequest) GetModeration() *UserModeration {
	if x != nil {
		return x.Moderation
	}
	return nil
}

type ModerateUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ModerateUserResponse) Reset() {
	*x = ModerateUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModerateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModerateUserResponse) ProtoMessage() {}

func (x *ModerateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModerateUserResponse.ProtoReflect.Descriptor instead.
func (*ModerateUserResponse) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{29}
}

type Network struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Key  []byte `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *Network) Reset() {
	*x = Network{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Network) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Network) ProtoMessage() {}

func (x *Network) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Network.ProtoReflect.Descriptor instead.
func (*Network) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{30}
}

func (x *Network) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Network) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Network) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type NetworkListingsItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              uint64             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Listing         *Listing           `protobuf:"bytes,2,opt,name=listing,proto3" json:"listing,omitempty"`
	Snippet         *ListingSnippet    `protobuf:"bytes,3,opt,name=snippet,proto3" json:"snippet,omitempty"`
	Moderation      *ListingModeration `protobuf:"bytes,4,opt,name=moderation,proto3" json:"moderation,omitempty"`
	UserCount       uint32             `protobuf:"varint,5,opt,name=user_count,json=userCount,proto3" json:"user_count,omitempty"`
	RecentUserCount uint32             `protobuf:"varint,6,opt,name=recent_user_count,json=recentUserCount,proto3" json:"recent_user_count,omitempty"`
}

func (x *NetworkListingsItem) Reset() {
	*x = NetworkListingsItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkListingsItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkListingsItem) ProtoMessage() {}

func (x *NetworkListingsItem) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkListingsItem.ProtoReflect.Descriptor instead.
func (*NetworkListingsItem) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{31}
}

func (x *NetworkListingsItem) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NetworkListingsItem) GetListing() *Listing {
	if x != nil {
		return x.Listing
	}
	return nil
}

func (x *NetworkListingsItem) GetSnippet() *ListingSnippet {
	if x != nil {
		return x.Snippet
	}
	return nil
}

func (x *NetworkListingsItem) GetModeration() *ListingModeration {
	if x != nil {
		return x.Moderation
	}
	return nil
}

func (x *NetworkListingsItem) GetUserCount() uint32 {
	if x != nil {
		return x.UserCount
	}
	return 0
}

func (x *NetworkListingsItem) GetRecentUserCount() uint32 {
	if x != nil {
		return x.RecentUserCount
	}
	return 0
}

type NetworkListings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network  *Network               `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Listings []*NetworkListingsItem `protobuf:"bytes,2,rep,name=listings,proto3" json:"listings,omitempty"`
}

func (x *NetworkListings) Reset() {
	*x = NetworkListings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkListings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkListings) ProtoMessage() {}

func (x *NetworkListings) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkListings.ProtoReflect.Descriptor instead.
func (*NetworkListings) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{32}
}

func (x *NetworkListings) GetNetwork() *Network {
	if x != nil {
		return x.Network
	}
	return nil
}

func (x *NetworkListings) GetListings() []*NetworkListingsItem {
	if x != nil {
		return x.Listings
	}
	return nil
}

type FrontendPublishRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkKey []byte   `protobuf:"bytes,1,opt,name=network_key,json=networkKey,proto3" json:"network_key,omitempty"`
	Listing    *Listing `protobuf:"bytes,2,opt,name=listing,proto3" json:"listing,omitempty"`
}

func (x *FrontendPublishRequest) Reset() {
	*x = FrontendPublishRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendPublishRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendPublishRequest) ProtoMessage() {}

func (x *FrontendPublishRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendPublishRequest.ProtoReflect.Descriptor instead.
func (*FrontendPublishRequest) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{33}
}

func (x *FrontendPublishRequest) GetNetworkKey() []byte {
	if x != nil {
		return x.NetworkKey
	}
	return nil
}

func (x *FrontendPublishRequest) GetListing() *Listing {
	if x != nil {
		return x.Listing
	}
	return nil
}

type FrontendPublishResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *FrontendPublishResponse) Reset() {
	*x = FrontendPublishResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendPublishResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendPublishResponse) ProtoMessage() {}

func (x *FrontendPublishResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendPublishResponse.ProtoReflect.Descriptor instead.
func (*FrontendPublishResponse) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{34}
}

func (x *FrontendPublishResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type FrontendUnpublishRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkKey []byte `protobuf:"bytes,1,opt,name=network_key,json=networkKey,proto3" json:"network_key,omitempty"`
	Id         uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *FrontendUnpublishRequest) Reset() {
	*x = FrontendUnpublishRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendUnpublishRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendUnpublishRequest) ProtoMessage() {}

func (x *FrontendUnpublishRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendUnpublishRequest.ProtoReflect.Descriptor instead.
func (*FrontendUnpublishRequest) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{35}
}

func (x *FrontendUnpublishRequest) GetNetworkKey() []byte {
	if x != nil {
		return x.NetworkKey
	}
	return nil
}

func (x *FrontendUnpublishRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type FrontendUnpublishResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FrontendUnpublishResponse) Reset() {
	*x = FrontendUnpublishResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendUnpublishResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendUnpublishResponse) ProtoMessage() {}

func (x *FrontendUnpublishResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendUnpublishResponse.ProtoReflect.Descriptor instead.
func (*FrontendUnpublishResponse) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{36}
}

type FrontendJoinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkKey []byte        `protobuf:"bytes,1,opt,name=network_key,json=networkKey,proto3" json:"network_key,omitempty"`
	Query      *ListingQuery `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *FrontendJoinRequest) Reset() {
	*x = FrontendJoinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendJoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendJoinRequest) ProtoMessage() {}

func (x *FrontendJoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendJoinRequest.ProtoReflect.Descriptor instead.
func (*FrontendJoinRequest) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{37}
}

func (x *FrontendJoinRequest) GetNetworkKey() []byte {
	if x != nil {
		return x.NetworkKey
	}
	return nil
}

func (x *FrontendJoinRequest) GetQuery() *ListingQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

type FrontendJoinResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *FrontendJoinResponse) Reset() {
	*x = FrontendJoinResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendJoinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendJoinResponse) ProtoMessage() {}

func (x *FrontendJoinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendJoinResponse.ProtoReflect.Descriptor instead.
func (*FrontendJoinResponse) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{38}
}

func (x *FrontendJoinResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type FrontendPartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkKey []byte `protobuf:"bytes,1,opt,name=network_key,json=networkKey,proto3" json:"network_key,omitempty"`
	Id         uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *FrontendPartRequest) Reset() {
	*x = FrontendPartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendPartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendPartRequest) ProtoMessage() {}

func (x *FrontendPartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendPartRequest.ProtoReflect.Descriptor instead.
func (*FrontendPartRequest) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{39}
}

func (x *FrontendPartRequest) GetNetworkKey() []byte {
	if x != nil {
		return x.NetworkKey
	}
	return nil
}

func (x *FrontendPartRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type FrontendPartResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FrontendPartResponse) Reset() {
	*x = FrontendPartResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendPartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendPartResponse) ProtoMessage() {}

func (x *FrontendPartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendPartResponse.ProtoReflect.Descriptor instead.
func (*FrontendPartResponse) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{40}
}

type FrontendTestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkKey []byte `protobuf:"bytes,1,opt,name=network_key,json=networkKey,proto3" json:"network_key,omitempty"`
}

func (x *FrontendTestRequest) Reset() {
	*x = FrontendTestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendTestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendTestRequest) ProtoMessage() {}

func (x *FrontendTestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendTestRequest.ProtoReflect.Descriptor instead.
func (*FrontendTestRequest) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{41}
}

func (x *FrontendTestRequest) GetNetworkKey() []byte {
	if x != nil {
		return x.NetworkKey
	}
	return nil
}

type FrontendTestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FrontendTestResponse) Reset() {
	*x = FrontendTestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendTestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendTestResponse) ProtoMessage() {}

func (x *FrontendTestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendTestResponse.ProtoReflect.Descriptor instead.
func (*FrontendTestResponse) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{42}
}

type FrontendModerateListingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkKey []byte             `protobuf:"bytes,1,opt,name=network_key,json=networkKey,proto3" json:"network_key,omitempty"`
	Id         uint64             `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Moderation *ListingModeration `protobuf:"bytes,3,opt,name=moderation,proto3" json:"moderation,omitempty"`
}

func (x *FrontendModerateListingRequest) Reset() {
	*x = FrontendModerateListingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendModerateListingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendModerateListingRequest) ProtoMessage() {}

func (x *FrontendModerateListingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendModerateListingRequest.ProtoReflect.Descriptor instead.
func (*FrontendModerateListingRequest) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{43}
}

func (x *FrontendModerateListingRequest) GetNetworkKey() []byte {
	if x != nil {
		return x.NetworkKey
	}
	return nil
}

func (x *FrontendModerateListingRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FrontendModerateListingRequest) GetModeration() *ListingModeration {
	if x != nil {
		return x.Moderation
	}
	return nil
}

type FrontendModerateListingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FrontendModerateListingResponse) Reset() {
	*x = FrontendModerateListingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendModerateListingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendModerateListingResponse) ProtoMessage() {}

func (x *FrontendModerateListingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendModerateListingResponse.ProtoReflect.Descriptor instead.
func (*FrontendModerateListingResponse) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{44}
}

type FrontendModerateUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkKey []byte          `protobuf:"bytes,1,opt,name=network_key,json=networkKey,proto3" json:"network_key,omitempty"`
	Alias      string          `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
	Moderation *UserModeration `protobuf:"bytes,3,opt,name=moderation,proto3" json:"moderation,omitempty"`
}

func (x *FrontendModerateUserRequest) Reset() {
	*x = FrontendModerateUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendModerateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendModerateUserRequest) ProtoMessage() {}

func (x *FrontendModerateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendModerateUserRequest.ProtoReflect.Descriptor instead.
func (*FrontendModerateUserRequest) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{45}
}

func (x *FrontendModerateUserRequest) GetNetworkKey() []byte {
	if x != nil {
		return x.NetworkKey
	}
	return nil
}

func (x *FrontendModerateUserRequest) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *FrontendModerateUserRequest) GetModeration() *UserModeration {
	if x != nil {
		return x.Moderation
	}
	return nil
}

type FrontendModerateUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FrontendModerateUserResponse) Reset() {
	*x = FrontendModerateUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendModerateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendModerateUserResponse) ProtoMessage() {}

func (x *FrontendModerateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendModerateUserResponse.ProtoReflect.Descriptor instead.
func (*FrontendModerateUserResponse) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{46}
}

type FrontendGetUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FrontendGetUsersRequest) Reset() {
	*x = FrontendGetUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendGetUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendGetUsersRequest) ProtoMessage() {}

func (x *FrontendGetUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendGetUsersRequest.ProtoReflect.Descriptor instead.
func (*FrontendGetUsersRequest) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{47}
}

type FrontendGetUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users    []*FrontendGetUsersResponse_User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	Networks map[uint64]*Network              `protobuf:"bytes,2,rep,name=networks,proto3" json:"networks,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *FrontendGetUsersResponse) Reset() {
	*x = FrontendGetUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendGetUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendGetUsersResponse) ProtoMessage() {}

func (x *FrontendGetUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendGetUsersResponse.ProtoReflect.Descriptor instead.
func (*FrontendGetUsersResponse) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{48}
}

func (x *FrontendGetUsersResponse) GetUsers() []*FrontendGetUsersResponse_User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *FrontendGetUsersResponse) GetNetworks() map[uint64]*Network {
	if x != nil {
		return x.Networks
	}
	return nil
}

type FrontendGetListingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContentTypes []ListingContentType `protobuf:"varint,1,rep,packed,name=content_types,json=contentTypes,proto3,enum=strims.network.v1.directory.ListingContentType" json:"content_types,omitempty"`
	NetworkKeys  [][]byte             `protobuf:"bytes,2,rep,name=network_keys,json=networkKeys,proto3" json:"network_keys,omitempty"`
}

func (x *FrontendGetListingsRequest) Reset() {
	*x = FrontendGetListingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendGetListingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendGetListingsRequest) ProtoMessage() {}

func (x *FrontendGetListingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendGetListingsRequest.ProtoReflect.Descriptor instead.
func (*FrontendGetListingsRequest) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{49}
}

func (x *FrontendGetListingsRequest) GetContentTypes() []ListingContentType {
	if x != nil {
		return x.ContentTypes
	}
	return nil
}

func (x *FrontendGetListingsRequest) GetNetworkKeys() [][]byte {
	if x != nil {
		return x.NetworkKeys
	}
	return nil
}

type FrontendGetListingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Listings []*NetworkListings `protobuf:"bytes,1,rep,name=listings,proto3" json:"listings,omitempty"`
}

func (x *FrontendGetListingsResponse) Reset() {
	*x = FrontendGetListingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendGetListingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendGetListingsResponse) ProtoMessage() {}

func (x *FrontendGetListingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendGetListingsResponse.ProtoReflect.Descriptor instead.
func (*FrontendGetListingsResponse) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{50}
}

func (x *FrontendGetListingsResponse) GetListings() []*NetworkListings {
	if x != nil {
		return x.Listings
	}
	return nil
}

type FrontendWatchListingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContentTypes []ListingContentType `protobuf:"varint,1,rep,packed,name=content_types,json=contentTypes,proto3,enum=strims.network.v1.directory.ListingContentType" json:"content_types,omitempty"`
	NetworkKeys  [][]byte             `protobuf:"bytes,2,rep,name=network_keys,json=networkKeys,proto3" json:"network_keys,omitempty"`
	ListingId    uint64               `protobuf:"varint,3,opt,name=listing_id,json=listingId,proto3" json:"listing_id,omitempty"`
}

func (x *FrontendWatchListingsRequest) Reset() {
	*x = FrontendWatchListingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendWatchListingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendWatchListingsRequest) ProtoMessage() {}

func (x *FrontendWatchListingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendWatchListingsRequest.ProtoReflect.Descriptor instead.
func (*FrontendWatchListingsRequest) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{51}
}

func (x *FrontendWatchListingsRequest) GetContentTypes() []ListingContentType {
	if x != nil {
		return x.ContentTypes
	}
	return nil
}

func (x *FrontendWatchListingsRequest) GetNetworkKeys() [][]byte {
	if x != nil {
		return x.NetworkKeys
	}
	return nil
}

func (x *FrontendWatchListingsRequest) GetListingId() uint64 {
	if x != nil {
		return x.ListingId
	}
	return 0
}

type FrontendWatchListingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []*FrontendWatchListingsResponse_Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *FrontendWatchListingsResponse) Reset() {
	*x = FrontendWatchListingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendWatchListingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendWatchListingsResponse) ProtoMessage() {}

func (x *FrontendWatchListingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendWatchListingsResponse.ProtoReflect.Descriptor instead.
func (*FrontendWatchListingsResponse) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{52}
}

func (x *FrontendWatchListingsResponse) GetEvents() []*FrontendWatchListingsResponse_Event {
	if x != nil {
		return x.Events
	}
	return nil
}

type FrontendWatchListingUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkKey []byte        `protobuf:"bytes,1,opt,name=network_key,json=networkKey,proto3" json:"network_key,omitempty"`
	Query      *ListingQuery `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *FrontendWatchListingUsersRequest) Reset() {
	*x = FrontendWatchListingUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendWatchListingUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendWatchListingUsersRequest) ProtoMessage() {}

func (x *FrontendWatchListingUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendWatchListingUsersRequest.ProtoReflect.Descriptor instead.
func (*FrontendWatchListingUsersRequest) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{53}
}

func (x *FrontendWatchListingUsersRequest) GetNetworkKey() []byte {
	if x != nil {
		return x.NetworkKey
	}
	return nil
}

func (x *FrontendWatchListingUsersRequest) GetQuery() *ListingQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

type FrontendWatchListingUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  FrontendWatchListingUsersResponse_UserEventType `protobuf:"varint,1,opt,name=type,proto3,enum=strims.network.v1.directory.FrontendWatchListingUsersResponse_UserEventType" json:"type,omitempty"`
	Users []*FrontendWatchListingUsersResponse_User       `protobuf:"bytes,2,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *FrontendWatchListingUsersResponse) Reset() {
	*x = FrontendWatchListingUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendWatchListingUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendWatchListingUsersResponse) ProtoMessage() {}

func (x *FrontendWatchListingUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendWatchListingUsersResponse.ProtoReflect.Descriptor instead.
func (*FrontendWatchListingUsersResponse) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{54}
}

func (x *FrontendWatchListingUsersResponse) GetType() FrontendWatchListingUsersResponse_UserEventType {
	if x != nil {
		return x.Type
	}
	return FrontendWatchListingUsersResponse_USER_EVENT_TYPE_JOIN
}

func (x *FrontendWatchListingUsersResponse) GetUsers() []*FrontendWatchListingUsersResponse_User {
	if x != nil {
		return x.Users
	}
	return nil
}

type SnippetSubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SwarmId []byte `protobuf:"bytes,1,opt,name=swarm_id,json=swarmId,proto3" json:"swarm_id,omitempty"`
}

func (x *SnippetSubscribeRequest) Reset() {
	*x = SnippetSubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnippetSubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnippetSubscribeRequest) ProtoMessage() {}

func (x *SnippetSubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnippetSubscribeRequest.ProtoReflect.Descriptor instead.
func (*SnippetSubscribeRequest) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{55}
}

func (x *SnippetSubscribeRequest) GetSwarmId() []byte {
	if x != nil {
		return x.SwarmId
	}
	return nil
}

type SnippetSubscribeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SnippetDelta *ListingSnippetDelta `protobuf:"bytes,1,opt,name=snippet_delta,json=snippetDelta,proto3" json:"snippet_delta,omitempty"`
}

func (x *SnippetSubscribeResponse) Reset() {
	*x = SnippetSubscribeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnippetSubscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnippetSubscribeResponse) ProtoMessage() {}

func (x *SnippetSubscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnippetSubscribeResponse.ProtoReflect.Descriptor instead.
func (*SnippetSubscribeResponse) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{56}
}

func (x *SnippetSubscribeResponse) GetSnippetDelta() *ListingSnippetDelta {
	if x != nil {
		return x.SnippetDelta
	}
	return nil
}

type ServerConfig_Integrations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Angelthump *ServerConfig_Integrations_AngelThump `protobuf:"bytes,1,opt,name=angelthump,proto3" json:"angelthump,omitempty"`
	Twitch     *ServerConfig_Integrations_Twitch     `protobuf:"bytes,2,opt,name=twitch,proto3" json:"twitch,omitempty"`
	Youtube    *ServerConfig_Integrations_YouTube    `protobuf:"bytes,3,opt,name=youtube,proto3" json:"youtube,omitempty"`
	Swarm      *ServerConfig_Integrations_Swarm      `protobuf:"bytes,4,opt,name=swarm,proto3" json:"swarm,omitempty"`
}

func (x *ServerConfig_Integrations) Reset() {
	*x = ServerConfig_Integrations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerConfig_Integrations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerConfig_Integrations) ProtoMessage() {}

func (x *ServerConfig_Integrations) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerConfig_Integrations.ProtoReflect.Descriptor instead.
func (*ServerConfig_Integrations) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ServerConfig_Integrations) GetAngelthump() *ServerConfig_Integrations_AngelThump {
	if x != nil {
		return x.Angelthump
	}
	return nil
}

func (x *ServerConfig_Integrations) GetTwitch() *ServerConfig_Integrations_Twitch {
	if x != nil {
		return x.Twitch
	}
	return nil
}

func (x *ServerConfig_Integrations) GetYoutube() *ServerConfig_Integrations_YouTube {
	if x != nil {
		return x.Youtube
	}
	return nil
}

func (x *ServerConfig_Integrations) GetSwarm() *ServerConfig_Integrations_Swarm {
	if x != nil {
		return x.Swarm
	}
	return nil
}

type ServerConfig_Integrations_AngelThump struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enable bool `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
}

func (x *ServerConfig_Integrations_AngelThump) Reset() {
	*x = ServerConfig_Integrations_AngelThump{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerConfig_Integrations_AngelThump) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerConfig_Integrations_AngelThump) ProtoMessage() {}

func (x *ServerConfig_Integrations_AngelThump) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerConfig_Integrations_AngelThump.ProtoReflect.Descriptor instead.
func (*ServerConfig_Integrations_AngelThump) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *ServerConfig_Integrations_AngelThump) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

type ServerConfig_Integrations_Twitch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enable       bool   `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
	ClientId     string `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientSecret string `protobuf:"bytes,3,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
}

func (x *ServerConfig_Integrations_Twitch) Reset() {
	*x = ServerConfig_Integrations_Twitch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerConfig_Integrations_Twitch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerConfig_Integrations_Twitch) ProtoMessage() {}

func (x *ServerConfig_Integrations_Twitch) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerConfig_Integrations_Twitch.ProtoReflect.Descriptor instead.
func (*ServerConfig_Integrations_Twitch) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{0, 0, 1}
}

func (x *ServerConfig_Integrations_Twitch) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *ServerConfig_Integrations_Twitch) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *ServerConfig_Integrations_Twitch) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

type ServerConfig_Integrations_YouTube struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enable       bool   `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
	PublicApiKey string `protobuf:"bytes,2,opt,name=public_api_key,json=publicApiKey,proto3" json:"public_api_key,omitempty"`
}

func (x *ServerConfig_Integrations_YouTube) Reset() {
	*x = ServerConfig_Integrations_YouTube{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerConfig_Integrations_YouTube) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerConfig_Integrations_YouTube) ProtoMessage() {}

func (x *ServerConfig_Integrations_YouTube) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerConfig_Integrations_YouTube.ProtoReflect.Descriptor instead.
func (*ServerConfig_Integrations_YouTube) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{0, 0, 2}
}

func (x *ServerConfig_Integrations_YouTube) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *ServerConfig_Integrations_YouTube) GetPublicApiKey() string {
	if x != nil {
		return x.PublicApiKey
	}
	return ""
}

type ServerConfig_Integrations_Swarm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enable bool `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
}

func (x *ServerConfig_Integrations_Swarm) Reset() {
	*x = ServerConfig_Integrations_Swarm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerConfig_Integrations_Swarm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerConfig_Integrations_Swarm) ProtoMessage() {}

func (x *ServerConfig_Integrations_Swarm) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerConfig_Integrations_Swarm.ProtoReflect.Descriptor instead.
func (*ServerConfig_Integrations_Swarm) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{0, 0, 3}
}

func (x *ServerConfig_Integrations_Swarm) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

type ClientConfig_Integrations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Angelthump bool `protobuf:"varint,1,opt,name=angelthump,proto3" json:"angelthump,omitempty"`
	Twitch     bool `protobuf:"varint,2,opt,name=twitch,proto3" json:"twitch,omitempty"`
	Youtube    bool `protobuf:"varint,3,opt,name=youtube,proto3" json:"youtube,omitempty"`
	Swarm      bool `protobuf:"varint,4,opt,name=swarm,proto3" json:"swarm,omitempty"`
}

func (x *ClientConfig_Integrations) Reset() {
	*x = ClientConfig_Integrations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientConfig_Integrations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientConfig_Integrations) ProtoMessage() {}

func (x *ClientConfig_Integrations) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientConfig_Integrations.ProtoReflect.Descriptor instead.
func (*ClientConfig_Integrations) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ClientConfig_Integrations) GetAngelthump() bool {
	if x != nil {
		return x.Angelthump
	}
	return false
}

func (x *ClientConfig_Integrations) GetTwitch() bool {
	if x != nil {
		return x.Twitch
	}
	return false
}

func (x *ClientConfig_Integrations) GetYoutube() bool {
	if x != nil {
		return x.Youtube
	}
	return false
}

func (x *ClientConfig_Integrations) GetSwarm() bool {
	if x != nil {
		return x.Swarm
	}
	return false
}

type Listing_Media struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MimeType string `protobuf:"bytes,1,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	SwarmUri string `protobuf:"bytes,2,opt,name=swarm_uri,json=swarmUri,proto3" json:"swarm_uri,omitempty"`
}

func (x *Listing_Media) Reset() {
	*x = Listing_Media{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Listing_Media) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Listing_Media) ProtoMessage() {}

func (x *Listing_Media) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Listing_Media.ProtoReflect.Descriptor instead.
func (*Listing_Media) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{5, 0}
}

func (x *Listing_Media) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *Listing_Media) GetSwarmUri() string {
	if x != nil {
		return x.SwarmUri
	}
	return ""
}

type Listing_Service struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *Listing_Service) Reset() {
	*x = Listing_Service{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Listing_Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Listing_Service) ProtoMessage() {}

func (x *Listing_Service) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Listing_Service.ProtoReflect.Descriptor instead.
func (*Listing_Service) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{5, 1}
}

func (x *Listing_Service) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type Listing_Embed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service     Listing_Embed_Service `protobuf:"varint,1,opt,name=service,proto3,enum=strims.network.v1.directory.Listing_Embed_Service" json:"service,omitempty"`
	Id          string                `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	QueryParams map[string]string     `protobuf:"bytes,3,rep,name=query_params,json=queryParams,proto3" json:"query_params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Listing_Embed) Reset() {
	*x = Listing_Embed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Listing_Embed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Listing_Embed) ProtoMessage() {}

func (x *Listing_Embed) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Listing_Embed.ProtoReflect.Descriptor instead.
func (*Listing_Embed) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{5, 2}
}

func (x *Listing_Embed) GetService() Listing_Embed_Service {
	if x != nil {
		return x.Service
	}
	return Listing_Embed_DIRECTORY_LISTING_EMBED_SERVICE_UNDEFINED
}

func (x *Listing_Embed) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Listing_Embed) GetQueryParams() map[string]string {
	if x != nil {
		return x.QueryParams
	}
	return nil
}

type Listing_Chat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key  []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Listing_Chat) Reset() {
	*x = Listing_Chat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Listing_Chat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Listing_Chat) ProtoMessage() {}

func (x *Listing_Chat) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Listing_Chat.ProtoReflect.Descriptor instead.
func (*Listing_Chat) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{5, 3}
}

func (x *Listing_Chat) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *Listing_Chat) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ListingSnippetDelta_Tags struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tags []string `protobuf:"bytes,1001,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *ListingSnippetDelta_Tags) Reset() {
	*x = ListingSnippetDelta_Tags{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListingSnippetDelta_Tags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListingSnippetDelta_Tags) ProtoMessage() {}

func (x *ListingSnippetDelta_Tags) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListingSnippetDelta_Tags.ProtoReflect.Descriptor instead.
func (*ListingSnippetDelta_Tags) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{8, 0}
}

func (x *ListingSnippetDelta_Tags) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type Event_ListingChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Listing    *Listing           `protobuf:"bytes,2,opt,name=listing,proto3" json:"listing,omitempty"`
	Snippet    *ListingSnippet    `protobuf:"bytes,3,opt,name=snippet,proto3" json:"snippet,omitempty"`
	Moderation *ListingModeration `protobuf:"bytes,4,opt,name=moderation,proto3" json:"moderation,omitempty"`
}

func (x *Event_ListingChange) Reset() {
	*x = Event_ListingChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event_ListingChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event_ListingChange) ProtoMessage() {}

func (x *Event_ListingChange) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event_ListingChange.ProtoReflect.Descriptor instead.
func (*Event_ListingChange) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{9, 0}
}

func (x *Event_ListingChange) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Event_ListingChange) GetListing() *Listing {
	if x != nil {
		return x.Listing
	}
	return nil
}

func (x *Event_ListingChange) GetSnippet() *ListingSnippet {
	if x != nil {
		return x.Snippet
	}
	return nil
}

func (x *Event_ListingChange) GetModeration() *ListingModeration {
	if x != nil {
		return x.Moderation
	}
	return nil
}

type Event_Unpublish struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Event_Unpublish) Reset() {
	*x = Event_Unpublish{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event_Unpublish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event_Unpublish) ProtoMessage() {}

func (x *Event_Unpublish) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event_Unpublish.ProtoReflect.Descriptor instead.
func (*Event_Unpublish) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{9, 1}
}

func (x *Event_Unpublish) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Event_UserCountChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserCount       uint32 `protobuf:"varint,2,opt,name=user_count,json=userCount,proto3" json:"user_count,omitempty"`
	RecentUserCount uint32 `protobuf:"varint,3,opt,name=recent_user_count,json=recentUserCount,proto3" json:"recent_user_count,omitempty"`
}

func (x *Event_UserCountChange) Reset() {
	*x = Event_UserCountChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event_UserCountChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event_UserCountChange) ProtoMessage() {}

func (x *Event_UserCountChange) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event_UserCountChange.ProtoReflect.Descriptor instead.
func (*Event_UserCountChange) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{9, 2}
}

func (x *Event_UserCountChange) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Event_UserCountChange) GetUserCount() uint32 {
	if x != nil {
		return x.UserCount
	}
	return 0
}

func (x *Event_UserCountChange) GetRecentUserCount() uint32 {
	if x != nil {
		return x.RecentUserCount
	}
	return 0
}

type Event_UserPresenceChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Alias      string   `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
	PeerKey    []byte   `protobuf:"bytes,3,opt,name=peer_key,json=peerKey,proto3" json:"peer_key,omitempty"`
	Online     bool     `protobuf:"varint,4,opt,name=online,proto3" json:"online,omitempty"`
	ListingIds []uint64 `protobuf:"varint,5,rep,packed,name=listing_ids,json=listingIds,proto3" json:"listing_ids,omitempty"`
}

func (x *Event_UserPresenceChange) Reset() {
	*x = Event_UserPresenceChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event_UserPresenceChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event_UserPresenceChange) ProtoMessage() {}

func (x *Event_UserPresenceChange) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event_UserPresenceChange.ProtoReflect.Descriptor instead.
func (*Event_UserPresenceChange) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{9, 3}
}

func (x *Event_UserPresenceChange) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Event_UserPresenceChange) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *Event_UserPresenceChange) GetPeerKey() []byte {
	if x != nil {
		return x.PeerKey
	}
	return nil
}

func (x *Event_UserPresenceChange) GetOnline() bool {
	if x != nil {
		return x.Online
	}
	return false
}

func (x *Event_UserPresenceChange) GetListingIds() []uint64 {
	if x != nil {
		return x.ListingIds
	}
	return nil
}

type Event_Ping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time int64 `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *Event_Ping) Reset() {
	*x = Event_Ping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event_Ping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event_Ping) ProtoMessage() {}

func (x *Event_Ping) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event_Ping.ProtoReflect.Descriptor instead.
func (*Event_Ping) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{9, 4}
}

func (x *Event_Ping) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type FrontendGetUsersResponse_Alias struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alias      string   `protobuf:"bytes,1,opt,name=alias,proto3" json:"alias,omitempty"`
	NetworkIds []uint64 `protobuf:"varint,2,rep,packed,name=network_ids,json=networkIds,proto3" json:"network_ids,omitempty"`
}

func (x *FrontendGetUsersResponse_Alias) Reset() {
	*x = FrontendGetUsersResponse_Alias{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendGetUsersResponse_Alias) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendGetUsersResponse_Alias) ProtoMessage() {}

func (x *FrontendGetUsersResponse_Alias) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendGetUsersResponse_Alias.ProtoReflect.Descriptor instead.
func (*FrontendGetUsersResponse_Alias) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{48, 0}
}

func (x *FrontendGetUsersResponse_Alias) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *FrontendGetUsersResponse_Alias) GetNetworkIds() []uint64 {
	if x != nil {
		return x.NetworkIds
	}
	return nil
}

type FrontendGetUsersResponse_User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aliases []*FrontendGetUsersResponse_Alias `protobuf:"bytes,1,rep,name=aliases,proto3" json:"aliases,omitempty"`
	PeerKey []byte                            `protobuf:"bytes,2,opt,name=peer_key,json=peerKey,proto3" json:"peer_key,omitempty"`
}

func (x *FrontendGetUsersResponse_User) Reset() {
	*x = FrontendGetUsersResponse_User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendGetUsersResponse_User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendGetUsersResponse_User) ProtoMessage() {}

func (x *FrontendGetUsersResponse_User) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendGetUsersResponse_User.ProtoReflect.Descriptor instead.
func (*FrontendGetUsersResponse_User) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{48, 1}
}

func (x *FrontendGetUsersResponse_User) GetAliases() []*FrontendGetUsersResponse_Alias {
	if x != nil {
		return x.Aliases
	}
	return nil
}

func (x *FrontendGetUsersResponse_User) GetPeerKey() []byte {
	if x != nil {
		return x.PeerKey
	}
	return nil
}

type FrontendWatchListingsResponse_Change struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Listings *NetworkListings `protobuf:"bytes,1,opt,name=listings,proto3" json:"listings,omitempty"`
}

func (x *FrontendWatchListingsResponse_Change) Reset() {
	*x = FrontendWatchListingsResponse_Change{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendWatchListingsResponse_Change) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendWatchListingsResponse_Change) ProtoMessage() {}

func (x *FrontendWatchListingsResponse_Change) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendWatchListingsResponse_Change.ProtoReflect.Descriptor instead.
func (*FrontendWatchListingsResponse_Change) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{52, 0}
}

func (x *FrontendWatchListingsResponse_Change) GetListings() *NetworkListings {
	if x != nil {
		return x.Listings
	}
	return nil
}

type FrontendWatchListingsResponse_Unpublish struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkId uint64 `protobuf:"varint,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	ListingId uint64 `protobuf:"varint,2,opt,name=listing_id,json=listingId,proto3" json:"listing_id,omitempty"`
}

func (x *FrontendWatchListingsResponse_Unpublish) Reset() {
	*x = FrontendWatchListingsResponse_Unpublish{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendWatchListingsResponse_Unpublish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendWatchListingsResponse_Unpublish) ProtoMessage() {}

func (x *FrontendWatchListingsResponse_Unpublish) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendWatchListingsResponse_Unpublish.ProtoReflect.Descriptor instead.
func (*FrontendWatchListingsResponse_Unpublish) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{52, 1}
}

func (x *FrontendWatchListingsResponse_Unpublish) GetNetworkId() uint64 {
	if x != nil {
		return x.NetworkId
	}
	return 0
}

func (x *FrontendWatchListingsResponse_Unpublish) GetListingId() uint64 {
	if x != nil {
		return x.ListingId
	}
	return 0
}

type FrontendWatchListingsResponse_UserCountChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkId       uint64 `protobuf:"varint,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	ListingId       uint64 `protobuf:"varint,2,opt,name=listing_id,json=listingId,proto3" json:"listing_id,omitempty"`
	UserCount       uint32 `protobuf:"varint,3,opt,name=user_count,json=userCount,proto3" json:"user_count,omitempty"`
	RecentUserCount uint32 `protobuf:"varint,4,opt,name=recent_user_count,json=recentUserCount,proto3" json:"recent_user_count,omitempty"`
}

func (x *FrontendWatchListingsResponse_UserCountChange) Reset() {
	*x = FrontendWatchListingsResponse_UserCountChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendWatchListingsResponse_UserCountChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendWatchListingsResponse_UserCountChange) ProtoMessage() {}

func (x *FrontendWatchListingsResponse_UserCountChange) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendWatchListingsResponse_UserCountChange.ProtoReflect.Descriptor instead.
func (*FrontendWatchListingsResponse_UserCountChange) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{52, 2}
}

func (x *FrontendWatchListingsResponse_UserCountChange) GetNetworkId() uint64 {
	if x != nil {
		return x.NetworkId
	}
	return 0
}

func (x *FrontendWatchListingsResponse_UserCountChange) GetListingId() uint64 {
	if x != nil {
		return x.ListingId
	}
	return 0
}

func (x *FrontendWatchListingsResponse_UserCountChange) GetUserCount() uint32 {
	if x != nil {
		return x.UserCount
	}
	return 0
}

func (x *FrontendWatchListingsResponse_UserCountChange) GetRecentUserCount() uint32 {
	if x != nil {
		return x.RecentUserCount
	}
	return 0
}

type FrontendWatchListingsResponse_Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Event:
	//	*FrontendWatchListingsResponse_Event_Change
	//	*FrontendWatchListingsResponse_Event_Unpublish
	//	*FrontendWatchListingsResponse_Event_UserCountChange
	Event isFrontendWatchListingsResponse_Event_Event `protobuf_oneof:"event"`
}

func (x *FrontendWatchListingsResponse_Event) Reset() {
	*x = FrontendWatchListingsResponse_Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendWatchListingsResponse_Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendWatchListingsResponse_Event) ProtoMessage() {}

func (x *FrontendWatchListingsResponse_Event) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendWatchListingsResponse_Event.ProtoReflect.Descriptor instead.
func (*FrontendWatchListingsResponse_Event) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{52, 3}
}

func (m *FrontendWatchListingsResponse_Event) GetEvent() isFrontendWatchListingsResponse_Event_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *FrontendWatchListingsResponse_Event) GetChange() *FrontendWatchListingsResponse_Change {
	if x, ok := x.GetEvent().(*FrontendWatchListingsResponse_Event_Change); ok {
		return x.Change
	}
	return nil
}

func (x *FrontendWatchListingsResponse_Event) GetUnpublish() *FrontendWatchListingsResponse_Unpublish {
	if x, ok := x.GetEvent().(*FrontendWatchListingsResponse_Event_Unpublish); ok {
		return x.Unpublish
	}
	return nil
}

func (x *FrontendWatchListingsResponse_Event) GetUserCountChange() *FrontendWatchListingsResponse_UserCountChange {
	if x, ok := x.GetEvent().(*FrontendWatchListingsResponse_Event_UserCountChange); ok {
		return x.UserCountChange
	}
	return nil
}

type isFrontendWatchListingsResponse_Event_Event interface {
	isFrontendWatchListingsResponse_Event_Event()
}

type FrontendWatchListingsResponse_Event_Change struct {
	Change *FrontendWatchListingsResponse_Change `protobuf:"bytes,1001,opt,name=change,proto3,oneof"`
}

type FrontendWatchListingsResponse_Event_Unpublish struct {
	Unpublish *FrontendWatchListingsResponse_Unpublish `protobuf:"bytes,1002,opt,name=unpublish,proto3,oneof"`
}

type FrontendWatchListingsResponse_Event_UserCountChange struct {
	UserCountChange *FrontendWatchListingsResponse_UserCountChange `protobuf:"bytes,1003,opt,name=user_count_change,json=userCountChange,proto3,oneof"`
}

func (*FrontendWatchListingsResponse_Event_Change) isFrontendWatchListingsResponse_Event_Event() {}

func (*FrontendWatchListingsResponse_Event_Unpublish) isFrontendWatchListingsResponse_Event_Event() {}

func (*FrontendWatchListingsResponse_Event_UserCountChange) isFrontendWatchListingsResponse_Event_Event() {
}

type FrontendWatchListingUsersResponse_User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Alias   string `protobuf:"bytes,2,opt,name=Alias,proto3" json:"Alias,omitempty"`
	PeerKey []byte `protobuf:"bytes,3,opt,name=peer_key,json=peerKey,proto3" json:"peer_key,omitempty"`
}

func (x *FrontendWatchListingUsersResponse_User) Reset() {
	*x = FrontendWatchListingUsersResponse_User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_v1_directory_directory_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendWatchListingUsersResponse_User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendWatchListingUsersResponse_User) ProtoMessage() {}

func (x *FrontendWatchListingUsersResponse_User) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_directory_directory_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendWatchListingUsersResponse_User.ProtoReflect.Descriptor instead.
func (*FrontendWatchListingUsersResponse_User) Descriptor() ([]byte, []int) {
	return file_network_v1_directory_directory_proto_rawDescGZIP(), []int{54, 0}
}

func (x *FrontendWatchListingUsersResponse_User) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FrontendWatchListingUsersResponse_User) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *FrontendWatchListingUsersResponse_User) GetPeerKey() []byte {
	if x != nil {
		return x.PeerKey
	}
	return nil
}

var File_network_v1_directory_directory_proto protoreflect.FileDescriptor

var file_network_v1_directory_directory_proto_rawDesc = []byte{
	0x0a, 0x24, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x1a, 0x10, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdf, 0x08, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x5a, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x73,
	0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31,
	0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x71, 0x75,
	0x6f, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x6a, 0x6f, 0x69, 0x6e, 0x5f,
	0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6a, 0x6f, 0x69,
	0x6e, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x2d, 0x0a, 0x12, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63,
	0x61, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x11, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x69, 0x6e,
	0x5f, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x6d, 0x69, 0x6e, 0x50, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x69, 0x6e,
	0x67, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0f, 0x6d, 0x61, 0x78, 0x50, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x12, 0x2e, 0x0a, 0x13, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x5f, 0x6c, 0x6f, 0x61, 0x64, 0x5f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11,
	0x65, 0x6d, 0x62, 0x65, 0x64, 0x4c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x12, 0x37, 0x0a, 0x18, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f,
	0x65, 0x6d, 0x62, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x15, 0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x45, 0x6d,
	0x62, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x1a, 0xea, 0x04, 0x0a, 0x0c, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x61, 0x0a, 0x0a, 0x61,
	0x6e, 0x67, 0x65, 0x6c, 0x74, 0x68, 0x75, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x41, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x6e, 0x67, 0x65, 0x6c, 0x54, 0x68, 0x75,
	0x6d, 0x70, 0x52, 0x0a, 0x61, 0x6e, 0x67, 0x65, 0x6c, 0x74, 0x68, 0x75, 0x6d, 0x70, 0x12, 0x55,
	0x0a, 0x06, 0x74, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d,
	0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x54, 0x77, 0x69, 0x74, 0x63, 0x68, 0x52, 0x06, 0x74,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x58, 0x0a, 0x07, 0x79, 0x6f, 0x75, 0x74, 0x75, 0x62, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x59,
	0x6f, 0x75, 0x54, 0x75, 0x62, 0x65, 0x52, 0x07, 0x79, 0x6f, 0x75, 0x74, 0x75, 0x62, 0x65, 0x12,
	0x52, 0x0a, 0x05, 0x73, 0x77, 0x61, 0x72, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c,
	0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x53, 0x77, 0x61, 0x72, 0x6d, 0x52, 0x05, 0x73, 0x77,
	0x61, 0x72, 0x6d, 0x1a, 0x24, 0x0a, 0x0a, 0x41, 0x6e, 0x67, 0x65, 0x6c, 0x54, 0x68, 0x75, 0x6d,
	0x70, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x1a, 0x62, 0x0a, 0x06, 0x54, 0x77, 0x69,
	0x74, 0x63, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x1a, 0x47, 0x0a,
	0x07, 0x59, 0x6f, 0x75, 0x54, 0x75, 0x62, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x24, 0x0a, 0x0e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x1a, 0x1f, 0x0a, 0x05, 0x53, 0x77, 0x61, 0x72, 0x6d, 0x12,
	0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x22, 0xfe, 0x02, 0x0a, 0x0c, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x5a, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36,
	0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f,
	0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x6a, 0x6f, 0x69,
	0x6e, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6a,
	0x6f, 0x69, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x69, 0x6e, 0x5f,
	0x70, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0f, 0x6d, 0x69, 0x6e, 0x50, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x69, 0x6e, 0x67,
	0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0f, 0x6d, 0x61, 0x78, 0x50, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x1a, 0x76, 0x0a, 0x0c, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x6e, 0x67, 0x65, 0x6c, 0x74, 0x68, 0x75, 0x6d, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x6e, 0x67, 0x65, 0x6c, 0x74, 0x68, 0x75, 0x6d, 0x70,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x74, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x79, 0x6f, 0x75, 0x74,
	0x75, 0x62, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x79, 0x6f, 0x75, 0x74, 0x75,
	0x62, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x77, 0x61, 0x72, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x73, 0x77, 0x61, 0x72, 0x6d, 0x22, 0x33, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4b, 0x65, 0x79, 0x22, 0x35, 0x0a,
	0x12, 0x54, 0x65, 0x73, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x4b, 0x65, 0x79, 0x22, 0x15, 0x0a, 0x13, 0x54, 0x65, 0x73, 0x74, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xbe, 0x07, 0x0a, 0x07,
	0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x43, 0x0a, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x18, 0xe9, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73,
	0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x48, 0x00, 0x52, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x49, 0x0a, 0x07,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0xea, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x48, 0x00, 0x52, 0x07,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x05, 0x65, 0x6d, 0x62, 0x65, 0x64,
	0x18, 0xeb, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73,
	0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x6d,
	0x62, 0x65, 0x64, 0x48, 0x00, 0x52, 0x05, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x12, 0x40, 0x0a, 0x04,
	0x63, 0x68, 0x61, 0x74, 0x18, 0xec, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x74,
	0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x48, 0x00, 0x52, 0x04, 0x63, 0x68, 0x61, 0x74, 0x1a, 0x41,
	0x0a, 0x05, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6d, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x77, 0x61, 0x72, 0x6d, 0x5f, 0x75, 0x72,
	0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x77, 0x61, 0x72, 0x6d, 0x55, 0x72,
	0x69, 0x1a, 0x1d, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x1a, 0x80, 0x04, 0x0a, 0x05, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x12, 0x4c, 0x0a, 0x07, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x73, 0x74,
	0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x5e, 0x0a, 0x0c, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b,
	0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x3e, 0x0a, 0x10, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xf8, 0x01, 0x0a, 0x07, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x2d, 0x0a, 0x29, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x4f, 0x52,
	0x59, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x45, 0x4d, 0x42, 0x45, 0x44, 0x5f,
	0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x2e, 0x0a, 0x2a, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x4f, 0x52, 0x59,
	0x5f, 0x4c, 0x49, 0x53, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x45, 0x4d, 0x42, 0x45, 0x44, 0x5f, 0x53,
	0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x41, 0x4e, 0x47, 0x45, 0x4c, 0x54, 0x48, 0x55, 0x4d,
	0x50, 0x10, 0x01, 0x12, 0x31, 0x0a, 0x2d, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x4f, 0x52, 0x59,
	0x5f, 0x4c, 0x49, 0x53, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x45, 0x4d, 0x42, 0x45, 0x44, 0x5f, 0x53,
	0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x54, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x53, 0x54,
	0x52, 0x45, 0x41, 0x4d, 0x10, 0x02, 0x12, 0x2e, 0x0a, 0x2a, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54,
	0x4f, 0x52, 0x59, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x45, 0x4d, 0x42, 0x45,
	0x44, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x54, 0x57, 0x49, 0x54, 0x43, 0x48,
	0x5f, 0x56, 0x4f, 0x44, 0x10, 0x03, 0x12, 0x2b, 0x0a, 0x27, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54,
	0x4f, 0x52, 0x59, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x45, 0x4d, 0x42, 0x45,
	0x44, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x59, 0x4f, 0x55, 0x54, 0x55, 0x42,
	0x45, 0x10, 0x04, 0x1a, 0x2c, 0x0a, 0x04, 0x43, 0x68, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x67, 0x0a, 0x13,
	0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x13, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0xe9, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x2b, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0xea, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d,
	0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x05,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x22, 0xc6, 0x04, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e,
	0x67, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x04, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6d, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4d, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x4e, 0x0a, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x6e, 0x69, 0x70,
	0x70, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e,
	0x61, 0x69, 0x6c, 0x12, 0x53, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6c,
	0x6f, 0x67, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x74, 0x72, 0x69,
	0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x53,
	0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x0b, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x68, 0x65, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x07, 0x52, 0x0a, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x11, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x91, 0x4e, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x1d, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x92, 0x4e, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0xdc,
	0x08, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65,
	0x74, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x12, 0x32, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x12, 0x3f, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74,
	0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x6c, 0x69,
	0x76, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6d, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x08, 0x69, 0x73, 0x4d, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x2d, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x39, 0x0a, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x3f, 0x0a, 0x0c, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49,
	0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x3d, 0x0a, 0x0b, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49,
	0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x3d, 0x0a, 0x0b, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x5f, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e,
	0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x3a, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x4c, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0xe9, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x35, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x74,
	0x61, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x48, 0x00, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x51,
	0x0a, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x18, 0xd1, 0x0f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x48, 0x01, 0x52, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69,
	0x6c, 0x12, 0x56, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6c, 0x6f, 0x67,
	0x6f, 0x18, 0xb9, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d,
	0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x6e,
	0x69, 0x70, 0x70, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x48, 0x02, 0x52, 0x0b, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4c, 0x6f, 0x67, 0x6f, 0x1a, 0x1b, 0x0a, 0x04, 0x54, 0x61, 0x67,
	0x73, 0x12, 0x13, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0xe9, 0x07, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x74, 0x61, 0x67, 0x73, 0x5f, 0x6f,
	0x6e, 0x65, 0x6f, 0x66, 0x42, 0x11, 0x0a, 0x0f, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69,
	0x6c, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x42, 0x14, 0x0a, 0x12, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x22, 0xfa, 0x07,
	0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x5a, 0x0a, 0x0e, 0x6c, 0x69, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0xe9, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x12, 0x4d, 0x0a, 0x09, 0x75, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x18, 0xea, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73,
	0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x6e, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x48, 0x00, 0x52, 0x09, 0x75, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x12, 0x61, 0x0a, 0x11, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0xeb, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32,
	0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x6a, 0x0a, 0x14, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x72,
	0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0xec, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x65,
	0x73, 0x65, 0x6e, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52, 0x12, 0x75,
	0x73, 0x65, 0x72, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x12, 0x3e, 0x0a, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x18, 0xed, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x04, 0x70, 0x69, 0x6e,
	0x67, 0x1a, 0xf6, 0x01, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x3e, 0x0a, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x6c, 0x69, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x45, 0x0a, 0x07, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65,
	0x74, 0x52, 0x07, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x12, 0x4e, 0x0a, 0x0a, 0x6d, 0x6f,
	0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a,
	0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x1b, 0x0a, 0x09, 0x55, 0x6e,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x1a, 0x6c, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x65, 0x63,
	0x65, 0x6e, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x8e, 0x01, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72,
	0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69,
	0x61, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x65, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0a, 0x6c, 0x69, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x49, 0x64, 0x73, 0x1a, 0x1a, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0xbf, 0x01, 0x0a, 0x11, 0x4c,
	0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x37, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6d, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x08, 0x69, 0x73, 0x4d, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x69, 0x73, 0x5f,
	0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42,
	0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x69, 0x73, 0x42, 0x61, 0x6e, 0x6e,
	0x65, 0x64, 0x12, 0x38, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0x6d, 0x0a, 0x0c,
	0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x11, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0xe9, 0x07, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x41, 0x0a, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x18, 0xea, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x42, 0x07, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0xe4, 0x01, 0x0a, 0x0d,
	0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x07,
	0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76,
	0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x4e, 0x0a, 0x0a,
	0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74,
	0x65, 0x73, 0x22, 0x8a, 0x02, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f,
	0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x4a, 0x6f, 0x69, 0x6e, 0x12, 0x43, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x3d, 0x0a, 0x0c, 0x69, 0x73, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x69, 0x73, 0x4d,
	0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x35, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f,
	0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x22,
	0xa3, 0x01, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x70, 0x65, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x4b, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73,
	0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31,
	0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4d,
	0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4c, 0x0a, 0x0e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x72,
	0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73,
	0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x22, 0x50, 0x0a, 0x0e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x6c, 0x69,
	0x73, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x21, 0x0a, 0x0f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x22, 0x0a, 0x10, 0x55, 0x6e, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x13, 0x0a, 0x11,
	0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x4e, 0x0a, 0x0b, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3f, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x69, 0x6e, 0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x22, 0x1e, 0x0a, 0x0c, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x1d, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x0e, 0x0a, 0x0c, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x0d, 0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x0e, 0x0a, 0x0c, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x78, 0x0a, 0x16, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x4e, 0x0a, 0x0a, 0x6d, 0x6f, 0x64,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76,
	0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x6d,
	0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x19, 0x0a, 0x17, 0x4d, 0x6f, 0x64,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7d, 0x0a, 0x13, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70,
	0x65, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70,
	0x65, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x4b, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x74, 0x72,
	0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x64,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x16, 0x0a, 0x14, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3f, 0x0a, 0x07, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0xc7, 0x02, 0x0a,
	0x13, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x3e, 0x0a, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x6c, 0x69, 0x73,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x45, 0x0a, 0x07, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x6e, 0x69, 0x70, 0x70,
	0x65, 0x74, 0x52, 0x07, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x12, 0x4e, 0x0a, 0x0a, 0x6d,
	0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x65,
	0x63, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x9f, 0x01, 0x0a, 0x0f, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x3e, 0x0a, 0x07, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x74,
	0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x4c, 0x0a, 0x08, 0x6c, 0x69,
	0x73, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73,
	0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31,
	0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08,
	0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x79, 0x0a, 0x16, 0x46, 0x72, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x64, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x4b, 0x65, 0x79, 0x12, 0x3e, 0x0a, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x6c, 0x69, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x22, 0x29, 0x0a, 0x17, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4b,
	0x0a, 0x18, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1b, 0x0a, 0x19, 0x46,
	0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x77, 0x0a, 0x13, 0x46, 0x72, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x64, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4b, 0x65, 0x79,
	0x12, 0x3f, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x69, 0x6e, 0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x22, 0x26, 0x0a, 0x14, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x4a, 0x6f, 0x69,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x46, 0x0a, 0x13, 0x46, 0x72, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4b, 0x65,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x16, 0x0a, 0x14, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x72,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36, 0x0a, 0x13, 0x46, 0x72, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4b, 0x65,
	0x79, 0x22, 0x16, 0x0a, 0x14, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa1, 0x01, 0x0a, 0x1e, 0x46, 0x72,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4b, 0x65, 0x79, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x4e, 0x0a,
	0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x21, 0x0a,
	0x1f, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xa1, 0x01, 0x0a, 0x1b, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x4d, 0x6f, 0x64,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x4b, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x74,
	0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f,
	0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x1e, 0x0a, 0x1c, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64,
	0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x0a, 0x17, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0xea, 0x03, 0x0a, 0x18, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x05,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x73, 0x74,
	0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x64, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x5f,
	0x0a, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x43, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x46,
	0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x1a,
	0x3e, 0x0a, 0x05, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x04, 0x52, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x73, 0x1a,
	0x78, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x55, 0x0a, 0x07, 0x61, 0x6c, 0x69, 0x61, 0x73,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d,
	0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x07, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x12, 0x19,
	0x0a, 0x08, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x70, 0x65, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x1a, 0x61, 0x0a, 0x0d, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3a, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x74,
	0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x95, 0x01, 0x0a,
	0x1a, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x54, 0x0a, 0x0d, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6b, 0x65, 0x79,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x4b, 0x65, 0x79, 0x73, 0x22, 0x67, 0x0a, 0x1b, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64,
	0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x08, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x52, 0x08, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0xb6, 0x01,
	0x0a, 0x1c, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4c,
	0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x54,
	0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f,
	0x6b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0b, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6c, 0x69, 0x73,
	0x74, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x22, 0x88, 0x06, 0x0a, 0x1d, 0x46, 0x72, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x64, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d,
	0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x1a, 0x52, 0x0a, 0x06, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x48, 0x0a, 0x08,
	0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x6c, 0x69,
	0x73, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x1a, 0x49, 0x0a, 0x09, 0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x49,
	0x64, 0x1a, 0x9a, 0x01, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e,
	0x67, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x72,
	0x65, 0x63, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0xd0,
	0x02, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x5c, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x18, 0xe9, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x73, 0x74, 0x72, 0x69,
	0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64,
	0x57, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52, 0x06,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x65, 0x0a, 0x09, 0x75, 0x6e, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x18, 0xea, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x73, 0x74, 0x72,
	0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x64, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x48, 0x00, 0x52, 0x09, 0x75, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x79, 0x0a,
	0x11, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x18, 0xeb, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x73, 0x74, 0x72, 0x69,
	0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64,
	0x57, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x22, 0x84, 0x01, 0x0a, 0x20, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x57, 0x61,
	0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x4b, 0x65, 0x79, 0x12, 0x3f, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x8a, 0x03, 0x0a, 0x21, 0x46, 0x72, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x64, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e,
	0x67, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4c, 0x2e, 0x73,
	0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31,
	0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x64, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x59, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x43, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x46, 0x72,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x1a, 0x47, 0x0a, 0x04, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x65, 0x65,
	0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x65, 0x65,
	0x72, 0x4b, 0x65, 0x79, 0x22, 0x5f, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56,
	0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4a, 0x4f, 0x49, 0x4e, 0x10, 0x00, 0x12,
	0x18, 0x0a, 0x14, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x4e,
	0x41, 0x4d, 0x45, 0x10, 0x02, 0x22, 0x34, 0x0a, 0x17, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x77, 0x61, 0x72, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x73, 0x77, 0x61, 0x72, 0x6d, 0x49, 0x64, 0x22, 0x71, 0x0a, 0x18, 0x53,
	0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x0d, 0x73, 0x6e, 0x69, 0x70, 0x70,
	0x65, 0x74, 0x5f, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x69, 0x6e, 0x67, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x74, 0x61,
	0x52, 0x0c, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x2a, 0xb9,
	0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x1e, 0x4c, 0x49, 0x53, 0x54, 0x49, 0x4e, 0x47,
	0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e,
	0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x4c, 0x49, 0x53,
	0x54, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x10, 0x01, 0x12, 0x20, 0x0a, 0x1c, 0x4c, 0x49, 0x53,
	0x54, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x10, 0x02, 0x12, 0x1e, 0x0a, 0x1a, 0x4c,
	0x49, 0x53, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x45, 0x4d, 0x42, 0x45, 0x44, 0x10, 0x03, 0x12, 0x1d, 0x0a, 0x19, 0x4c,
	0x49, 0x53, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x54, 0x10, 0x04, 0x32, 0xe7, 0x05, 0x0a, 0x09, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x64, 0x0a, 0x07, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x12, 0x2b, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2c, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a,
	0x0a, 0x09, 0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x2d, 0x2e, 0x73, 0x74,
	0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x73, 0x74, 0x72,
	0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x04, 0x4a, 0x6f,
	0x69, 0x6e, 0x12, 0x28, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x73,
	0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31,
	0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x04, 0x50, 0x61, 0x72, 0x74, 0x12,
	0x28, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x50, 0x61,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x73, 0x74, 0x72, 0x69,
	0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x28, 0x2e, 0x73,
	0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31,
	0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x7c, 0x0a, 0x0f, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x33, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x73, 0x74, 0x72, 0x69,
	0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x73, 0x0a, 0x0c, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x30, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x31, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x32, 0xff, 0x0a, 0x0a, 0x11, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x12, 0x74, 0x0a, 0x07, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x33, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x73, 0x74, 0x72,
	0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x64, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x7a, 0x0a, 0x09, 0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x35, 0x2e,
	0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76,
	0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x46, 0x72, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x64, 0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x55, 0x6e, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a, 0x04,
	0x4a, 0x6f, 0x69, 0x6e, 0x12, 0x30, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x4a, 0x6f, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x4a, 0x6f, 0x69,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a, 0x04, 0x50, 0x61, 0x72,
	0x74, 0x12, 0x30, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e,
	0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a, 0x04, 0x54, 0x65, 0x73, 0x74, 0x12, 0x30,
	0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x46, 0x72, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x31, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x46,
	0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x8c, 0x01, 0x0a, 0x0f, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x3b, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73,
	0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x4d, 0x6f,
	0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x83, 0x01, 0x0a, 0x0c, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x38, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e,
	0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76,
	0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x46, 0x72, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x12, 0x34, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x73, 0x74, 0x72,
	0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x64, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x80, 0x01, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x12, 0x37, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e,
	0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x73, 0x74, 0x72,
	0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x64, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x88, 0x01, 0x0a, 0x0d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69,
	0x73, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x39, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x57, 0x61, 0x74,
	0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x3a, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e,
	0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12,
	0x94, 0x01, 0x0a, 0x11, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x3d, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x57, 0x61, 0x74, 0x63,
	0x68, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x32, 0x8e, 0x01, 0x0a, 0x10, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x12, 0x7a, 0x0a, 0x09, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x34, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d,
	0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35,
	0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x53, 0x6e, 0x69,
	0x70, 0x70, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x42, 0x73, 0x0a, 0x1e, 0x67, 0x67, 0x2e, 0x73, 0x74,
	0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5a, 0x4b, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4d, 0x65, 0x6d, 0x65, 0x4c, 0x61, 0x62, 0x73, 0x2f, 0x73,
	0x74, 0x72, 0x69, 0x6d, 0x73, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x3b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x76, 0x31, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0xba, 0x02, 0x03, 0x53, 0x4e, 0x44, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_network_v1_directory_directory_proto_rawDescOnce sync.Once
	file_network_v1_directory_directory_proto_rawDescData = file_network_v1_directory_directory_proto_rawDesc
)

func file_network_v1_directory_directory_proto_rawDescGZIP() []byte {
	file_network_v1_directory_directory_proto_rawDescOnce.Do(func() {
		file_network_v1_directory_directory_proto_rawDescData = protoimpl.X.CompressGZIP(file_network_v1_directory_directory_proto_rawDescData)
	})
	return file_network_v1_directory_directory_proto_rawDescData
}

var file_network_v1_directory_directory_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_network_v1_directory_directory_proto_msgTypes = make([]protoimpl.MessageInfo, 82)
var file_network_v1_directory_directory_proto_goTypes = []interface{}{
	(ListingContentType)(0),                               // 0: strims.network.v1.directory.ListingContentType
	(Listing_Embed_Service)(0),                            // 1: strims.network.v1.directory.Listing.Embed.Service
	(FrontendWatchListingUsersResponse_UserEventType)(0),  // 2: strims.network.v1.directory.FrontendWatchListingUsersResponse.UserEventType
	(*ServerConfig)(nil),                                  // 3: strims.network.v1.directory.ServerConfig
	(*ClientConfig)(nil),                                  // 4: strims.network.v1.directory.ClientConfig
	(*GetEventsRequest)(nil),                              // 5: strims.network.v1.directory.GetEventsRequest
	(*TestPublishRequest)(nil),                            // 6: strims.network.v1.directory.TestPublishRequest
	(*TestPublishResponse)(nil),                           // 7: strims.network.v1.directory.TestPublishResponse
	(*Listing)(nil),                                       // 8: strims.network.v1.directory.Listing
	(*ListingSnippetImage)(nil),                           // 9: strims.network.v1.directory.ListingSnippetImage
	(*ListingSnippet)(nil),                                // 10: strims.network.v1.directory.ListingSnippet
	(*ListingSnippetDelta)(nil),                           // 11: strims.network.v1.directory.ListingSnippetDelta
	(*Event)(nil),                                         // 12: strims.network.v1.directory.Event
	(*ListingModeration)(nil),                             // 13: strims.network.v1.directory.ListingModeration
	(*ListingQuery)(nil),                                  // 14: strims.network.v1.directory.ListingQuery
	(*ListingRecord)(nil),                                 // 15: strims.network.v1.directory.ListingRecord
	(*UserModeration)(nil),                                // 16: strims.network.v1.directory.UserModeration
	(*UserRecord)(nil),                                    // 17: strims.network.v1.directory.UserRecord
	(*EventBroadcast)(nil),                                // 18: strims.network.v1.directory.EventBroadcast
	(*PublishRequest)(nil),                                // 19: strims.network.v1.directory.PublishRequest
	(*PublishResponse)(nil),                               // 20: strims.network.v1.directory.PublishResponse
	(*UnpublishRequest)(nil),                              // 21: strims.network.v1.directory.UnpublishRequest
	(*UnpublishResponse)(nil),                             // 22: strims.network.v1.directory.UnpublishResponse
	(*JoinRequest)(nil),                                   // 23: strims.network.v1.directory.JoinRequest
	(*JoinResponse)(nil),                                  // 24: strims.network.v1.directory.JoinResponse
	(*PartRequest)(nil),                                   // 25: strims.network.v1.directory.PartRequest
	(*PartResponse)(nil),                                  // 26: strims.network.v1.directory.PartResponse
	(*PingRequest)(nil),                                   // 27: strims.network.v1.directory.PingRequest
	(*PingResponse)(nil),                                  // 28: strims.network.v1.directory.PingResponse
	(*ModerateListingRequest)(nil),                        // 29: strims.network.v1.directory.ModerateListingRequest
	(*ModerateListingResponse)(nil),                       // 30: strims.network.v1.directory.ModerateListingResponse
	(*ModerateUserRequest)(nil),                           // 31: strims.network.v1.directory.ModerateUserRequest
	(*ModerateUserResponse)(nil),                          // 32: strims.network.v1.directory.ModerateUserResponse
	(*Network)(nil),                                       // 33: strims.network.v1.directory.Network
	(*NetworkListingsItem)(nil),                           // 34: strims.network.v1.directory.NetworkListingsItem
	(*NetworkListings)(nil),                               // 35: strims.network.v1.directory.NetworkListings
	(*FrontendPublishRequest)(nil),                        // 36: strims.network.v1.directory.FrontendPublishRequest
	(*FrontendPublishResponse)(nil),                       // 37: strims.network.v1.directory.FrontendPublishResponse
	(*FrontendUnpublishRequest)(nil),                      // 38: strims.network.v1.directory.FrontendUnpublishRequest
	(*FrontendUnpublishResponse)(nil),                     // 39: strims.network.v1.directory.FrontendUnpublishResponse
	(*FrontendJoinRequest)(nil),                           // 40: strims.network.v1.directory.FrontendJoinRequest
	(*FrontendJoinResponse)(nil),                          // 41: strims.network.v1.directory.FrontendJoinResponse
	(*FrontendPartRequest)(nil),                           // 42: strims.network.v1.directory.FrontendPartRequest
	(*FrontendPartResponse)(nil),                          // 43: strims.network.v1.directory.FrontendPartResponse
	(*FrontendTestRequest)(nil),                           // 44: strims.network.v1.directory.FrontendTestRequest
	(*FrontendTestResponse)(nil),                          // 45: strims.network.v1.directory.FrontendTestResponse
	(*FrontendModerateListingRequest)(nil),                // 46: strims.network.v1.directory.FrontendModerateListingRequest
	(*FrontendModerateListingResponse)(nil),               // 47: strims.network.v1.directory.FrontendModerateListingResponse
	(*FrontendModerateUserRequest)(nil),                   // 48: strims.network.v1.directory.FrontendModerateUserRequest
	(*FrontendModerateUserResponse)(nil),                  // 49: strims.network.v1.directory.FrontendModerateUserResponse
	(*FrontendGetUsersRequest)(nil),                       // 50: strims.network.v1.directory.FrontendGetUsersRequest
	(*FrontendGetUsersResponse)(nil),                      // 51: strims.network.v1.directory.FrontendGetUsersResponse
	(*FrontendGetListingsRequest)(nil),                    // 52: strims.network.v1.directory.FrontendGetListingsRequest
	(*FrontendGetListingsResponse)(nil),                   // 53: strims.network.v1.directory.FrontendGetListingsResponse
	(*FrontendWatchListingsRequest)(nil),                  // 54: strims.network.v1.directory.FrontendWatchListingsRequest
	(*FrontendWatchListingsResponse)(nil),                 // 55: strims.network.v1.directory.FrontendWatchListingsResponse
	(*FrontendWatchListingUsersRequest)(nil),              // 56: strims.network.v1.directory.FrontendWatchListingUsersRequest
	(*FrontendWatchListingUsersResponse)(nil),             // 57: strims.network.v1.directory.FrontendWatchListingUsersResponse
	(*SnippetSubscribeRequest)(nil),                       // 58: strims.network.v1.directory.SnippetSubscribeRequest
	(*SnippetSubscribeResponse)(nil),                      // 59: strims.network.v1.directory.SnippetSubscribeResponse
	(*ServerConfig_Integrations)(nil),                     // 60: strims.network.v1.directory.ServerConfig.Integrations
	(*ServerConfig_Integrations_AngelThump)(nil),          // 61: strims.network.v1.directory.ServerConfig.Integrations.AngelThump
	(*ServerConfig_Integrations_Twitch)(nil),              // 62: strims.network.v1.directory.ServerConfig.Integrations.Twitch
	(*ServerConfig_Integrations_YouTube)(nil),             // 63: strims.network.v1.directory.ServerConfig.Integrations.YouTube
	(*ServerConfig_Integrations_Swarm)(nil),               // 64: strims.network.v1.directory.ServerConfig.Integrations.Swarm
	(*ClientConfig_Integrations)(nil),                     // 65: strims.network.v1.directory.ClientConfig.Integrations
	(*Listing_Media)(nil),                                 // 66: strims.network.v1.directory.Listing.Media
	(*Listing_Service)(nil),                               // 67: strims.network.v1.directory.Listing.Service
	(*Listing_Embed)(nil),                                 // 68: strims.network.v1.directory.Listing.Embed
	(*Listing_Chat)(nil),                                  // 69: strims.network.v1.directory.Listing.Chat
	nil,                                                   // 70: strims.network.v1.directory.Listing.Embed.QueryParamsEntry
	(*ListingSnippetDelta_Tags)(nil),                      // 71: strims.network.v1.directory.ListingSnippetDelta.Tags
	(*Event_ListingChange)(nil),                           // 72: strims.network.v1.directory.Event.ListingChange
	(*Event_Unpublish)(nil),                               // 73: strims.network.v1.directory.Event.Unpublish
	(*Event_UserCountChange)(nil),                         // 74: strims.network.v1.directory.Event.UserCountChange
	(*Event_UserPresenceChange)(nil),                      // 75: strims.network.v1.directory.Event.UserPresenceChange
	(*Event_Ping)(nil),                                    // 76: strims.network.v1.directory.Event.Ping
	(*FrontendGetUsersResponse_Alias)(nil),                // 77: strims.network.v1.directory.FrontendGetUsersResponse.Alias
	(*FrontendGetUsersResponse_User)(nil),                 // 78: strims.network.v1.directory.FrontendGetUsersResponse.User
	nil,                                                   // 79: strims.network.v1.directory.FrontendGetUsersResponse.NetworksEntry
	(*FrontendWatchListingsResponse_Change)(nil),          // 80: strims.network.v1.directory.FrontendWatchListingsResponse.Change
	(*FrontendWatchListingsResponse_Unpublish)(nil),       // 81: strims.network.v1.directory.FrontendWatchListingsResponse.Unpublish
	(*FrontendWatchListingsResponse_UserCountChange)(nil), // 82: strims.network.v1.directory.FrontendWatchListingsResponse.UserCountChange
	(*FrontendWatchListingsResponse_Event)(nil),           // 83: strims.network.v1.directory.FrontendWatchListingsResponse.Event
	(*FrontendWatchListingUsersResponse_User)(nil),        // 84: strims.network.v1.directory.FrontendWatchListingUsersResponse.User
	(*image.Image)(nil),                                   // 85: strims.type.Image
	(*wrapperspb.StringValue)(nil),                        // 86: google.protobuf.StringValue
	(*wrapperspb.UInt64Value)(nil),                        // 87: google.protobuf.UInt64Value
	(*wrapperspb.BoolValue)(nil),                          // 88: google.protobuf.BoolValue
	(*wrapperspb.BytesValue)(nil),                         // 89: google.protobuf.BytesValue
	(*wrapperspb.UInt32Value)(nil),                        // 90: google.protobuf.UInt32Value
	(*wrapperspb.Int64Value)(nil),                         // 91: google.protobuf.Int64Value
}
var file_network_v1_directory_directory_proto_depIdxs = []int32{
	60, // 0: strims.network.v1.directory.ServerConfig.integrations:type_name -> strims.network.v1.directory.ServerConfig.Integrations
	65, // 1: strims.network.v1.directory.ClientConfig.integrations:type_name -> strims.network.v1.directory.ClientConfig.Integrations
	66, // 2: strims.network.v1.directory.Listing.media:type_name -> strims.network.v1.directory.Listing.Media
	67, // 3: strims.network.v1.directory.Listing.service:type_name -> strims.network.v1.directory.Listing.Service
	68, // 4: strims.network.v1.directory.Listing.embed:type_name -> strims.network.v1.directory.Listing.Embed
	69, // 5: strims.network.v1.directory.Listing.chat:type_name -> strims.network.v1.directory.Listing.Chat
	85, // 6: strims.network.v1.directory.ListingSnippetImage.image:type_name -> strims.type.Image
	9,  // 7: strims.network.v1.directory.ListingSnippet.thumbnail:type_name -> strims.network.v1.directory.ListingSnippetImage
	9,  // 8: strims.network.v1.directory.ListingSnippet.channel_logo:type_name -> strims.network.v1.directory.ListingSnippetImage
	86, // 9: strims.network.v1.directory.ListingSnippetDelta.title:type_name -> google.protobuf.StringValue
	86, // 10: strims.network.v1.directory.ListingSnippetDelta.description:type_name -> google.protobuf.StringValue
	86, // 11: strims.network.v1.directory.ListingSnippetDelta.category:type_name -> google.protobuf.StringValue
	86, // 12: strims.network.v1.directory.ListingSnippetDelta.channel_name:type_name -> google.protobuf.StringValue
	87, // 13: strims.network.v1.directory.ListingSnippetDelta.user_count:type_name -> google.protobuf.UInt64Value
	88, // 14: strims.network.v1.directory.ListingSnippetDelta.live:type_name -> google.protobuf.BoolValue
	88, // 15: strims.network.v1.directory.ListingSnippetDelta.is_mature:type_name -> google.protobuf.BoolValue
	89, // 16: strims.network.v1.directory.ListingSnippetDelta.key:type_name -> google.protobuf.BytesValue
	89, // 17: strims.network.v1.directory.ListingSnippetDelta.signature:type_name -> google.protobuf.BytesValue
	90, // 18: strims.network.v1.directory.ListingSnippetDelta.video_height:type_name -> google.protobuf.UInt32Value
	90, // 19: strims.network.v1.directory.ListingSnippetDelta.video_width:type_name -> google.protobuf.UInt32Value
	90, // 20: strims.network.v1.directory.ListingSnippetDelta.theme_color:type_name -> google.protobuf.UInt32Value
	91, // 21: strims.network.v1.directory.ListingSnippetDelta.start_time:type_name -> google.protobuf.Int64Value
	71, // 22: strims.network.v1.directory.ListingSnippetDelta.tags:type_name -> strims.network.v1.directory.ListingSnippetDelta.Tags
	9,  // 23: strims.network.v1.directory.ListingSnippetDelta.thumbnail:type_name -> strims.network.v1.directory.ListingSnippetImage
	9,  // 24: strims.network.v1.directory.ListingSnippetDelta.channel_logo:type_name -> strims.network.v1.directory.ListingSnippetImage
	72, // 25: strims.network.v1.directory.Event.listing_change:type_name -> strims.network.v1.directory.Event.ListingChange
	73, // 26: strims.network.v1.directory.Event.unpublish:type_name -> strims.network.v1.directory.Event.Unpublish
	74, // 27: strims.network.v1.directory.Event.user_count_change:type_name -> strims.network.v1.directory.Event.UserCountChange
	75, // 28: strims.network.v1.directory.Event.user_presence_change:type_name -> strims.network.v1.directory.Event.UserPresenceChange
	76, // 29: strims.network.v1.directory.Event.ping:type_name -> strims.network.v1.directory.Event.Ping
	88, // 30: strims.network.v1.directory.ListingModeration.is_mature:type_name -> google.protobuf.BoolValue
	88, // 31: strims.network.v1.directory.ListingModeration.is_banned:type_name -> google.protobuf.BoolValue
	86, // 32: strims.network.v1.directory.ListingModeration.category:type_name -> google.protobuf.StringValue
	8,  // 33: strims.network.v1.directory.ListingQuery.listing:type_name -> strims.network.v1.directory.Listing
	8,  // 34: strims.network.v1.directory.ListingRecord.listing:type_name -> strims.network.v1.directory.Listing
	13, // 35: strims.network.v1.directory.ListingRecord.moderation:type_name -> strims.network.v1.directory.ListingModeration
	88, // 36: strims.network.v1.directory.UserModeration.disable_join:type_name -> google.protobuf.BoolValue
	88, // 37: strims.network.v1.directory.UserModeration.disable_publish:type_name -> google.protobuf.BoolValue
	88, // 38: strims.network.v1.directory.UserModeration.is_moderator:type_name -> google.protobuf.BoolValue
	88, // 39: strims.network.v1.directory.UserModeration.is_admin:type_name -> google.protobuf.BoolValue
	16, // 40: strims.network.v1.directory.UserRecord.moderation:type_name -> strims.network.v1.directory.UserModeration
	12, // 41: strims.network.v1.directory.EventBroadcast.events:type_name -> strims.network.v1.directory.Event
	8,  // 42: strims.network.v1.directory.PublishRequest.listing:type_name -> strims.network.v1.directory.Listing
	14, // 43: strims.network.v1.directory.JoinRequest.query:type_name -> strims.network.v1.directory.ListingQuery
	13, // 44: strims.network.v1.directory.ModerateListingRequest.moderation:type_name -> strims.network.v1.directory.ListingModeration
	16, // 45: strims.network.v1.directory.ModerateUserRequest.moderation:type_name -> strims.network.v1.directory.UserModeration
	8,  // 46: strims.network.v1.directory.NetworkListingsItem.listing:type_name -> strims.network.v1.directory.Listing
	10, // 47: strims.network.v1.directory.NetworkListingsItem.snippet:type_name -> strims.network.v1.directory.ListingSnippet
	13, // 48: strims.network.v1.directory.NetworkListingsItem.moderation:type_name -> strims.network.v1.directory.ListingModeration
	33, // 49: strims.network.v1.directory.NetworkListings.network:type_name -> strims.network.v1.directory.Network
	34, // 50: strims.network.v1.directory.NetworkListings.listings:type_name -> strims.network.v1.directory.NetworkListingsItem
	8,  // 51: strims.network.v1.directory.FrontendPublishRequest.listing:type_name -> strims.network.v1.directory.Listing
	14, // 52: strims.network.v1.directory.FrontendJoinRequest.query:type_name -> strims.network.v1.directory.ListingQuery
	13, // 53: strims.network.v1.directory.FrontendModerateListingRequest.moderation:type_name -> strims.network.v1.directory.ListingModeration
	16, // 54: strims.network.v1.directory.FrontendModerateUserRequest.moderation:type_name -> strims.network.v1.directory.UserModeration
	78, // 55: strims.network.v1.directory.FrontendGetUsersResponse.users:type_name -> strims.network.v1.directory.FrontendGetUsersResponse.User
	79, // 56: strims.network.v1.directory.FrontendGetUsersResponse.networks:type_name -> strims.network.v1.directory.FrontendGetUsersResponse.NetworksEntry
	0,  // 57: strims.network.v1.directory.FrontendGetListingsRequest.content_types:type_name -> strims.network.v1.directory.ListingContentType
	35, // 58: strims.network.v1.directory.FrontendGetListingsResponse.listings:type_name -> strims.network.v1.directory.NetworkListings
	0,  // 59: strims.network.v1.directory.FrontendWatchListingsRequest.content_types:type_name -> strims.network.v1.directory.ListingContentType
	83, // 60: strims.network.v1.directory.FrontendWatchListingsResponse.events:type_name -> strims.network.v1.directory.FrontendWatchListingsResponse.Event
	14, // 61: strims.network.v1.directory.FrontendWatchListingUsersRequest.query:type_name -> strims.network.v1.directory.ListingQuery
	2,  // 62: strims.network.v1.directory.FrontendWatchListingUsersResponse.type:type_name -> strims.network.v1.directory.FrontendWatchListingUsersResponse.UserEventType
	84, // 63: strims.network.v1.directory.FrontendWatchListingUsersResponse.users:type_name -> strims.network.v1.directory.FrontendWatchListingUsersResponse.User
	11, // 64: strims.network.v1.directory.SnippetSubscribeResponse.snippet_delta:type_name -> strims.network.v1.directory.ListingSnippetDelta
	61, // 65: strims.network.v1.directory.ServerConfig.Integrations.angelthump:type_name -> strims.network.v1.directory.ServerConfig.Integrations.AngelThump
	62, // 66: strims.network.v1.directory.ServerConfig.Integrations.twitch:type_name -> strims.network.v1.directory.ServerConfig.Integrations.Twitch
	63, // 67: strims.network.v1.directory.ServerConfig.Integrations.youtube:type_name -> strims.network.v1.directory.ServerConfig.Integrations.YouTube
	64, // 68: strims.network.v1.directory.ServerConfig.Integrations.swarm:type_name -> strims.network.v1.directory.ServerConfig.Integrations.Swarm
	1,  // 69: strims.network.v1.directory.Listing.Embed.service:type_name -> strims.network.v1.directory.Listing.Embed.Service
	70, // 70: strims.network.v1.directory.Listing.Embed.query_params:type_name -> strims.network.v1.directory.Listing.Embed.QueryParamsEntry
	8,  // 71: strims.network.v1.directory.Event.ListingChange.listing:type_name -> strims.network.v1.directory.Listing
	10, // 72: strims.network.v1.directory.Event.ListingChange.snippet:type_name -> strims.network.v1.directory.ListingSnippet
	13, // 73: strims.network.v1.directory.Event.ListingChange.moderation:type_name -> strims.network.v1.directory.ListingModeration
	77, // 74: strims.network.v1.directory.FrontendGetUsersResponse.User.aliases:type_name -> strims.network.v1.directory.FrontendGetUsersResponse.Alias
	33, // 75: strims.network.v1.directory.FrontendGetUsersResponse.NetworksEntry.value:type_name -> strims.network.v1.directory.Network
	35, // 76: strims.network.v1.directory.FrontendWatchListingsResponse.Change.listings:type_name -> strims.network.v1.directory.NetworkListings
	80, // 77: strims.network.v1.directory.FrontendWatchListingsResponse.Event.change:type_name -> strims.network.v1.directory.FrontendWatchListingsResponse.Change
	81, // 78: strims.network.v1.directory.FrontendWatchListingsResponse.Event.unpublish:type_name -> strims.network.v1.directory.FrontendWatchListingsResponse.Unpublish
	82, // 79: strims.network.v1.directory.FrontendWatchListingsResponse.Event.user_count_change:type_name -> strims.network.v1.directory.FrontendWatchListingsResponse.UserCountChange
	19, // 80: strims.network.v1.directory.Directory.Publish:input_type -> strims.network.v1.directory.PublishRequest
	21, // 81: strims.network.v1.directory.Directory.Unpublish:input_type -> strims.network.v1.directory.UnpublishRequest
	23, // 82: strims.network.v1.directory.Directory.Join:input_type -> strims.network.v1.directory.JoinRequest
	25, // 83: strims.network.v1.directory.Directory.Part:input_type -> strims.network.v1.directory.PartRequest
	27, // 84: strims.network.v1.directory.Directory.Ping:input_type -> strims.network.v1.directory.PingRequest
	29, // 85: strims.network.v1.directory.Directory.ModerateListing:input_type -> strims.network.v1.directory.ModerateListingRequest
	31, // 86: strims.network.v1.directory.Directory.ModerateUser:input_type -> strims.network.v1.directory.ModerateUserRequest
	36, // 87: strims.network.v1.directory.DirectoryFrontend.Publish:input_type -> strims.network.v1.directory.FrontendPublishRequest
	38, // 88: strims.network.v1.directory.DirectoryFrontend.Unpublish:input_type -> strims.network.v1.directory.FrontendUnpublishRequest
	40, // 89: strims.network.v1.directory.DirectoryFrontend.Join:input_type -> strims.network.v1.directory.FrontendJoinRequest
	42, // 90: strims.network.v1.directory.DirectoryFrontend.Part:input_type -> strims.network.v1.directory.FrontendPartRequest
	44, // 91: strims.network.v1.directory.DirectoryFrontend.Test:input_type -> strims.network.v1.directory.FrontendTestRequest
	46, // 92: strims.network.v1.directory.DirectoryFrontend.ModerateListing:input_type -> strims.network.v1.directory.FrontendModerateListingRequest
	48, // 93: strims.network.v1.directory.DirectoryFrontend.ModerateUser:input_type -> strims.network.v1.directory.FrontendModerateUserRequest
	50, // 94: strims.network.v1.directory.DirectoryFrontend.GetUsers:input_type -> strims.network.v1.directory.FrontendGetUsersRequest
	52, // 95: strims.network.v1.directory.DirectoryFrontend.GetListings:input_type -> strims.network.v1.directory.FrontendGetListingsRequest
	54, // 96: strims.network.v1.directory.DirectoryFrontend.WatchListings:input_type -> strims.network.v1.directory.FrontendWatchListingsRequest
	56, // 97: strims.network.v1.directory.DirectoryFrontend.WatchListingUsers:input_type -> strims.network.v1.directory.FrontendWatchListingUsersRequest
	58, // 98: strims.network.v1.directory.DirectorySnippet.Subscribe:input_type -> strims.network.v1.directory.SnippetSubscribeRequest
	20, // 99: strims.network.v1.directory.Directory.Publish:output_type -> strims.network.v1.directory.PublishResponse
	22, // 100: strims.network.v1.directory.Directory.Unpublish:output_type -> strims.network.v1.directory.UnpublishResponse
	24, // 101: strims.network.v1.directory.Directory.Join:output_type -> strims.network.v1.directory.JoinResponse
	26, // 102: strims.network.v1.directory.Directory.Part:output_type -> strims.network.v1.directory.PartResponse
	28, // 103: strims.network.v1.directory.Directory.Ping:output_type -> strims.network.v1.directory.PingResponse
	30, // 104: strims.network.v1.directory.Directory.ModerateListing:output_type -> strims.network.v1.directory.ModerateListingResponse
	32, // 105: strims.network.v1.directory.Directory.ModerateUser:output_type -> strims.network.v1.directory.ModerateUserResponse
	37, // 106: strims.network.v1.directory.DirectoryFrontend.Publish:output_type -> strims.network.v1.directory.FrontendPublishResponse
	39, // 107: strims.network.v1.directory.DirectoryFrontend.Unpublish:output_type -> strims.network.v1.directory.FrontendUnpublishResponse
	41, // 108: strims.network.v1.directory.DirectoryFrontend.Join:output_type -> strims.network.v1.directory.FrontendJoinResponse
	43, // 109: strims.network.v1.directory.DirectoryFrontend.Part:output_type -> strims.network.v1.directory.FrontendPartResponse
	45, // 110: strims.network.v1.directory.DirectoryFrontend.Test:output_type -> strims.network.v1.directory.FrontendTestResponse
	47, // 111: strims.network.v1.directory.DirectoryFrontend.ModerateListing:output_type -> strims.network.v1.directory.FrontendModerateListingResponse
	49, // 112: strims.network.v1.directory.DirectoryFrontend.ModerateUser:output_type -> strims.network.v1.directory.FrontendModerateUserResponse
	51, // 113: strims.network.v1.directory.DirectoryFrontend.GetUsers:output_type -> strims.network.v1.directory.FrontendGetUsersResponse
	53, // 114: strims.network.v1.directory.DirectoryFrontend.GetListings:output_type -> strims.network.v1.directory.FrontendGetListingsResponse
	55, // 115: strims.network.v1.directory.DirectoryFrontend.WatchListings:output_type -> strims.network.v1.directory.FrontendWatchListingsResponse
	57, // 116: strims.network.v1.directory.DirectoryFrontend.WatchListingUsers:output_type -> strims.network.v1.directory.FrontendWatchListingUsersResponse
	59, // 117: strims.network.v1.directory.DirectorySnippet.Subscribe:output_type -> strims.network.v1.directory.SnippetSubscribeResponse
	99, // [99:118] is the sub-list for method output_type
	80, // [80:99] is the sub-list for method input_type
	80, // [80:80] is the sub-list for extension type_name
	80, // [80:80] is the sub-list for extension extendee
	0,  // [0:80] is the sub-list for field type_name
}

func init() { file_network_v1_directory_directory_proto_init() }
func file_network_v1_directory_directory_proto_init() {
	if File_network_v1_directory_directory_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_network_v1_directory_directory_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestPublishRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestPublishResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Listing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListingSnippetImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListingSnippet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListingSnippetDelta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListingModeration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListingQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListingRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserModeration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventBroadcast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnpublishRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnpublishResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PartResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModerateListingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModerateListingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModerateUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModerateUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Network); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkListingsItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkListings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontendPublishRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontendPublishResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontendUnpublishRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontendUnpublishResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontendJoinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontendJoinResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontendPartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontendPartResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontendTestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontendTestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontendModerateListingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontendModerateListingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontendModerateUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontendModerateUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontendGetUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontendGetUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontendGetListingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontendGetListingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontendWatchListingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontendWatchListingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontendWatchListingUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontendWatchListingUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnippetSubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnippetSubscribeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerConfig_Integrations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerConfig_Integrations_AngelThump); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerConfig_Integrations_Twitch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerConfig_Integrations_YouTube); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerConfig_Integrations_Swarm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientConfig_Integrations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Listing_Media); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Listing_Service); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Listing_Embed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Listing_Chat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListingSnippetDelta_Tags); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event_ListingChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event_Unpublish); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event_UserCountChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event_UserPresenceChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event_Ping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontendGetUsersResponse_Alias); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontendGetUsersResponse_User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontendWatchListingsResponse_Change); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontendWatchListingsResponse_Unpublish); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontendWatchListingsResponse_UserCountChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontendWatchListingsResponse_Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_v1_directory_directory_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontendWatchListingUsersResponse_User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_network_v1_directory_directory_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*Listing_Media_)(nil),
		(*Listing_Service_)(nil),
		(*Listing_Embed_)(nil),
		(*Listing_Chat_)(nil),
	}
	file_network_v1_directory_directory_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*ListingSnippetImage_Url)(nil),
		(*ListingSnippetImage_Image)(nil),
	}
	file_network_v1_directory_directory_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*ListingSnippetDelta_Tags_)(nil),
		(*ListingSnippetDelta_Thumbnail)(nil),
		(*ListingSnippetDelta_ChannelLogo)(nil),
	}
	file_network_v1_directory_directory_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*Event_ListingChange_)(nil),
		(*Event_Unpublish_)(nil),
		(*Event_UserCountChange_)(nil),
		(*Event_UserPresenceChange_)(nil),
		(*Event_Ping_)(nil),
	}
	file_network_v1_directory_directory_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*ListingQuery_Id)(nil),
		(*ListingQuery_Listing)(nil),
	}
	file_network_v1_directory_directory_proto_msgTypes[80].OneofWrappers = []interface{}{
		(*FrontendWatchListingsResponse_Event_Change)(nil),
		(*FrontendWatchListingsResponse_Event_Unpublish)(nil),
		(*FrontendWatchListingsResponse_Event_UserCountChange)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_network_v1_directory_directory_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   82,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_network_v1_directory_directory_proto_goTypes,
		DependencyIndexes: file_network_v1_directory_directory_proto_depIdxs,
		EnumInfos:         file_network_v1_directory_directory_proto_enumTypes,
		MessageInfos:      file_network_v1_directory_directory_proto_msgTypes,
	}.Build()
	File_network_v1_directory_directory_proto = out.File
	file_network_v1_directory_directory_proto_rawDesc = nil
	file_network_v1_directory_directory_proto_goTypes = nil
	file_network_v1_directory_directory_proto_depIdxs = nil
}
