// Copyright 2022 Strims contributors
// SPDX-License-Identifier: AGPL-3.0-only

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.1
// source: vpn/v1/peer_exchange.proto

package vpnv1

import (
	v1 "github.com/MemeLabs/strims/pkg/apis/vnic/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PeerExchangeMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Body:
	//	*PeerExchangeMessage_LinkOffer_
	//	*PeerExchangeMessage_LinkAnswer_
	//	*PeerExchangeMessage_Rejection_
	Body isPeerExchangeMessage_Body `protobuf_oneof:"body"`
}

func (x *PeerExchangeMessage) Reset() {
	*x = PeerExchangeMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vpn_v1_peer_exchange_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeerExchangeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerExchangeMessage) ProtoMessage() {}

func (x *PeerExchangeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_vpn_v1_peer_exchange_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerExchangeMessage.ProtoReflect.Descriptor instead.
func (*PeerExchangeMessage) Descriptor() ([]byte, []int) {
	return file_vpn_v1_peer_exchange_proto_rawDescGZIP(), []int{0}
}

func (m *PeerExchangeMessage) GetBody() isPeerExchangeMessage_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (x *PeerExchangeMessage) GetLinkOffer() *PeerExchangeMessage_LinkOffer {
	if x, ok := x.GetBody().(*PeerExchangeMessage_LinkOffer_); ok {
		return x.LinkOffer
	}
	return nil
}

func (x *PeerExchangeMessage) GetLinkAnswer() *PeerExchangeMessage_LinkAnswer {
	if x, ok := x.GetBody().(*PeerExchangeMessage_LinkAnswer_); ok {
		return x.LinkAnswer
	}
	return nil
}

func (x *PeerExchangeMessage) GetRejection() *PeerExchangeMessage_Rejection {
	if x, ok := x.GetBody().(*PeerExchangeMessage_Rejection_); ok {
		return x.Rejection
	}
	return nil
}

type isPeerExchangeMessage_Body interface {
	isPeerExchangeMessage_Body()
}

type PeerExchangeMessage_LinkOffer_ struct {
	LinkOffer *PeerExchangeMessage_LinkOffer `protobuf:"bytes,1001,opt,name=link_offer,json=linkOffer,proto3,oneof"`
}

type PeerExchangeMessage_LinkAnswer_ struct {
	LinkAnswer *PeerExchangeMessage_LinkAnswer `protobuf:"bytes,1002,opt,name=link_answer,json=linkAnswer,proto3,oneof"`
}

type PeerExchangeMessage_Rejection_ struct {
	Rejection *PeerExchangeMessage_Rejection `protobuf:"bytes,1003,opt,name=rejection,proto3,oneof"`
}

func (*PeerExchangeMessage_LinkOffer_) isPeerExchangeMessage_Body() {}

func (*PeerExchangeMessage_LinkAnswer_) isPeerExchangeMessage_Body() {}

func (*PeerExchangeMessage_Rejection_) isPeerExchangeMessage_Body() {}

type PeerExchangeMessage_LinkOffer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExchangeId   uint64                `protobuf:"varint,1,opt,name=exchange_id,json=exchangeId,proto3" json:"exchange_id,omitempty"`
	Descriptions []*v1.LinkDescription `protobuf:"bytes,2,rep,name=descriptions,proto3" json:"descriptions,omitempty"`
}

func (x *PeerExchangeMessage_LinkOffer) Reset() {
	*x = PeerExchangeMessage_LinkOffer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vpn_v1_peer_exchange_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeerExchangeMessage_LinkOffer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerExchangeMessage_LinkOffer) ProtoMessage() {}

func (x *PeerExchangeMessage_LinkOffer) ProtoReflect() protoreflect.Message {
	mi := &file_vpn_v1_peer_exchange_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerExchangeMessage_LinkOffer.ProtoReflect.Descriptor instead.
func (*PeerExchangeMessage_LinkOffer) Descriptor() ([]byte, []int) {
	return file_vpn_v1_peer_exchange_proto_rawDescGZIP(), []int{0, 0}
}

func (x *PeerExchangeMessage_LinkOffer) GetExchangeId() uint64 {
	if x != nil {
		return x.ExchangeId
	}
	return 0
}

func (x *PeerExchangeMessage_LinkOffer) GetDescriptions() []*v1.LinkDescription {
	if x != nil {
		return x.Descriptions
	}
	return nil
}

type PeerExchangeMessage_LinkAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExchangeId   uint64                `protobuf:"varint,1,opt,name=exchange_id,json=exchangeId,proto3" json:"exchange_id,omitempty"`
	Descriptions []*v1.LinkDescription `protobuf:"bytes,2,rep,name=descriptions,proto3" json:"descriptions,omitempty"`
	ErrorMessage string                `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
}

func (x *PeerExchangeMessage_LinkAnswer) Reset() {
	*x = PeerExchangeMessage_LinkAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vpn_v1_peer_exchange_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeerExchangeMessage_LinkAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerExchangeMessage_LinkAnswer) ProtoMessage() {}

func (x *PeerExchangeMessage_LinkAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_vpn_v1_peer_exchange_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerExchangeMessage_LinkAnswer.ProtoReflect.Descriptor instead.
func (*PeerExchangeMessage_LinkAnswer) Descriptor() ([]byte, []int) {
	return file_vpn_v1_peer_exchange_proto_rawDescGZIP(), []int{0, 1}
}

func (x *PeerExchangeMessage_LinkAnswer) GetExchangeId() uint64 {
	if x != nil {
		return x.ExchangeId
	}
	return 0
}

func (x *PeerExchangeMessage_LinkAnswer) GetDescriptions() []*v1.LinkDescription {
	if x != nil {
		return x.Descriptions
	}
	return nil
}

func (x *PeerExchangeMessage_LinkAnswer) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type PeerExchangeMessage_Rejection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MediationId uint64 `protobuf:"varint,1,opt,name=mediation_id,json=mediationId,proto3" json:"mediation_id,omitempty"`
}

func (x *PeerExchangeMessage_Rejection) Reset() {
	*x = PeerExchangeMessage_Rejection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vpn_v1_peer_exchange_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeerExchangeMessage_Rejection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerExchangeMessage_Rejection) ProtoMessage() {}

func (x *PeerExchangeMessage_Rejection) ProtoReflect() protoreflect.Message {
	mi := &file_vpn_v1_peer_exchange_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerExchangeMessage_Rejection.ProtoReflect.Descriptor instead.
func (*PeerExchangeMessage_Rejection) Descriptor() ([]byte, []int) {
	return file_vpn_v1_peer_exchange_proto_rawDescGZIP(), []int{0, 2}
}

func (x *PeerExchangeMessage_Rejection) GetMediationId() uint64 {
	if x != nil {
		return x.MediationId
	}
	return 0
}

var File_vpn_v1_peer_exchange_proto protoreflect.FileDescriptor

var file_vpn_v1_peer_exchange_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x76, 0x70, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x65, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x73, 0x74,
	0x72, 0x69, 0x6d, 0x73, 0x2e, 0x76, 0x70, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x12, 0x76, 0x6e, 0x69,
	0x63, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x6e, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xcc, 0x04, 0x0a, 0x13, 0x50, 0x65, 0x65, 0x72, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4e, 0x0a, 0x0a, 0x6c, 0x69, 0x6e, 0x6b, 0x5f,
	0x6f, 0x66, 0x66, 0x65, 0x72, 0x18, 0xe9, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73,
	0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x76, 0x70, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x65,
	0x72, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x48, 0x00, 0x52, 0x09, 0x6c, 0x69,
	0x6e, 0x6b, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x12, 0x51, 0x0a, 0x0b, 0x6c, 0x69, 0x6e, 0x6b, 0x5f,
	0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0xea, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x76, 0x70, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65,
	0x65, 0x72, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0a,
	0x6c, 0x69, 0x6e, 0x6b, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x4d, 0x0a, 0x09, 0x72, 0x65,
	0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xeb, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x76, 0x70, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x65, 0x65, 0x72, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x09,
	0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x71, 0x0a, 0x09, 0x4c, 0x69, 0x6e,
	0x6b, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x65, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x0c, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x76, 0x6e, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x6e, 0x6b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x97, 0x01, 0x0a,
	0x0a, 0x4c, 0x69, 0x6e, 0x6b, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x0c,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x76, 0x6e, 0x69, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x2e, 0x0a, 0x09, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x42, 0x06, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x42, 0x4a,
	0x0a, 0x10, 0x67, 0x67, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x76, 0x70, 0x6e, 0x2e,
	0x76, 0x31, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4d,
	0x65, 0x6d, 0x65, 0x4c, 0x61, 0x62, 0x73, 0x2f, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x76, 0x70, 0x6e, 0x2f, 0x76, 0x31, 0x3b, 0x76,
	0x70, 0x6e, 0x76, 0x31, 0xba, 0x02, 0x03, 0x53, 0x56, 0x4e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_vpn_v1_peer_exchange_proto_rawDescOnce sync.Once
	file_vpn_v1_peer_exchange_proto_rawDescData = file_vpn_v1_peer_exchange_proto_rawDesc
)

func file_vpn_v1_peer_exchange_proto_rawDescGZIP() []byte {
	file_vpn_v1_peer_exchange_proto_rawDescOnce.Do(func() {
		file_vpn_v1_peer_exchange_proto_rawDescData = protoimpl.X.CompressGZIP(file_vpn_v1_peer_exchange_proto_rawDescData)
	})
	return file_vpn_v1_peer_exchange_proto_rawDescData
}

var file_vpn_v1_peer_exchange_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_vpn_v1_peer_exchange_proto_goTypes = []interface{}{
	(*PeerExchangeMessage)(nil),            // 0: strims.vpn.v1.PeerExchangeMessage
	(*PeerExchangeMessage_LinkOffer)(nil),  // 1: strims.vpn.v1.PeerExchangeMessage.LinkOffer
	(*PeerExchangeMessage_LinkAnswer)(nil), // 2: strims.vpn.v1.PeerExchangeMessage.LinkAnswer
	(*PeerExchangeMessage_Rejection)(nil),  // 3: strims.vpn.v1.PeerExchangeMessage.Rejection
	(*v1.LinkDescription)(nil),             // 4: strims.vnic.v1.LinkDescription
}
var file_vpn_v1_peer_exchange_proto_depIdxs = []int32{
	1, // 0: strims.vpn.v1.PeerExchangeMessage.link_offer:type_name -> strims.vpn.v1.PeerExchangeMessage.LinkOffer
	2, // 1: strims.vpn.v1.PeerExchangeMessage.link_answer:type_name -> strims.vpn.v1.PeerExchangeMessage.LinkAnswer
	3, // 2: strims.vpn.v1.PeerExchangeMessage.rejection:type_name -> strims.vpn.v1.PeerExchangeMessage.Rejection
	4, // 3: strims.vpn.v1.PeerExchangeMessage.LinkOffer.descriptions:type_name -> strims.vnic.v1.LinkDescription
	4, // 4: strims.vpn.v1.PeerExchangeMessage.LinkAnswer.descriptions:type_name -> strims.vnic.v1.LinkDescription
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_vpn_v1_peer_exchange_proto_init() }
func file_vpn_v1_peer_exchange_proto_init() {
	if File_vpn_v1_peer_exchange_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_vpn_v1_peer_exchange_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeerExchangeMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vpn_v1_peer_exchange_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeerExchangeMessage_LinkOffer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vpn_v1_peer_exchange_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeerExchangeMessage_LinkAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vpn_v1_peer_exchange_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeerExchangeMessage_Rejection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_vpn_v1_peer_exchange_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*PeerExchangeMessage_LinkOffer_)(nil),
		(*PeerExchangeMessage_LinkAnswer_)(nil),
		(*PeerExchangeMessage_Rejection_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vpn_v1_peer_exchange_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_vpn_v1_peer_exchange_proto_goTypes,
		DependencyIndexes: file_vpn_v1_peer_exchange_proto_depIdxs,
		MessageInfos:      file_vpn_v1_peer_exchange_proto_msgTypes,
	}.Build()
	File_vpn_v1_peer_exchange_proto = out.File
	file_vpn_v1_peer_exchange_proto_rawDesc = nil
	file_vpn_v1_peer_exchange_proto_goTypes = nil
	file_vpn_v1_peer_exchange_proto_depIdxs = nil
}
