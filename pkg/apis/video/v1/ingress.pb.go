// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: video/v1/ingress.proto

package video

import (
	directory "github.com/MemeLabs/go-ppspp/pkg/apis/network/v1/directory"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VideoIngressConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled            bool     `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	ServerAddr         string   `protobuf:"bytes,2,opt,name=server_addr,json=serverAddr,proto3" json:"server_addr,omitempty"`
	PublicServerAddr   string   `protobuf:"bytes,3,opt,name=public_server_addr,json=publicServerAddr,proto3" json:"public_server_addr,omitempty"`
	ServiceNetworkKeys [][]byte `protobuf:"bytes,4,rep,name=service_network_keys,json=serviceNetworkKeys,proto3" json:"service_network_keys,omitempty"`
}

func (x *VideoIngressConfig) Reset() {
	*x = VideoIngressConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_v1_ingress_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoIngressConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoIngressConfig) ProtoMessage() {}

func (x *VideoIngressConfig) ProtoReflect() protoreflect.Message {
	mi := &file_video_v1_ingress_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoIngressConfig.ProtoReflect.Descriptor instead.
func (*VideoIngressConfig) Descriptor() ([]byte, []int) {
	return file_video_v1_ingress_proto_rawDescGZIP(), []int{0}
}

func (x *VideoIngressConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *VideoIngressConfig) GetServerAddr() string {
	if x != nil {
		return x.ServerAddr
	}
	return ""
}

func (x *VideoIngressConfig) GetPublicServerAddr() string {
	if x != nil {
		return x.PublicServerAddr
	}
	return ""
}

func (x *VideoIngressConfig) GetServiceNetworkKeys() [][]byte {
	if x != nil {
		return x.ServiceNetworkKeys
	}
	return nil
}

type VideoIngressStream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ChannelId uint64 `protobuf:"varint,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	CreatedAt int64  `protobuf:"varint,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt int64  `protobuf:"varint,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *VideoIngressStream) Reset() {
	*x = VideoIngressStream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_v1_ingress_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoIngressStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoIngressStream) ProtoMessage() {}

func (x *VideoIngressStream) ProtoReflect() protoreflect.Message {
	mi := &file_video_v1_ingress_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoIngressStream.ProtoReflect.Descriptor instead.
func (*VideoIngressStream) Descriptor() ([]byte, []int) {
	return file_video_v1_ingress_proto_rawDescGZIP(), []int{1}
}

func (x *VideoIngressStream) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *VideoIngressStream) GetChannelId() uint64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *VideoIngressStream) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *VideoIngressStream) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type VideoIngressIsSupportedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VideoIngressIsSupportedRequest) Reset() {
	*x = VideoIngressIsSupportedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_v1_ingress_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoIngressIsSupportedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoIngressIsSupportedRequest) ProtoMessage() {}

func (x *VideoIngressIsSupportedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_v1_ingress_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoIngressIsSupportedRequest.ProtoReflect.Descriptor instead.
func (*VideoIngressIsSupportedRequest) Descriptor() ([]byte, []int) {
	return file_video_v1_ingress_proto_rawDescGZIP(), []int{2}
}

type VideoIngressIsSupportedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Supported bool `protobuf:"varint,1,opt,name=supported,proto3" json:"supported,omitempty"`
}

func (x *VideoIngressIsSupportedResponse) Reset() {
	*x = VideoIngressIsSupportedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_v1_ingress_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoIngressIsSupportedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoIngressIsSupportedResponse) ProtoMessage() {}

func (x *VideoIngressIsSupportedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_v1_ingress_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoIngressIsSupportedResponse.ProtoReflect.Descriptor instead.
func (*VideoIngressIsSupportedResponse) Descriptor() ([]byte, []int) {
	return file_video_v1_ingress_proto_rawDescGZIP(), []int{3}
}

func (x *VideoIngressIsSupportedResponse) GetSupported() bool {
	if x != nil {
		return x.Supported
	}
	return false
}

type VideoIngressGetConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VideoIngressGetConfigRequest) Reset() {
	*x = VideoIngressGetConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_v1_ingress_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoIngressGetConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoIngressGetConfigRequest) ProtoMessage() {}

func (x *VideoIngressGetConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_v1_ingress_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoIngressGetConfigRequest.ProtoReflect.Descriptor instead.
func (*VideoIngressGetConfigRequest) Descriptor() ([]byte, []int) {
	return file_video_v1_ingress_proto_rawDescGZIP(), []int{4}
}

type VideoIngressGetConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *VideoIngressConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *VideoIngressGetConfigResponse) Reset() {
	*x = VideoIngressGetConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_v1_ingress_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoIngressGetConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoIngressGetConfigResponse) ProtoMessage() {}

func (x *VideoIngressGetConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_v1_ingress_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoIngressGetConfigResponse.ProtoReflect.Descriptor instead.
func (*VideoIngressGetConfigResponse) Descriptor() ([]byte, []int) {
	return file_video_v1_ingress_proto_rawDescGZIP(), []int{5}
}

func (x *VideoIngressGetConfigResponse) GetConfig() *VideoIngressConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type VideoIngressSetConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *VideoIngressConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *VideoIngressSetConfigRequest) Reset() {
	*x = VideoIngressSetConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_v1_ingress_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoIngressSetConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoIngressSetConfigRequest) ProtoMessage() {}

func (x *VideoIngressSetConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_v1_ingress_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoIngressSetConfigRequest.ProtoReflect.Descriptor instead.
func (*VideoIngressSetConfigRequest) Descriptor() ([]byte, []int) {
	return file_video_v1_ingress_proto_rawDescGZIP(), []int{6}
}

func (x *VideoIngressSetConfigRequest) GetConfig() *VideoIngressConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type VideoIngressSetConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *VideoIngressConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *VideoIngressSetConfigResponse) Reset() {
	*x = VideoIngressSetConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_v1_ingress_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoIngressSetConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoIngressSetConfigResponse) ProtoMessage() {}

func (x *VideoIngressSetConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_v1_ingress_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoIngressSetConfigResponse.ProtoReflect.Descriptor instead.
func (*VideoIngressSetConfigResponse) Descriptor() ([]byte, []int) {
	return file_video_v1_ingress_proto_rawDescGZIP(), []int{7}
}

func (x *VideoIngressSetConfigResponse) GetConfig() *VideoIngressConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type VideoIngressListStreamsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VideoIngressListStreamsRequest) Reset() {
	*x = VideoIngressListStreamsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_v1_ingress_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoIngressListStreamsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoIngressListStreamsRequest) ProtoMessage() {}

func (x *VideoIngressListStreamsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_v1_ingress_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoIngressListStreamsRequest.ProtoReflect.Descriptor instead.
func (*VideoIngressListStreamsRequest) Descriptor() ([]byte, []int) {
	return file_video_v1_ingress_proto_rawDescGZIP(), []int{8}
}

type VideoIngressListStreamsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Streams []*VideoIngressStream `protobuf:"bytes,1,rep,name=streams,proto3" json:"streams,omitempty"`
}

func (x *VideoIngressListStreamsResponse) Reset() {
	*x = VideoIngressListStreamsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_v1_ingress_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoIngressListStreamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoIngressListStreamsResponse) ProtoMessage() {}

func (x *VideoIngressListStreamsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_v1_ingress_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoIngressListStreamsResponse.ProtoReflect.Descriptor instead.
func (*VideoIngressListStreamsResponse) Descriptor() ([]byte, []int) {
	return file_video_v1_ingress_proto_rawDescGZIP(), []int{9}
}

func (x *VideoIngressListStreamsResponse) GetStreams() []*VideoIngressStream {
	if x != nil {
		return x.Streams
	}
	return nil
}

type VideoIngressGetChannelURLRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *VideoIngressGetChannelURLRequest) Reset() {
	*x = VideoIngressGetChannelURLRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_v1_ingress_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoIngressGetChannelURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoIngressGetChannelURLRequest) ProtoMessage() {}

func (x *VideoIngressGetChannelURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_v1_ingress_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoIngressGetChannelURLRequest.ProtoReflect.Descriptor instead.
func (*VideoIngressGetChannelURLRequest) Descriptor() ([]byte, []int) {
	return file_video_v1_ingress_proto_rawDescGZIP(), []int{10}
}

func (x *VideoIngressGetChannelURLRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type VideoIngressGetChannelURLResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url        string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	ServerAddr string `protobuf:"bytes,2,opt,name=server_addr,json=serverAddr,proto3" json:"server_addr,omitempty"`
	StreamKey  string `protobuf:"bytes,3,opt,name=stream_key,json=streamKey,proto3" json:"stream_key,omitempty"`
}

func (x *VideoIngressGetChannelURLResponse) Reset() {
	*x = VideoIngressGetChannelURLResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_v1_ingress_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoIngressGetChannelURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoIngressGetChannelURLResponse) ProtoMessage() {}

func (x *VideoIngressGetChannelURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_v1_ingress_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoIngressGetChannelURLResponse.ProtoReflect.Descriptor instead.
func (*VideoIngressGetChannelURLResponse) Descriptor() ([]byte, []int) {
	return file_video_v1_ingress_proto_rawDescGZIP(), []int{11}
}

func (x *VideoIngressGetChannelURLResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *VideoIngressGetChannelURLResponse) GetServerAddr() string {
	if x != nil {
		return x.ServerAddr
	}
	return ""
}

func (x *VideoIngressGetChannelURLResponse) GetStreamKey() string {
	if x != nil {
		return x.StreamKey
	}
	return ""
}

type VideoIngressShareCreateChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DirectoryListingSnippet *directory.ListingSnippet `protobuf:"bytes,1,opt,name=directory_listing_snippet,json=directoryListingSnippet,proto3" json:"directory_listing_snippet,omitempty"`
}

func (x *VideoIngressShareCreateChannelRequest) Reset() {
	*x = VideoIngressShareCreateChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_v1_ingress_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoIngressShareCreateChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoIngressShareCreateChannelRequest) ProtoMessage() {}

func (x *VideoIngressShareCreateChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_v1_ingress_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoIngressShareCreateChannelRequest.ProtoReflect.Descriptor instead.
func (*VideoIngressShareCreateChannelRequest) Descriptor() ([]byte, []int) {
	return file_video_v1_ingress_proto_rawDescGZIP(), []int{12}
}

func (x *VideoIngressShareCreateChannelRequest) GetDirectoryListingSnippet() *directory.ListingSnippet {
	if x != nil {
		return x.DirectoryListingSnippet
	}
	return nil
}

type VideoIngressShareCreateChannelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channel *VideoChannel `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
}

func (x *VideoIngressShareCreateChannelResponse) Reset() {
	*x = VideoIngressShareCreateChannelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_v1_ingress_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoIngressShareCreateChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoIngressShareCreateChannelResponse) ProtoMessage() {}

func (x *VideoIngressShareCreateChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_v1_ingress_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoIngressShareCreateChannelResponse.ProtoReflect.Descriptor instead.
func (*VideoIngressShareCreateChannelResponse) Descriptor() ([]byte, []int) {
	return file_video_v1_ingress_proto_rawDescGZIP(), []int{13}
}

func (x *VideoIngressShareCreateChannelResponse) GetChannel() *VideoChannel {
	if x != nil {
		return x.Channel
	}
	return nil
}

type VideoIngressShareUpdateChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DirectoryListingSnippet *directory.ListingSnippet `protobuf:"bytes,1,opt,name=directory_listing_snippet,json=directoryListingSnippet,proto3" json:"directory_listing_snippet,omitempty"`
}

func (x *VideoIngressShareUpdateChannelRequest) Reset() {
	*x = VideoIngressShareUpdateChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_v1_ingress_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoIngressShareUpdateChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoIngressShareUpdateChannelRequest) ProtoMessage() {}

func (x *VideoIngressShareUpdateChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_v1_ingress_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoIngressShareUpdateChannelRequest.ProtoReflect.Descriptor instead.
func (*VideoIngressShareUpdateChannelRequest) Descriptor() ([]byte, []int) {
	return file_video_v1_ingress_proto_rawDescGZIP(), []int{14}
}

func (x *VideoIngressShareUpdateChannelRequest) GetDirectoryListingSnippet() *directory.ListingSnippet {
	if x != nil {
		return x.DirectoryListingSnippet
	}
	return nil
}

type VideoIngressShareUpdateChannelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channel *VideoChannel `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
}

func (x *VideoIngressShareUpdateChannelResponse) Reset() {
	*x = VideoIngressShareUpdateChannelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_v1_ingress_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoIngressShareUpdateChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoIngressShareUpdateChannelResponse) ProtoMessage() {}

func (x *VideoIngressShareUpdateChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_v1_ingress_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoIngressShareUpdateChannelResponse.ProtoReflect.Descriptor instead.
func (*VideoIngressShareUpdateChannelResponse) Descriptor() ([]byte, []int) {
	return file_video_v1_ingress_proto_rawDescGZIP(), []int{15}
}

func (x *VideoIngressShareUpdateChannelResponse) GetChannel() *VideoChannel {
	if x != nil {
		return x.Channel
	}
	return nil
}

type VideoIngressShareDeleteChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VideoIngressShareDeleteChannelRequest) Reset() {
	*x = VideoIngressShareDeleteChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_v1_ingress_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoIngressShareDeleteChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoIngressShareDeleteChannelRequest) ProtoMessage() {}

func (x *VideoIngressShareDeleteChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_v1_ingress_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoIngressShareDeleteChannelRequest.ProtoReflect.Descriptor instead.
func (*VideoIngressShareDeleteChannelRequest) Descriptor() ([]byte, []int) {
	return file_video_v1_ingress_proto_rawDescGZIP(), []int{16}
}

type VideoIngressShareDeleteChannelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VideoIngressShareDeleteChannelResponse) Reset() {
	*x = VideoIngressShareDeleteChannelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_v1_ingress_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoIngressShareDeleteChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoIngressShareDeleteChannelResponse) ProtoMessage() {}

func (x *VideoIngressShareDeleteChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_v1_ingress_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoIngressShareDeleteChannelResponse.ProtoReflect.Descriptor instead.
func (*VideoIngressShareDeleteChannelResponse) Descriptor() ([]byte, []int) {
	return file_video_v1_ingress_proto_rawDescGZIP(), []int{17}
}

var File_video_v1_ingress_proto protoreflect.FileDescriptor

var file_video_v1_ingress_proto_rawDesc = []byte{
	0x0a, 0x16, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31, 0x1a, 0x16, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x24, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xaf, 0x01, 0x0a, 0x12, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x12, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4b, 0x65, 0x79, 0x73, 0x22, 0x81, 0x01, 0x0a, 0x12, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x20, 0x0a,
	0x1e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x49, 0x73, 0x53,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x3f, 0x0a, 0x1f, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x49,
	0x73, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x22, 0x1e, 0x0a, 0x1c, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x5c, 0x0a, 0x1d, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3b, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x5b,
	0x0a, 0x1c, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x53, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b,
	0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x5c, 0x0a, 0x1d, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x53, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x06,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73,
	0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x20, 0x0a, 0x1e, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x60, 0x0a, 0x1f, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d,
	0x0a, 0x07, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x52, 0x07, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x22, 0x32, 0x0a,
	0x20, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x47, 0x65, 0x74,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x75, 0x0a, 0x21, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x52, 0x4c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x4b, 0x65, 0x79, 0x22, 0x90, 0x01, 0x0a, 0x25, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x67, 0x0a, 0x19, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x6e, 0x69, 0x70, 0x70,
	0x65, 0x74, 0x52, 0x17, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x69, 0x6e, 0x67, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x22, 0x61, 0x0a, 0x26, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x90,
	0x01, 0x0a, 0x25, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x67, 0x0a, 0x19, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x6e,
	0x69, 0x70, 0x70, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x74,
	0x72, 0x69, 0x6d, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e,
	0x67, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x52, 0x17, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65,
	0x74, 0x22, 0x61, 0x0a, 0x26, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73,
	0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x07, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x27, 0x0a, 0x25, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x28, 0x0a,
	0x26, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xc2, 0x04, 0x0a, 0x0c, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x70, 0x0a, 0x0b, 0x49, 0x73, 0x53, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x12, 0x2f, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49,
	0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x49, 0x73, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d,
	0x73, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x49, 0x73, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x09, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2d, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49,
	0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x2d, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x70, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x73, 0x12, 0x2f, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x30, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x55, 0x52, 0x4c, 0x12, 0x31, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x52,
	0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d,
	0x73, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x9c, 0x03, 0x0a,
	0x11, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x36, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x73,
	0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x36, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49,
	0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x37, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x0d, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x36, 0x2e, 0x73, 0x74, 0x72,
	0x69, 0x6d, 0x73, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x37, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x50, 0x0a, 0x12, 0x67,
	0x67, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x73, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76,
	0x31, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4d, 0x65,
	0x6d, 0x65, 0x4c, 0x61, 0x62, 0x73, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x70, 0x73, 0x70, 0x70, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f, 0x76,
	0x31, 0x3b, 0x76, 0x69, 0x64, 0x65, 0x6f, 0xba, 0x02, 0x03, 0x53, 0x56, 0x4f, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_video_v1_ingress_proto_rawDescOnce sync.Once
	file_video_v1_ingress_proto_rawDescData = file_video_v1_ingress_proto_rawDesc
)

func file_video_v1_ingress_proto_rawDescGZIP() []byte {
	file_video_v1_ingress_proto_rawDescOnce.Do(func() {
		file_video_v1_ingress_proto_rawDescData = protoimpl.X.CompressGZIP(file_video_v1_ingress_proto_rawDescData)
	})
	return file_video_v1_ingress_proto_rawDescData
}

var file_video_v1_ingress_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_video_v1_ingress_proto_goTypes = []interface{}{
	(*VideoIngressConfig)(nil),                     // 0: strims.video.v1.VideoIngressConfig
	(*VideoIngressStream)(nil),                     // 1: strims.video.v1.VideoIngressStream
	(*VideoIngressIsSupportedRequest)(nil),         // 2: strims.video.v1.VideoIngressIsSupportedRequest
	(*VideoIngressIsSupportedResponse)(nil),        // 3: strims.video.v1.VideoIngressIsSupportedResponse
	(*VideoIngressGetConfigRequest)(nil),           // 4: strims.video.v1.VideoIngressGetConfigRequest
	(*VideoIngressGetConfigResponse)(nil),          // 5: strims.video.v1.VideoIngressGetConfigResponse
	(*VideoIngressSetConfigRequest)(nil),           // 6: strims.video.v1.VideoIngressSetConfigRequest
	(*VideoIngressSetConfigResponse)(nil),          // 7: strims.video.v1.VideoIngressSetConfigResponse
	(*VideoIngressListStreamsRequest)(nil),         // 8: strims.video.v1.VideoIngressListStreamsRequest
	(*VideoIngressListStreamsResponse)(nil),        // 9: strims.video.v1.VideoIngressListStreamsResponse
	(*VideoIngressGetChannelURLRequest)(nil),       // 10: strims.video.v1.VideoIngressGetChannelURLRequest
	(*VideoIngressGetChannelURLResponse)(nil),      // 11: strims.video.v1.VideoIngressGetChannelURLResponse
	(*VideoIngressShareCreateChannelRequest)(nil),  // 12: strims.video.v1.VideoIngressShareCreateChannelRequest
	(*VideoIngressShareCreateChannelResponse)(nil), // 13: strims.video.v1.VideoIngressShareCreateChannelResponse
	(*VideoIngressShareUpdateChannelRequest)(nil),  // 14: strims.video.v1.VideoIngressShareUpdateChannelRequest
	(*VideoIngressShareUpdateChannelResponse)(nil), // 15: strims.video.v1.VideoIngressShareUpdateChannelResponse
	(*VideoIngressShareDeleteChannelRequest)(nil),  // 16: strims.video.v1.VideoIngressShareDeleteChannelRequest
	(*VideoIngressShareDeleteChannelResponse)(nil), // 17: strims.video.v1.VideoIngressShareDeleteChannelResponse
	(*directory.ListingSnippet)(nil),               // 18: strims.network.v1.directory.ListingSnippet
	(*VideoChannel)(nil),                           // 19: strims.video.v1.VideoChannel
}
var file_video_v1_ingress_proto_depIdxs = []int32{
	0,  // 0: strims.video.v1.VideoIngressGetConfigResponse.config:type_name -> strims.video.v1.VideoIngressConfig
	0,  // 1: strims.video.v1.VideoIngressSetConfigRequest.config:type_name -> strims.video.v1.VideoIngressConfig
	0,  // 2: strims.video.v1.VideoIngressSetConfigResponse.config:type_name -> strims.video.v1.VideoIngressConfig
	1,  // 3: strims.video.v1.VideoIngressListStreamsResponse.streams:type_name -> strims.video.v1.VideoIngressStream
	18, // 4: strims.video.v1.VideoIngressShareCreateChannelRequest.directory_listing_snippet:type_name -> strims.network.v1.directory.ListingSnippet
	19, // 5: strims.video.v1.VideoIngressShareCreateChannelResponse.channel:type_name -> strims.video.v1.VideoChannel
	18, // 6: strims.video.v1.VideoIngressShareUpdateChannelRequest.directory_listing_snippet:type_name -> strims.network.v1.directory.ListingSnippet
	19, // 7: strims.video.v1.VideoIngressShareUpdateChannelResponse.channel:type_name -> strims.video.v1.VideoChannel
	2,  // 8: strims.video.v1.VideoIngress.IsSupported:input_type -> strims.video.v1.VideoIngressIsSupportedRequest
	4,  // 9: strims.video.v1.VideoIngress.GetConfig:input_type -> strims.video.v1.VideoIngressGetConfigRequest
	6,  // 10: strims.video.v1.VideoIngress.SetConfig:input_type -> strims.video.v1.VideoIngressSetConfigRequest
	8,  // 11: strims.video.v1.VideoIngress.ListStreams:input_type -> strims.video.v1.VideoIngressListStreamsRequest
	10, // 12: strims.video.v1.VideoIngress.GetChannelURL:input_type -> strims.video.v1.VideoIngressGetChannelURLRequest
	12, // 13: strims.video.v1.VideoIngressShare.CreateChannel:input_type -> strims.video.v1.VideoIngressShareCreateChannelRequest
	14, // 14: strims.video.v1.VideoIngressShare.UpdateChannel:input_type -> strims.video.v1.VideoIngressShareUpdateChannelRequest
	16, // 15: strims.video.v1.VideoIngressShare.DeleteChannel:input_type -> strims.video.v1.VideoIngressShareDeleteChannelRequest
	3,  // 16: strims.video.v1.VideoIngress.IsSupported:output_type -> strims.video.v1.VideoIngressIsSupportedResponse
	5,  // 17: strims.video.v1.VideoIngress.GetConfig:output_type -> strims.video.v1.VideoIngressGetConfigResponse
	7,  // 18: strims.video.v1.VideoIngress.SetConfig:output_type -> strims.video.v1.VideoIngressSetConfigResponse
	9,  // 19: strims.video.v1.VideoIngress.ListStreams:output_type -> strims.video.v1.VideoIngressListStreamsResponse
	11, // 20: strims.video.v1.VideoIngress.GetChannelURL:output_type -> strims.video.v1.VideoIngressGetChannelURLResponse
	13, // 21: strims.video.v1.VideoIngressShare.CreateChannel:output_type -> strims.video.v1.VideoIngressShareCreateChannelResponse
	15, // 22: strims.video.v1.VideoIngressShare.UpdateChannel:output_type -> strims.video.v1.VideoIngressShareUpdateChannelResponse
	17, // 23: strims.video.v1.VideoIngressShare.DeleteChannel:output_type -> strims.video.v1.VideoIngressShareDeleteChannelResponse
	16, // [16:24] is the sub-list for method output_type
	8,  // [8:16] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_video_v1_ingress_proto_init() }
func file_video_v1_ingress_proto_init() {
	if File_video_v1_ingress_proto != nil {
		return
	}
	file_video_v1_channel_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_video_v1_ingress_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoIngressConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_v1_ingress_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoIngressStream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_v1_ingress_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoIngressIsSupportedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_v1_ingress_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoIngressIsSupportedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_v1_ingress_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoIngressGetConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_v1_ingress_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoIngressGetConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_v1_ingress_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoIngressSetConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_v1_ingress_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoIngressSetConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_v1_ingress_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoIngressListStreamsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_v1_ingress_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoIngressListStreamsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_v1_ingress_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoIngressGetChannelURLRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_v1_ingress_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoIngressGetChannelURLResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_v1_ingress_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoIngressShareCreateChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_v1_ingress_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoIngressShareCreateChannelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_v1_ingress_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoIngressShareUpdateChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_v1_ingress_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoIngressShareUpdateChannelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_v1_ingress_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoIngressShareDeleteChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_v1_ingress_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoIngressShareDeleteChannelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_video_v1_ingress_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_video_v1_ingress_proto_goTypes,
		DependencyIndexes: file_video_v1_ingress_proto_depIdxs,
		MessageInfos:      file_video_v1_ingress_proto_msgTypes,
	}.Build()
	File_video_v1_ingress_proto = out.File
	file_video_v1_ingress_proto_rawDesc = nil
	file_video_v1_ingress_proto_goTypes = nil
	file_video_v1_ingress_proto_depIdxs = nil
}
