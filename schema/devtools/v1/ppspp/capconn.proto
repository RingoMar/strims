// Copyright 2022 Strims contributors
// SPDX-License-Identifier: AGPL-3.0-only

syntax = "proto3";

package strims.devtools.v1.ppspp;

option go_package = "github.com/MemeLabs/strims/pkg/apis/devtools/v1/ppspp;ppspp";
option java_package = "gg.strims.devtools.v1.ppspp";
option swift_prefix = "SDT";

message CapConnLog {
  message PeerLog {
    message Event {
      enum Code {
        EVENT_CODE_INIT = 0;
        EVENT_CODE_WRITE = 1;
        EVENT_CODE_WRITE_ERR = 2;
        EVENT_CODE_FLUSH = 3;
        EVENT_CODE_FLUSH_ERR = 4;
        EVENT_CODE_READ = 5;
        EVENT_CODE_READ_ERR = 6;
      }

      enum MessageType {
        MESSAGE_TYPE_HANDSHAKE = 0;
        MESSAGE_TYPE_DATA = 1;
        MESSAGE_TYPE_ACK = 2;
        MESSAGE_TYPE_HAVE = 3;
        MESSAGE_TYPE_INTEGRITY = 4;
        MESSAGE_TYPE_SIGNED_INTEGRITY = 5;
        MESSAGE_TYPE_REQUEST = 6;
        MESSAGE_TYPE_CANCEL = 7;
        MESSAGE_TYPE_CHOKE = 8;
        MESSAGE_TYPE_UNCHOKE = 9;
        MESSAGE_TYPE_PING = 10;
        MESSAGE_TYPE_PONG = 11;
        MESSAGE_TYPE_STREAM_REQUEST = 12;
        MESSAGE_TYPE_STREAM_CANCEL = 13;
        MESSAGE_TYPE_STREAM_OPEN = 14;
        MESSAGE_TYPE_STREAM_CLOSE = 15;
        MESSAGE_TYPE_END = 255;
      }

      Code code = 1;
      sfixed64 timestamp = 2;
      repeated MessageType message_types = 3;
      repeated uint64 message_addresses = 4;
    }

    string label = 1;
    repeated Event events = 2;
  }

  repeated PeerLog peer_logs = 1;
}

message CapConnWatchLogsRequest {}

message CapConnWatchLogsResponse {
  enum Op {
    CREATE = 0;
    REMOVE = 1;
  }

  Op op = 1;
  string name = 2;
}

message CapConnLoadLogRequest {
  string name = 1;
}

message CapConnLoadLogResponse {
  CapConnLog log = 1;
}

service CapConn {
  rpc WatchLogs(CapConnWatchLogsRequest) returns (stream CapConnWatchLogsResponse);
  rpc LoadLog(CapConnLoadLogRequest) returns (CapConnLoadLogResponse);
}
