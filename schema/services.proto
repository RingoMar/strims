syntax = "proto3";

option go_package = "github.com/MemeLabs/go-ppspp/pkg/pb;pb";
option java_package = "gg.strims.ppspp.proto";
option swift_prefix = "PB";

import "api.proto";
import "chat.proto";
import "directory.proto";
import "hash_table.proto";
import "nickserv.proto";
import "peer_index.proto";
import "profile.proto";
import "pub_sub.proto";
import "rpc.proto";
import "video.proto";
import "vpn.proto";

service FrontendRPC {
  rpc CreateProfile(CreateProfileRequest) returns (CreateProfileResponse);
  rpc LoadProfile(LoadProfileRequest) returns (LoadProfileResponse);
  rpc GetProfile(GetProfileRequest) returns (GetProfileResponse);
  // rpc UpdateProfile(UpdateProfileRequest) returns (UpdateProfileResponse);
  rpc DeleteProfile(DeleteProfileRequest) returns (DeleteProfileResponse);
  rpc GetProfiles(GetProfilesRequest) returns (GetProfilesResponse);
  rpc LoadSession(LoadSessionRequest) returns (LoadSessionResponse);
  rpc CreateNetwork(CreateNetworkRequest) returns (CreateNetworkResponse);
  // rpc UpdateNetwork(UpdateNetworkRequest) returns (UpdateNetworkResponse);
  rpc DeleteNetwork(DeleteNetworkRequest) returns (DeleteNetworkResponse);
  rpc GetNetwork(GetNetworkRequest) returns (GetNetworkResponse);
  rpc GetNetworks(GetNetworksRequest) returns (GetNetworksResponse);
  rpc GetNetworkMemberships(GetNetworkMembershipsRequest) returns (GetNetworkMembershipsResponse);
  rpc DeleteNetworkMembership(DeleteNetworkMembershipRequest) returns (DeleteNetworkMembershipResponse);
  rpc CreateBootstrapClient(CreateBootstrapClientRequest) returns (CreateBootstrapClientResponse);
  rpc UpdateBootstrapClient(UpdateBootstrapClientRequest) returns (UpdateBootstrapClientResponse);
  rpc DeleteBootstrapClient(DeleteBootstrapClientRequest) returns (DeleteBootstrapClientResponse);
  rpc GetBootstrapClient(GetBootstrapClientRequest) returns (GetBootstrapClientResponse);
  rpc GetBootstrapClients(GetBootstrapClientsRequest) returns (GetBootstrapClientsResponse);
  rpc CreateChatServer(CreateChatServerRequest) returns (CreateChatServerResponse);
  rpc UpdateChatServer(UpdateChatServerRequest) returns (UpdateChatServerResponse);
  rpc DeleteChatServer(DeleteChatServerRequest) returns (DeleteChatServerResponse);
  rpc GetChatServer(GetChatServerRequest) returns (GetChatServerResponse);
  rpc GetChatServers(GetChatServersRequest) returns (GetChatServersResponse);
  rpc StartVPN(StartVPNRequest) returns (stream NetworkEvent);
  rpc StopVPN(StopVPNRequest) returns (StopVPNResponse);
  rpc JoinSwarm(JoinSwarmRequest) returns (JoinSwarmResponse);
  rpc LeaveSwarm(LeaveSwarmRequest) returns (LeaveSwarmResponse);
  // rpc GetIngressStreams(GetIngressStreamsRequest) returns (stream GetIngressStreamsResponse);
  rpc StartRTMPIngress(StartRTMPIngressRequest) returns (StartRTMPIngressResponse);
  // rpc StopRTMPIngress(StartRTMPIngressRequest) returns (StartRTMPIngressResponse);
  rpc StartHLSEgress(StartHLSEgressRequest) returns (StartHLSEgressResponse);
  rpc StopHLSEgress(StopHLSEgressRequest) returns (StopHLSEgressResponse);
  // rpc StartSwarm(StartSwarmRequest) returns (StartSwarmResponse);
  // rpc WriteToSwarm(WriteToSwarmRequest) returns (WriteToSwarmResponse);
  // rpc StopSwarm(StopSwarmRequest) returns (StopSwarmResponse);
  rpc PublishSwarm(PublishSwarmRequest) returns (PublishSwarmResponse);
  rpc PProf(PProfRequest) returns (PProfResponse);
  rpc OpenChatServer(OpenChatServerRequest) returns (stream ChatServerEvent);
  rpc OpenChatClient(OpenChatClientRequest) returns (stream ChatClientEvent);
  rpc CallChatClient(CallChatClientRequest) returns (CallChatClientResponse);
  rpc OpenVideoClient(VideoClientOpenRequest) returns (stream VideoClientEvent);
  rpc OpenVideoServer(VideoServerOpenRequest) returns (VideoServerOpenResponse);
  rpc WriteToVideoServer(VideoServerWriteRequest) returns (VideoServerWriteResponse);
  rpc ReadMetrics(ReadMetricsRequest) returns (ReadMetricsResponse);
  rpc CreateNetworkInvitation(CreateNetworkInvitationRequest) returns (CreateNetworkInvitationResponse);
  rpc CreateNetworkMembershipFromInvitation(CreateNetworkMembershipFromInvitationRequest) returns (CreateNetworkMembershipFromInvitationResponse);
  rpc GetBootstrapPeers(GetBootstrapPeersRequest) returns (GetBootstrapPeersResponse);
  rpc PublishNetworkToBootstrapPeer(PublishNetworkToBootstrapPeerRequest) returns (PublishNetworkToBootstrapPeerResponse);
}
