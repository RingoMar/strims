syntax = "proto3";

package strims.network.v1.directory;

option go_package = "github.com/MemeLabs/go-ppspp/pkg/apis/network/v1/directory;networkv1directory";
option java_package = "gg.strims.network.v1.directory";
option swift_prefix = "SND";

import "type/image.proto";
import "google/protobuf/wrappers.proto";

message ServerConfig {
  message Integrations {
    message AngelThump {
      bool enable = 1;
    }

    message Twitch {
      bool enable = 1;
      string client_id = 2;
      string client_secret = 3;
    }

    message YouTube {
      bool enable = 1;
      string public_api_key = 2;
    }

    message Swarm {
      bool enable = 1;
    }

    AngelThump angelthump = 1;
    Twitch twitch = 2;
    YouTube youtube = 3;
    Swarm swarm = 4;
  }

  Integrations integrations = 1;
}

message GetEventsRequest {
  bytes network_key = 1;
}

message TestPublishRequest {
  bytes network_key = 1;
}
message TestPublishResponse {}

message Listing {
  message Media {
    string mime_type = 1;
    string swarm_uri = 2;
  }

  message Service {
    string type = 1;
  }

  message Embed {
    enum Service {
      DIRECTORY_LISTING_EMBED_SERVICE_UNDEFINED = 0;
      DIRECTORY_LISTING_EMBED_SERVICE_ANGELTHUMP = 1;
      DIRECTORY_LISTING_EMBED_SERVICE_TWITCH_STREAM = 2;
      DIRECTORY_LISTING_EMBED_SERVICE_TWITCH_VOD = 3;
      DIRECTORY_LISTING_EMBED_SERVICE_YOUTUBE = 4;
    }

    Service service = 1;
    string id = 2;
  }

  message Chat {
    bytes key = 1;
    string name = 2;
  }

  oneof content {
    Media media = 1001;
    Service service = 1002;
    Embed embed = 1003;
    Chat chat = 1004;
  }
}

message ListingSnippetImage {
  oneof source_oneof {
    string url = 1001;
    strims.type.Image image = 1002;
  }
}

message ListingSnippet {
  string title = 1;
  string description = 2;
  repeated string tags = 3;
  string category = 4;
  string channel_name = 5;
  uint64 viewer_count = 6;
  bool live = 7;
  bool is_mature = 8;
  ListingSnippetImage thumbnail = 9;
  ListingSnippetImage channel_logo = 10;

  bytes key = 10001;
  bytes signature = 10002;
}

message ListingSnippetDelta {
  message Tags {
    repeated string tags = 1001;
  }

  google.protobuf.StringValue title = 1;
  google.protobuf.StringValue description = 2;
  google.protobuf.StringValue category = 3;
  google.protobuf.StringValue channel_name = 4;
  google.protobuf.UInt64Value viewer_count = 5;
  google.protobuf.BoolValue live = 6;
  google.protobuf.BoolValue is_mature = 7;
  google.protobuf.BytesValue key = 8;
  google.protobuf.BytesValue signature = 9;

  oneof tags_oneof {
    Tags tags = 1001;
  }

  oneof thumbnail_oneof {
    ListingSnippetImage thumbnail = 2001;
  }

  oneof channel_logo_oneof {
    ListingSnippetImage  channel_logo = 3001;
  }
}

message Event {
  message ListingChange {
    uint64 id = 1;
    Listing listing = 2;
    ListingSnippet snippet = 3;
  }

  message Unpublish {
    uint64 id = 1;
  }

  message ViewerCountChange {
    uint64 id = 1;
    uint32 count = 2;
  }

  message ViewerStateChange {
    string subject = 1;
    bool online = 2;
    repeated uint64 viewing_ids = 3;
  }

  message Ping {
    int64 time = 1;
  }

  oneof body {
    ListingChange listing_change = 1001;
    Unpublish unpublish = 1002;
    ViewerCountChange viewer_count_change = 1003;
    ViewerStateChange viewer_state_change = 1004;
    Ping ping = 1005;
  }
}

message EventBroadcast {
  repeated Event events = 1;
}

message PublishRequest {
  Listing listing = 1;
}

message PublishResponse {
  uint64 id = 1;
}

message UnpublishRequest {
  uint64 id = 1;
}

message UnpublishResponse {}

message JoinRequest {
  uint64 id = 1;
}

message JoinResponse {}

message PartRequest {
  uint64 id = 1;
}

message PartResponse {}

message PingRequest {}

message PingResponse {}

service Directory {
  rpc Publish(PublishRequest) returns (PublishResponse);
  rpc Unpublish(UnpublishRequest) returns (UnpublishResponse);
  rpc Join(JoinRequest) returns (JoinResponse);
  rpc Part(PartRequest) returns (PartResponse);
  rpc Ping(PingRequest) returns (PingResponse);
}

message FrontendOpenRequest {}

message FrontendOpenResponse {
  message Close {}

  uint64 network_id = 1;
  bytes network_key = 2;
  oneof body {
    Close close = 1001;
    EventBroadcast broadcast = 1002;
  }
}

message FrontendTestRequest {
  bytes network_key = 1;
}

message FrontendTestResponse {}

service DirectoryFrontend {
  rpc Open(FrontendOpenRequest) returns (stream FrontendOpenResponse);
  rpc Test(FrontendTestRequest) returns (FrontendTestResponse);
}

message SnippetSubscribeRequest {
  bytes swarm_id = 1;
}

message SnippetSubscribeResponse {
  ListingSnippetDelta snippet_delta = 1;
}

service DirectorySnippet {
  rpc Subscribe(SnippetSubscribeRequest) returns (stream SnippetSubscribeResponse);
}
