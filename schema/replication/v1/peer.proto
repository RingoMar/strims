// Copyright 2022 Strims contributors
// SPDX-License-Identifier: AGPL-3.0-only

syntax = "proto3";

package strims.replication.v1;

option go_package = "github.com/MemeLabs/strims/pkg/apis/replication/v1;replicationv1";
option java_package = "gg.strims.replication.v1";
option swift_prefix = "SNT";

import "replication/v1/replication.proto";
import "profile/v1/profile.proto";

message PeerOpenRequest {
  uint32 store_version = 1;
  uint64 replica_id = 2;
  repeated Checkpoint checkpoints = 3;
}

message PeerOpenResponse {
  uint32 store_version = 1;
  uint64 replica_id = 2;
  repeated Checkpoint checkpoints = 3;
}

message PeerBootstrapRequest {
  repeated Event events = 1;
  repeated EventLog logs = 2;
}

message PeerBootstrapResponse {
  Checkpoint checkpoint = 1;
}

message PeerSyncRequest {
  repeated EventLog logs = 1;
}

message PeerSyncResponse {
  Checkpoint checkpoint = 1;
}

message PeerAllocateProfileIDsRequest {}

message PeerAllocateProfileIDsResponse {
  profile.v1.ProfileID profile_id = 1;
}

service ReplicationPeer {
  rpc Open(PeerOpenRequest) returns (PeerOpenResponse);
  rpc Bootstrap(PeerBootstrapRequest) returns (PeerBootstrapResponse);
  rpc Sync(PeerSyncRequest) returns (PeerSyncResponse);
  rpc AllocateProfileIDs(PeerAllocateProfileIDsRequest) returns (PeerAllocateProfileIDsResponse);
}
