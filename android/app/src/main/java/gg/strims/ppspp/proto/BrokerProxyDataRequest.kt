// Code generated by Wire protocol buffer compiler, do not edit.
// Source: BrokerProxyDataRequest in vpn.proto
package gg.strims.ppspp.proto

import com.squareup.wire.FieldEncoding
import com.squareup.wire.Message
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.ProtoReader
import com.squareup.wire.ProtoWriter
import com.squareup.wire.Syntax.PROTO_3
import com.squareup.wire.WireField
import kotlin.Any
import kotlin.AssertionError
import kotlin.Boolean
import kotlin.Deprecated
import kotlin.DeprecationLevel
import kotlin.Int
import kotlin.Long
import kotlin.Nothing
import kotlin.String
import kotlin.hashCode
import kotlin.jvm.JvmField
import okio.ByteString

class BrokerProxyDataRequest(
  @field:WireField(
    tag = 1,
    adapter = "com.squareup.wire.ProtoAdapter#UINT64",
    label = WireField.Label.OMIT_IDENTITY,
    jsonName = "proxyId"
  )
  val proxy_id: Long = 0L,
  @field:WireField(
    tag = 2,
    adapter = "com.squareup.wire.ProtoAdapter#BYTES",
    label = WireField.Label.OMIT_IDENTITY
  )
  val data: ByteString = ByteString.EMPTY,
  unknownFields: ByteString = ByteString.EMPTY
) : Message<BrokerProxyDataRequest, Nothing>(ADAPTER, unknownFields) {
  @Deprecated(
    message = "Shouldn't be used in Kotlin",
    level = DeprecationLevel.HIDDEN
  )
  override fun newBuilder(): Nothing = throw AssertionError()

  override fun equals(other: Any?): Boolean {
    if (other === this) return true
    if (other !is BrokerProxyDataRequest) return false
    if (unknownFields != other.unknownFields) return false
    if (proxy_id != other.proxy_id) return false
    if (data != other.data) return false
    return true
  }

  override fun hashCode(): Int {
    var result = super.hashCode
    if (result == 0) {
      result = unknownFields.hashCode()
      result = result * 37 + proxy_id.hashCode()
      result = result * 37 + data.hashCode()
      super.hashCode = result
    }
    return result
  }

  override fun toString(): String {
    val result = mutableListOf<String>()
    result += """proxy_id=$proxy_id"""
    result += """data=$data"""
    return result.joinToString(prefix = "BrokerProxyDataRequest{", separator = ", ", postfix = "}")
  }

  fun copy(
    proxy_id: Long = this.proxy_id,
    data: ByteString = this.data,
    unknownFields: ByteString = this.unknownFields
  ): BrokerProxyDataRequest = BrokerProxyDataRequest(proxy_id, data, unknownFields)

  companion object {
    @JvmField
    val ADAPTER: ProtoAdapter<BrokerProxyDataRequest> = object :
        ProtoAdapter<BrokerProxyDataRequest>(
      FieldEncoding.LENGTH_DELIMITED, 
      BrokerProxyDataRequest::class, 
      "type.googleapis.com/BrokerProxyDataRequest", 
      PROTO_3, 
      null
    ) {
      override fun encodedSize(value: BrokerProxyDataRequest): Int {
        var size = value.unknownFields.size
        if (value.proxy_id != 0L) size += ProtoAdapter.UINT64.encodedSizeWithTag(1, value.proxy_id)
        if (value.data != ByteString.EMPTY) size += ProtoAdapter.BYTES.encodedSizeWithTag(2,
            value.data)
        return size
      }

      override fun encode(writer: ProtoWriter, value: BrokerProxyDataRequest) {
        if (value.proxy_id != 0L) ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.proxy_id)
        if (value.data != ByteString.EMPTY) ProtoAdapter.BYTES.encodeWithTag(writer, 2, value.data)
        writer.writeBytes(value.unknownFields)
      }

      override fun decode(reader: ProtoReader): BrokerProxyDataRequest {
        var proxy_id: Long = 0L
        var data: ByteString = ByteString.EMPTY
        val unknownFields = reader.forEachTag { tag ->
          when (tag) {
            1 -> proxy_id = ProtoAdapter.UINT64.decode(reader)
            2 -> data = ProtoAdapter.BYTES.decode(reader)
            else -> reader.readUnknownField(tag)
          }
        }
        return BrokerProxyDataRequest(
          proxy_id = proxy_id,
          data = data,
          unknownFields = unknownFields
        )
      }

      override fun redact(value: BrokerProxyDataRequest): BrokerProxyDataRequest = value.copy(
        unknownFields = ByteString.EMPTY
      )
    }

    private const val serialVersionUID: Long = 0L
  }
}
