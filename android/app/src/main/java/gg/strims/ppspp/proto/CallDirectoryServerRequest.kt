// Code generated by Wire protocol buffer compiler, do not edit.
// Source: CallDirectoryServerRequest in directory.proto
package gg.strims.ppspp.proto

import com.squareup.wire.FieldEncoding
import com.squareup.wire.Message
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.ProtoReader
import com.squareup.wire.ProtoWriter
import com.squareup.wire.Syntax
import com.squareup.wire.Syntax.PROTO_3
import com.squareup.wire.WireField
import kotlin.Any
import kotlin.AssertionError
import kotlin.Boolean
import kotlin.Deprecated
import kotlin.DeprecationLevel
import kotlin.Int
import kotlin.Long
import kotlin.Nothing
import kotlin.String
import kotlin.hashCode
import kotlin.jvm.JvmField
import okio.ByteString

class CallDirectoryServerRequest(
  @field:WireField(
    tag = 1,
    adapter = "com.squareup.wire.ProtoAdapter#BYTES",
    label = WireField.Label.OMIT_IDENTITY,
    jsonName = "networkKey"
  )
  val network_key: ByteString = ByteString.EMPTY,
  @field:WireField(
    tag = 2,
    adapter = "gg.strims.ppspp.proto.CallDirectoryServerRequest${'$'}RemoveListing#ADAPTER"
  )
  val listing: RemoveListing? = null,
  unknownFields: ByteString = ByteString.EMPTY
) : Message<CallDirectoryServerRequest, Nothing>(ADAPTER, unknownFields) {
  init {
  }

  @Deprecated(
    message = "Shouldn't be used in Kotlin",
    level = DeprecationLevel.HIDDEN
  )
  override fun newBuilder(): Nothing = throw AssertionError()

  override fun equals(other: Any?): Boolean {
    if (other === this) return true
    if (other !is CallDirectoryServerRequest) return false
    if (unknownFields != other.unknownFields) return false
    if (network_key != other.network_key) return false
    if (listing != other.listing) return false
    return true
  }

  override fun hashCode(): Int {
    var result = super.hashCode
    if (result == 0) {
      result = unknownFields.hashCode()
      result = result * 37 + network_key.hashCode()
      result = result * 37 + listing.hashCode()
      super.hashCode = result
    }
    return result
  }

  override fun toString(): String {
    val result = mutableListOf<String>()
    result += """network_key=$network_key"""
    if (listing != null) result += """listing=$listing"""
    return result.joinToString(prefix = "CallDirectoryServerRequest{", separator = ", ", postfix =
        "}")
  }

  fun copy(
    network_key: ByteString = this.network_key,
    listing: RemoveListing? = this.listing,
    unknownFields: ByteString = this.unknownFields
  ): CallDirectoryServerRequest = CallDirectoryServerRequest(network_key, listing, unknownFields)

  companion object {
    @JvmField
    val ADAPTER: ProtoAdapter<CallDirectoryServerRequest> = object :
        ProtoAdapter<CallDirectoryServerRequest>(
      FieldEncoding.LENGTH_DELIMITED, 
      CallDirectoryServerRequest::class, 
      "type.googleapis.com/CallDirectoryServerRequest", 
      PROTO_3, 
      null
    ) {
      override fun encodedSize(value: CallDirectoryServerRequest): Int {
        var size = value.unknownFields.size
        if (value.network_key != ByteString.EMPTY) size += ProtoAdapter.BYTES.encodedSizeWithTag(1,
            value.network_key)
        size += RemoveListing.ADAPTER.encodedSizeWithTag(2, value.listing)
        return size
      }

      override fun encode(writer: ProtoWriter, value: CallDirectoryServerRequest) {
        if (value.network_key != ByteString.EMPTY) ProtoAdapter.BYTES.encodeWithTag(writer, 1,
            value.network_key)
        RemoveListing.ADAPTER.encodeWithTag(writer, 2, value.listing)
        writer.writeBytes(value.unknownFields)
      }

      override fun decode(reader: ProtoReader): CallDirectoryServerRequest {
        var network_key: ByteString = ByteString.EMPTY
        var listing: RemoveListing? = null
        val unknownFields = reader.forEachTag { tag ->
          when (tag) {
            1 -> network_key = ProtoAdapter.BYTES.decode(reader)
            2 -> listing = RemoveListing.ADAPTER.decode(reader)
            else -> reader.readUnknownField(tag)
          }
        }
        return CallDirectoryServerRequest(
          network_key = network_key,
          listing = listing,
          unknownFields = unknownFields
        )
      }

      override fun redact(value: CallDirectoryServerRequest): CallDirectoryServerRequest =
          value.copy(
        listing = value.listing?.let(RemoveListing.ADAPTER::redact),
        unknownFields = ByteString.EMPTY
      )
    }

    private const val serialVersionUID: Long = 0L
  }

  class RemoveListing(
    @field:WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#BYTES",
      label = WireField.Label.OMIT_IDENTITY
    )
    val key: ByteString = ByteString.EMPTY,
    unknownFields: ByteString = ByteString.EMPTY
  ) : Message<RemoveListing, Nothing>(ADAPTER, unknownFields) {
    @Deprecated(
      message = "Shouldn't be used in Kotlin",
      level = DeprecationLevel.HIDDEN
    )
    override fun newBuilder(): Nothing = throw AssertionError()

    override fun equals(other: Any?): Boolean {
      if (other === this) return true
      if (other !is RemoveListing) return false
      if (unknownFields != other.unknownFields) return false
      if (key != other.key) return false
      return true
    }

    override fun hashCode(): Int {
      var result = super.hashCode
      if (result == 0) {
        result = unknownFields.hashCode()
        result = result * 37 + key.hashCode()
        super.hashCode = result
      }
      return result
    }

    override fun toString(): String {
      val result = mutableListOf<String>()
      result += """key=$key"""
      return result.joinToString(prefix = "RemoveListing{", separator = ", ", postfix = "}")
    }

    fun copy(key: ByteString = this.key, unknownFields: ByteString = this.unknownFields):
        RemoveListing = RemoveListing(key, unknownFields)

    companion object {
      @JvmField
      val ADAPTER: ProtoAdapter<RemoveListing> = object : ProtoAdapter<RemoveListing>(
        FieldEncoding.LENGTH_DELIMITED, 
        RemoveListing::class, 
        "type.googleapis.com/CallDirectoryServerRequest.RemoveListing", 
        PROTO_3, 
        null
      ) {
        override fun encodedSize(value: RemoveListing): Int {
          var size = value.unknownFields.size
          if (value.key != ByteString.EMPTY) size += ProtoAdapter.BYTES.encodedSizeWithTag(1,
              value.key)
          return size
        }

        override fun encode(writer: ProtoWriter, value: RemoveListing) {
          if (value.key != ByteString.EMPTY) ProtoAdapter.BYTES.encodeWithTag(writer, 1, value.key)
          writer.writeBytes(value.unknownFields)
        }

        override fun decode(reader: ProtoReader): RemoveListing {
          var key: ByteString = ByteString.EMPTY
          val unknownFields = reader.forEachTag { tag ->
            when (tag) {
              1 -> key = ProtoAdapter.BYTES.decode(reader)
              else -> reader.readUnknownField(tag)
            }
          }
          return RemoveListing(
            key = key,
            unknownFields = unknownFields
          )
        }

        override fun redact(value: RemoveListing): RemoveListing = value.copy(
          unknownFields = ByteString.EMPTY
        )
      }

      private const val serialVersionUID: Long = 0L
    }
  }
}
