// Code generated by Wire protocol buffer compiler, do not edit.
// Source: strims.type.KeyType in type/key.proto
package gg.strims.type

import com.squareup.wire.EnumAdapter
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.Syntax.PROTO_3
import com.squareup.wire.WireEnum
import kotlin.Int
import kotlin.jvm.JvmField
import kotlin.jvm.JvmStatic

enum class KeyType(
  override val value: Int
) : WireEnum {
  KEY_TYPE_UNDEFINED(0),

  KEY_TYPE_ED25519(1),

  KEY_TYPE_X25519(2);

  companion object {
    @JvmField
    val ADAPTER: ProtoAdapter<KeyType> = object : EnumAdapter<KeyType>(
      KeyType::class, 
      PROTO_3, 
      KeyType.KEY_TYPE_UNDEFINED
    ) {
      override fun fromValue(value: Int): KeyType? = KeyType.fromValue(value)
    }

    @JvmStatic
    fun fromValue(value: Int): KeyType? = when (value) {
      0 -> KEY_TYPE_UNDEFINED
      1 -> KEY_TYPE_ED25519
      2 -> KEY_TYPE_X25519
      else -> null
    }
  }
}
