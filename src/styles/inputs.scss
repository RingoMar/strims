@import "colors.scss";
@import "mixins.scss";

.input {
  font-size: 1em;
  padding: 0.5em 0.8em;
  margin: 0.25em 0;
  border-radius: 0.25em;
  box-shadow: rgba(0, 0, 0, 0.25) inset 1px 1px 1px;
  background: var(--input-bg);
  color: var(--input-color);
  flex: 1;

  &::placeholder {
    color: var(--input-placeholder-color);
  }

  &:disabled {
    background: var(--input-disabled-bg);
    color: var(--input-disabled-color);
  }
}

.input_error {
  display: block;
  background: lighten($red-base, 30%);
  padding: 0.5em;
  border: 1px solid lighten($red-base, 40%);
  color: white;
  border-radius: 0.25em;
  box-shadow: rgba(0, 0, 0, 0.25) 1px 1px 1px;

  &__icon {
    padding-right: 0.5em;
    vertical-align: middle;
    height: 1.3em;
    width: 1.3em;
  }

  &__text {
    display: inline;
    vertical-align: middle;

    &::first-letter {
      text-transform: capitalize;
    }
  }
}

.input_label {
  display: block;
  display: flex;
  flex-direction: column;
  margin: 10px 0;

  &--required > :first-child::after {
    content: "*";
    color: red;
    padding-left: 0.2em;
  }

  &__text {
    display: block;
    font-size: 1em;
    text-transform: uppercase;
  }

  &__body {
    display: flex;
    flex-direction: column;
  }
}

label.input_label {
  cursor: pointer;
}

.input_buttons {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: flex-end;
}

.input_button {
  background: var(--input-bg);

  &:hover:not(:disabled) {
    cursor: pointer;
    background: var(--input-button-hover-bg);
    color: var(--input-button-hover-color);
  }

  &:disabled {
    background: var(--input-disabled-bg);
    color: var(--input-disabled-color);
  }

  &--borderless {
    border: none;
    box-shadow: none;
  }
}

.input_textarea {
  resize: vertical;
}

.input_toggle {
  display: none;

  &__switch,
  &__switch__track {
    border-radius: 0.5em;
    height: 1em;
    overflow: hidden;
    position: relative;
    width: 2em;
  }

  &__switch {
    margin-top: 0.2em;

    &:before,
    &__track:after {
      content: "";
      display: block;
      height: 1em;
      position: absolute;
      transition: all 200ms ease-in-out;
    }

    &:before {
      background-image: linear-gradient(90deg, $green-200 0%, $green-200 50%, var(--input-bg) 50%);
      transform: translateX(-2em);
      width: 4em;
    }

    &__track {
      box-shadow: rgba(0, 0, 0, 0.25) inset 1px 1px 1px;

      &:after {
        background: var(--input-fg);
        border-radius: 0.5em;
        box-shadow: rgba(0, 0, 0, 0.25) 1px 1px 1px;
        transform: translateX(0);
        width: 1em;
      }
    }
  }

  :checked + &__switch:before {
    transform: translateX(-0.5em);
  }
  :checked + &__switch &__switch__track:after {
    transform: translateX(1em);
  }
}

.input_avatar {
  height: 80px;
  width: 80px;
  cursor: pointer;

  &__placeholder {
    height: 80px;
    width: 80px;
    border: 3px dashed var(--input-border-color);
    border-radius: 50%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

    &__icon {
      color: $slate-500;
    }

    &__text {
      color: $slate-500;
      text-transform: uppercase;
      font-size: 0.8em;
    }
  }

  &__preview {
    height: 80px;
    width: 80px;
    border-radius: 50%;
    object-fit: cover;
  }
}

.input_image {
  height: 128px;
  width: 128px;
  cursor: pointer;

  &__placeholder {
    height: 128px;
    width: 128px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

    &__icon {
      color: $slate-500;
    }

    &__text {
      color: $slate-500;
      text-transform: uppercase;
      font-size: 0.8em;
    }
  }

  &__preview {
    height: 128px;
    width: 128px;
    object-fit: contain;
  }
}

.thing_form,
.thing_list {
  max-width: 1000px;
  display: flex;
  flex-direction: column;

  .input_label,
  .thing_list__item {
    text-align: left;
    border-width: 1px;
    border-style: solid;
    border-bottom-style: none;
    padding: 10px;
    margin: 0;
    border-color: var(--card-border);
    background: var(--card-bg);

    &:first-child {
      border-top-left-radius: 5px;
      border-top-right-radius: 5px;
    }

    &:last-child {
      border-bottom-left-radius: 5px;
      border-bottom-right-radius: 5px;
      border-bottom-style: solid;
    }
  }
}

.thing_form {
  max-width: 1000px;
  display: flex;
  flex-direction: column;

  .input_label {
    text-align: left;
    border-width: 1px;
    border-style: solid;
    border-bottom-style: none;
    padding: 10px;
    margin: 0;
    display: flex;
    flex-direction: row;

    &__text {
      display: block;
      flex: 200px 0;
      font-size: 0.8em;
      line-height: 2em;
    }

    &__body {
      flex: 1 1;
    }

    &__description {
      font-size: 0.8em;
      padding: 0.5em 0;
    }
  }
}

.input_select {
  .react_select {
    &-container {
    }

    &__single-value {
      color: var(--input-color);
    }

    &__control {
      box-shadow: rgba(0, 0, 0, 0.25) inset 1px 1px 1px;
      border-style: none;
      background: var(--input-bg);
      color: var(--input-color);
    }

    &__value-container {
    }

    &__indicators {
    }

    &__menu {
      background: var(--input-bg);
      color: var(--input-color);
    }

    &__menu-list {
    }

    &__option {
      background: var(--input-bg);
      color: var(--input-color);

      &--is-disabled {
        color: var(--input-disabled-color);
      }

      &--is-focused,
      &--is-selected {
        background: var(--input-focus-bg);
        color: var(--input-focus-color);
      }
    }
  }
}
